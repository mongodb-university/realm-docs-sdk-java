{"commentText": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface.\n Using a DynamicRealmObject is slower than using the regular RealmObject class.", "name": "DynamicRealmObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 44, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface.\n Using a DynamicRealmObject is slower than using the regular RealmObject class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface.\n Using a DynamicRealmObject is slower than using the regular RealmObject class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class that wraps a normal RealmObject in order to allow dynamic access instead of a typed interface."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [{"element": {"commentText": "", "name": "value", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": false, "position": {"line": 0, "column": 0, "file": "SuppressWarnings.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "java.lang"}, "qualifiedName": "java.lang.SuppressWarnings.value", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, "value": "\"WeakerAccess\""}], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"io.realm.RealmObject": ["deleteFromRealm", "deleteFromRealm", "isValid", "isValid", "isFrozen", "freeze", "isFrozen", "freeze", "isLoaded", "isLoaded", "isManaged", "isManaged", "getRealm", "getRealm", "load", "load", "addChangeListener", "addChangeListener", "addChangeListener", "addChangeListener", "removeChangeListener", "removeChangeListener", "removeChangeListener", "removeChangeListener", "removeAllChangeListeners", "removeAllChangeListeners", "asFlowable", "asChangesetObservable", "asFlowable", "asChangesetObservable"], "java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"], "io.realm.internal.RealmObjectProxy": ["realm$injectObjectContext", "realmGet$proxyState"], "io.realm.RealmModel": []}, "interfaceTypes": [{"_class": "ClassDoc", "asString": "io.realm.internal.RealmObjectProxy", "typeName": "RealmObjectProxy", "qualifiedTypeName": "io.realm.internal.RealmObjectProxy", "simpleTypeName": "RealmObjectProxy", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Returns the value for the given field.", "name": "get", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 96, "column": 18, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field."}], "parameterName": "fieldName", "parameterComment": "name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the field value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "ClassCastException if the field doesn't contain a field of the defined return type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field doesn't contain a field of the defined return type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ClassCastException if the field doesn't contain a field of the defined return type."}], "exceptionName": "ClassCastException", "exceptionComment": "if the field doesn't contain a field of the defined return type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.ClassCastException", "typeName": "ClassCastException", "qualifiedTypeName": "java.lang.ClassCastException", "simpleTypeName": "ClassCastException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the value for the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the value for the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the value for the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the value for the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the value for the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the value for the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.get", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [{"element": {"commentText": "", "name": "value", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": false, "position": {"line": 0, "column": 0, "file": "SuppressWarnings.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "java.lang"}, "qualifiedName": "java.lang.SuppressWarnings.value", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, "value": "{\"unchecked\", \"TypeParameterUnusedInFormals\"}"}], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "ClassCastException if the field doesn't contain a field of the defined return type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field doesn't contain a field of the defined return type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ClassCastException if the field doesn't contain a field of the defined return type."}], "exceptionName": "ClassCastException", "exceptionComment": "if the field doesn't contain a field of the defined return type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.ClassCastException", "typeName": "ClassCastException", "qualifiedTypeName": "java.lang.ClassCastException", "simpleTypeName": "ClassCastException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field."}], "parameterName": "fieldName", "parameterComment": "name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Returns the {@code boolean} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getBoolean", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 143, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the boolean value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the boolean value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the boolean value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain booleans.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain booleans."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain booleans."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain booleans.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "boolean", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "boolean", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getBoolean", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain booleans.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain booleans."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain booleans."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain booleans.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code int} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getInt", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 166, "column": 16, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the int value. Integer values exceeding {@code Integer.MAX_VALUE} will wrap.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the int value. Integer values exceeding "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer.MAX_VALUE"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will wrap."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the int value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getInt", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code short} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getShort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 181, "column": 18, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the short value. Integer values exceeding {@code Short.MAX_VALUE} will wrap.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the short value. Integer values exceeding "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Short.MAX_VALUE"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will wrap."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the short value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "short", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "short", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getShort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "short", "typeName": "short", "qualifiedTypeName": "short", "simpleTypeName": "short", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code long} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getLong", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 196, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the long value. Integer values exceeding {@code Long.MAX_VALUE} will wrap.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the long value. Integer values exceeding "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Long.MAX_VALUE"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will wrap."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the long value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "long", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "long", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getLong", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code byte} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getByte", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 219, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the byte value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the byte value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the byte value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "byte", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "byte", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getByte", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain integers."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain integers."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain integers.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "byte", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code float} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getFloat", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 234, "column": 18, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the float value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the float value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the float value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain floats.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain floats."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain floats."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain floats.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "float", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "float", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getFloat", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain floats.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain floats."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain floats."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain floats.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "float", "typeName": "float", "qualifiedTypeName": "float", "simpleTypeName": "float", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code double} value for a given field.\n <p>\n If the field is nullable, use {@link #isNull(String)} to check for {@code null} instead of using\n this method.", "name": "getDouble", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 257, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the double value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the double value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the double value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain doubles.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain doubles."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain doubles."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain doubles.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "double", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.\n <p>\n If the field is nullable, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isNull(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isNull(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isNull(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to check for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to check for"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of using\n this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of using\n this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "double", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getDouble", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain doubles.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain doubles."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain doubles."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain doubles.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if the return value would be {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if the return value would be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if the return value would be {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "double", "typeName": "double", "qualifiedTypeName": "double", "simpleTypeName": "double", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code byte[]} value for a given field.", "name": "getBlob", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 276, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the byte[] value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the byte[] value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the byte[] value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain binary data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain binary data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain binary data."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain binary data.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "byte[]", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte[]"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte[]"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "byte[]", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte[]"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte[]"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getBlob", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain binary data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain binary data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain binary data."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain binary data.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "byte[]", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "[]", "isPrimitive": true, "elementType": {"_class": "Type", "asString": "byte", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code String} value for a given field.", "name": "getString", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 295, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the String value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the String value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the String value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Strings.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain Strings."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Strings."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain Strings.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "String", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "String", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getString", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Strings.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain Strings."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Strings."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain Strings.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@code Date} value for a given field.", "name": "getDate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 314, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the Date value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Date value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Date value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Dates.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain Dates."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Dates."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain Dates.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Date", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Date", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getDate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Dates.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain Dates."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Dates."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain Dates.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.util.Date", "typeName": "Date", "qualifiedTypeName": "java.util.Date", "simpleTypeName": "Date", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@code Decimal128} value for a given field.", "name": "getDecimal128", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 333, "column": 23, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the Decimal128 value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Decimal128 value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Decimal128 value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Decimal128.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain Decimal128."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Decimal128."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain Decimal128.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Decimal128", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Decimal128", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getDecimal128", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Decimal128.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain Decimal128."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain Decimal128."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain Decimal128.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "Decimal128", "typeName": "Decimal128", "qualifiedTypeName": "Decimal128", "simpleTypeName": "Decimal128", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the {@code ObjectId} value for a given field.", "name": "getObjectId", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 352, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the ObjectId value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the ObjectId value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the ObjectId value."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain ObjectId.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain ObjectId."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain ObjectId."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain ObjectId.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "ObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "ObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value for a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getObjectId", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain ObjectId.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain ObjectId."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain ObjectId."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain ObjectId.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the object being linked to from this field.", "name": "getObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 372, "column": 31, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link DynamicRealmObject} representation of the linked object or {@code null} if no object is linked.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representation of the linked object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no object is linked."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representation of the linked object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no object is linked."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain links to other objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain links to other objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain links to other objects."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain links to other objects.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the object being linked to from this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the object being linked to from this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the object being linked to from this field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the object being linked to from this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the object being linked to from this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the object being linked to from this field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain links to other objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain links to other objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain links to other objects."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain links to other objects.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link RealmList} of {@link DynamicRealmObject}s being linked from the given field.\n <p>\n If the list contains primitive types, use {@link #getList(String, Class)} instead.", "name": "getList", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 395, "column": 42, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link RealmList} data for this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " data for this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " data for this field."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain a list of objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of objects."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain a list of objects.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s being linked from the given field.\n <p>\n If the list contains primitive types, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s being linked from the given field.\n <p>\n If the list contains primitive types, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s being linked from the given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getList(String, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getList(String, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getList(String, Class)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getList(String, Class)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s being linked from the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s being linked from the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s being linked from the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getList", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain a list of objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of objects."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain a list of objects.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmList<io.realm.DynamicRealmObject>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<io.realm.DynamicRealmObject>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<io.realm.DynamicRealmObject>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}}, {"commentText": "Returns the {@link RealmList} containing only primitive values.\n\n <p>\n If the list contains references to other Realm objects, use {@link #getList(String)} instead.", "name": "getList", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 422, "column": 29, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "primitiveType the type of elements in the list. Only primitive types are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of elements in the list. Only primitive types are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "primitiveType the type of elements in the list."}], "parameterName": "primitiveType", "parameterComment": "the type of elements in the list. Only primitive types are supported.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link RealmList} data for this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " data for this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " data for this field."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of primitive objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain a list of primitive objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of primitive objects."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain a list of primitive objects.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing only primitive values.\n\n <p>\n If the list contains references to other Realm objects, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing only primitive values.\n\n <p>\n If the list contains references to other Realm objects, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "containing only primitive values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getList(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getList(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getList(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getList(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing only primitive values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing only primitive values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "containing only primitive values."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getList", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "primitiveType", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> primitiveType", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of primitive objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or it doesn't contain a list of primitive objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or it doesn't contain a list of primitive objects."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or it doesn't contain a list of primitive objects.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "primitiveType the type of elements in the list. Only primitive types are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the type of elements in the list. Only primitive types are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "primitiveType the type of elements in the list."}], "parameterName": "primitiveType", "parameterComment": "the type of elements in the list. Only primitive types are supported.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.Class<E>)", "flatSignature": "(String, Class<E>)", "typeParameters": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}}, {"commentText": "Checks if the value of a given field is {@code null}.", "name": "isNull", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 473, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if field value is null, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field value is null, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field value is null, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the value of a given field is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the value of a given field is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the value of a given field is"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the value of a given field is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the value of a given field is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the value of a given field is"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.isNull", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the name of the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the name of the field."}], "parameterName": "fieldName", "parameterComment": "the name of the field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Checks whether an object has the given field or not.", "name": "hasField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 514, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to check."}], "parameterName": "fieldName", "parameterComment": "field name to check.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the object has a field with the given name, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the object has a field with the given name, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the object has a field with the given name, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to check."}], "parameterName": "fieldName", "parameterComment": "field name to check.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks whether an object has the given field or not.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks whether an object has the given field or not."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks whether an object has the given field or not."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks whether an object has the given field or not.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks whether an object has the given field or not."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks whether an object has the given field or not."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.hasField", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to check."}], "parameterName": "fieldName", "parameterComment": "field name to check.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the list of field names on this object.", "name": "getFieldNames", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 529, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "list of field names on this objects or the empty list if the object doesn't have any fields.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of field names on this objects or the empty list if the object doesn't have any fields."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of field names on this objects or the empty list if the object doesn't have any fields."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the list of field names on this object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the list of field names on this object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the list of field names on this object."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the list of field names on this object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the list of field names on this object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the list of field names on this object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getFieldNames", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the value for the given field. This method will automatically try to convert numbers and\n booleans that are given as {@code String} to their appropriate type. For example {@code \"10\"}\n will be converted to {@code 10} if the field type is {@code int}.\n <p>\n Using the typed setters will be faster than using this method.", "name": "set", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 547, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NumberFormatException if a String based number cannot be converted properly.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a String based number cannot be converted properly."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NumberFormatException if a String based number cannot be converted properly."}], "exceptionName": "NumberFormatException", "exceptionComment": "if a String based number cannot be converted properly.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NumberFormatException", "typeName": "NumberFormatException", "qualifiedTypeName": "java.lang.NumberFormatException", "simpleTypeName": "NumberFormatException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value for the given field. This method will automatically try to convert numbers and\n booleans that are given as ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value for the given field. This method will automatically try to convert numbers and\n booleans that are given as "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value for the given field."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "String", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to their appropriate type. For example ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to their appropriate type. For example "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to their appropriate type."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\"10\"", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\"10\""}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\"10\""}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be converted to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be converted to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be converted to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "10", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "10"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "10"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the field type is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the field type is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field type is"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Using the typed setters will be faster than using this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Using the typed setters will be faster than using this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value for the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value for the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value for the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.set", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [{"element": {"commentText": "", "name": "value", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": false, "position": {"line": 0, "column": 0, "file": "SuppressWarnings.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "java.lang"}, "qualifiedName": "java.lang.SuppressWarnings.value", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, "value": "\"unchecked\""}], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "value", "typeName": "Object", "asString": "Object value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or if the input value cannot be converted\n to the appropriate input type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NumberFormatException if a String based number cannot be converted properly.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a String based number cannot be converted properly."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NumberFormatException if a String based number cannot be converted properly."}], "exceptionName": "NumberFormatException", "exceptionComment": "if a String based number cannot be converted properly.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NumberFormatException", "typeName": "NumberFormatException", "qualifiedTypeName": "java.lang.NumberFormatException", "simpleTypeName": "NumberFormatException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String, java.lang.Object)", "flatSignature": "(String, Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code boolean} value of the given field.", "name": "setBoolean", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 638, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to update."}], "parameterName": "fieldName", "parameterComment": "field name to update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a boolean field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a boolean field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a boolean field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a boolean field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to update."}], "parameterName": "fieldName", "parameterComment": "field name to update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "boolean", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "boolean", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "boolean"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setBoolean", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "boolean", "asString": "boolean value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a boolean field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a boolean field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a boolean field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a boolean field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to update."}], "parameterName": "fieldName", "parameterComment": "field name to update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, boolean)", "flatSignature": "(String, boolean)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code short} value of the given field.", "name": "setShort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 653, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "short", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "short", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "short"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setShort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "short", "typeName": "short", "qualifiedTypeName": "short", "simpleTypeName": "short", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "short", "asString": "short value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, short)", "flatSignature": "(String, short)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code int} value of the given field.", "name": "setInt", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 669, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to update."}], "parameterName": "fieldName", "parameterComment": "field name to update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to update."}], "parameterName": "fieldName", "parameterComment": "field name to update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setInt", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "int", "asString": "int value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to update."}], "parameterName": "fieldName", "parameterComment": "field name to update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, int)", "flatSignature": "(String, int)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code long} value of the given field.", "name": "setLong", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 685, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "long", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "long", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "long"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setLong", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "long", "asString": "long value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, long)", "flatSignature": "(String, long)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code byte} value of the given field.", "name": "setByte", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 701, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "byte", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "byte", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "byte"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setByte", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "byte", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "byte", "asString": "byte value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't an integer field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't an integer field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't an integer field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, byte)", "flatSignature": "(String, byte)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code float} value of the given field.", "name": "setFloat", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 716, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a float field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a float field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a float field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a float field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "float", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "float", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "float"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setFloat", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "float", "typeName": "float", "qualifiedTypeName": "float", "simpleTypeName": "float", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "float", "asString": "float value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a float field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a float field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a float field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a float field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, float)", "flatSignature": "(String, float)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code double} value of the given field.", "name": "setDouble", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 730, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a double field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a double field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a double field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a double field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "double", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "double", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "double"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setDouble", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "double", "typeName": "double", "qualifiedTypeName": "double", "simpleTypeName": "double", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "double", "asString": "double value", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a double field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a double field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a double field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a double field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, double)", "flatSignature": "(String, double)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code String} value of the given field.", "name": "setString", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 745, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a String field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a String field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a String field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a String field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "String", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "String", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "String"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setString", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "value", "typeName": "String", "asString": "String value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a String field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a String field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a String field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a String field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String)", "flatSignature": "(String, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the binary value of the given field.", "name": "setBlob", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 760, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a binary field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a binary field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a binary field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a binary field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the binary value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the binary value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the binary value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the binary value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the binary value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the binary value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setBlob", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "byte[]", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "[]", "isPrimitive": true, "elementType": {"_class": "Type", "asString": "byte", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "byte[]", "asString": "byte[] value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a binary field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a binary field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a binary field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a binary field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, byte[])", "flatSignature": "(String, byte[])", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code Date} value of the given field.", "name": "setDate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 774, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Date field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a Date field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Date field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a Date field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Date", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Date", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Date"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setDate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.util.Date", "typeName": "Date", "qualifiedTypeName": "java.util.Date", "simpleTypeName": "Date", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "value", "typeName": "Date", "asString": "Date value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Date field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a Date field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Date field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a Date field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.util.Date)", "flatSignature": "(String, Date)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code Decimal128} value of the given field.", "name": "setDecimal128", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 792, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Decimal128 field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a Decimal128 field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Decimal128 field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a Decimal128 field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Decimal128", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Decimal128", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Decimal128"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setDecimal128", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "Decimal128", "typeName": "Decimal128", "qualifiedTypeName": "Decimal128", "simpleTypeName": "Decimal128", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "Decimal128", "asString": "Decimal128 value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Decimal128 field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a Decimal128 field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a Decimal128 field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a Decimal128 field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, Decimal128)", "flatSignature": "(String, Decimal128)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the {@code ObjectId} value of the given field.", "name": "setObjectId", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 810, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a ObjectId field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a ObjectId field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a ObjectId field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a ObjectId field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "ObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "ObjectId", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ObjectId"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " value of the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value of the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setObjectId", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "value", "typeName": "ObjectId", "asString": "ObjectId value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or field isn't a ObjectId field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or field isn't a ObjectId field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or field isn't a ObjectId field."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or field isn't a ObjectId field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value value to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value value to insert."}], "parameterName": "value", "parameterComment": "value to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, ObjectId)", "flatSignature": "(String, ObjectId)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets a reference to another object on the given field.", "name": "setObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 829, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value object to link to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object to link to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value object to link to."}], "parameterName": "value", "parameterComment": "object to link to.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value object to link to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object to link to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value object to link to."}], "parameterName": "value", "parameterComment": "object to link to.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a reference to another object on the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a reference to another object on the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a reference to another object on the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a reference to another object on the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a reference to another object on the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a reference to another object on the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "value", "typeName": "DynamicRealmObject", "asString": "DynamicRealmObject value", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, it doesn't link to other Realm objects, the type\n of DynamicRealmObject doesn't match or it belongs to a different Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "value object to link to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object to link to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value object to link to."}], "parameterName": "value", "parameterComment": "object to link to.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.DynamicRealmObject)", "flatSignature": "(String, DynamicRealmObject)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the reference to a {@link RealmList} on the given field.\n <p>\n This will copy all the elements in the list into Realm, but any further changes to the list\n will not be reflected in the Realm. Use {@link #getList(String)} in order to get a reference to\n the managed list.", "name": "setList", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 865, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "list list of objects. Must either be primitive types or {@link DynamicRealmObject}s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of objects. Must either be primitive types or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list list of objects."}], "parameterName": "list", "parameterComment": "list of objects. Must either be primitive types or {@link DynamicRealmObject}s.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "list list of objects. Must either be primitive types or {@link DynamicRealmObject}s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of objects. Must either be primitive types or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list list of objects."}], "parameterName": "list", "parameterComment": "list of objects. Must either be primitive types or {@link DynamicRealmObject}s.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the reference to a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the reference to a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the reference to a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the given field.\n <p>\n This will copy all the elements in the list into Realm, but any further changes to the list\n will not be reflected in the Realm. Use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the given field.\n <p>\n This will copy all the elements in the list into Realm, but any further changes to the list\n will not be reflected in the Realm. Use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "on the given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getList(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getList(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getList(String)"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getList(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " in order to get a reference to\n the managed list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " in order to get a reference to\n the managed list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in order to get a reference to\n the managed list."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the reference to a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the reference to a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the reference to a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "on the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setList", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "name": "list", "typeName": "io.realm.RealmList<E>", "asString": "io.realm.RealmList<E> list", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, it is not a list field, the objects in the\n list doesn't match the expected type or any Realm object in the list belongs to a different Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "list list of objects. Must either be primitive types or {@link DynamicRealmObject}s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list of objects. Must either be primitive types or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list list of objects."}], "parameterName": "list", "parameterComment": "list of objects. Must either be primitive types or {@link DynamicRealmObject}s.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.RealmList<E>)", "flatSignature": "(String, RealmList<E>)", "typeParameters": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sets the value to {@code null} for the given field.", "name": "setNull", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1042, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, or the field isn't nullable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, or the field isn't nullable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, or the field isn't nullable."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, or the field isn't nullable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for the given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the value to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for the given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.setNull", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, or the field isn't nullable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, or the field isn't nullable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, or the field isn't nullable."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, or the field isn't nullable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the field is a {@link io.realm.annotations.PrimaryKey} field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the field is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "exceptionName": "RealmException", "exceptionComment": "if the field is a {@link io.realm.annotations.PrimaryKey} field.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name."}], "parameterName": "fieldName", "parameterComment": "field name.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the type of object. This will normally correspond to the name of a class that is extending\n {@link RealmObject}.", "name": "getType", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1061, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "this objects type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this objects type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this objects type."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type of object. This will normally correspond to the name of a class that is extending\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type of object. This will normally correspond to the name of a class that is extending\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type of object."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type of object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getType", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the type used by the underlying storage engine to represent this field.", "name": "getFieldType", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1072, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the underlying type used by Realm to represent this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the underlying type used by Realm to represent this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the underlying type used by Realm to represent this field."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getFieldType", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmFieldType", "typeName": "RealmFieldType", "qualifiedTypeName": "io.realm.RealmFieldType", "simpleTypeName": "RealmFieldType", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a hash code value for the {@link DynamicRealmObject} object.\n <p>\n By the general contract of {@link Object#hashCode()}, any two objects for which {@link #equals}\n returns {@code true} must return the same hash code value.\n <p>\n Note that a {@link RealmObject} is a live object, and it might be updated by changes from\n other threads. This means that a hash code value of the object is not stable, and the value\n should be neither used as a key in HashMap nor saved in HashSet.", "name": "hashCode", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1110, "column": 16, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a hash code value for the object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a hash code value for the object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a hash code value for the object."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#equals", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#equals"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#equals"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "equals"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#equals", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#equals"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#equals"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "equals"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a hash code value for the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a hash code value for the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a hash code value for the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " object.\n <p>\n By the general contract of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " object.\n <p>\n By the general contract of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Object#hashCode()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Object#hashCode()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Object#hashCode()"}], "label": "", "referencedClassName": "java.lang.Object", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "hashCode()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", any two objects for which ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", any two objects for which "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", any two objects for which"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#equals", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#equals"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#equals"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "equals"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returns"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " must return the same hash code value.\n <p>\n Note that a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " must return the same hash code value.\n <p>\n Note that a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "must return the same hash code value."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is a live object, and it might be updated by changes from\n other threads. This means that a hash code value of the object is not stable, and the value\n should be neither used as a key in HashMap nor saved in HashSet.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is a live object, and it might be updated by changes from\n other threads. This means that a hash code value of the object is not stable, and the value\n should be neither used as a key in HashMap nor saved in HashSet."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is a live object, and it might be updated by changes from\n other threads."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a hash code value for the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a hash code value for the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a hash code value for the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.hashCode", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "equals", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1125, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.equals", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "o", "typeName": "Object", "asString": "Object o", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "toString", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1154, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.toString", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "Returns {@link RealmResults} containing all {@code srcClassName} class objects that have a relationship\n to this object from {@code srcFieldName} field.\n <p>\n An entry is added for each reference, e.g. if the same reference is in a list multiple times,\n the src object will show up here multiple times.", "name": "linkingObjects", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1259, "column": 45, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "srcClassName name of the class returned objects belong to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the class returned objects belong to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcClassName name of the class returned objects belong to."}], "parameterName": "srcClassName", "parameterComment": "name of the class returned objects belong to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "srcFieldName name of the field in the source class that holds a reference to this object.\n                    Field type must be either {@code io.realm.RealmFieldType.OBJECT} or {@code io.realm.RealmFieldType.LIST}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field in the source class that holds a reference to this object.\n                    Field type must be either "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "io.realm.RealmFieldType.OBJECT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "io.realm.RealmFieldType.LIST"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcFieldName name of the field in the source class that holds a reference to this object."}], "parameterName": "srcFieldName", "parameterComment": "name of the field in the source class that holds a reference to this object.\n                    Field type must be either {@code io.realm.RealmFieldType.OBJECT} or {@code io.realm.RealmFieldType.LIST}.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the result.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the result."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the result."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code srcClassName} is {@code null} or does not exist,\n the {@code srcFieldName} is {@code null} or does not exist,\n type of the source field is not supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcClassName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcFieldName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n type of the source field is not supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcClassName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcFieldName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n type of the source field is not supported."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code srcClassName} is {@code null} or does not exist,\n the {@code srcFieldName} is {@code null} or does not exist,\n type of the source field is not supported.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing all ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing all "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "containing all"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcClassName", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcClassName"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcClassName"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " class objects that have a relationship\n to this object from ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " class objects that have a relationship\n to this object from "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "class objects that have a relationship\n to this object from"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcFieldName", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcFieldName"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcFieldName"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field.\n <p>\n An entry is added for each reference, e.g. if the same reference is in a list multiple times,\n the src object will show up here multiple times.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field.\n <p>\n An entry is added for each reference, e.g. if the same reference is in a list multiple times,\n the src object will show up here multiple times."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing all ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " containing all "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "containing all"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcClassName", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcClassName"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcClassName"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " class objects that have a relationship\n to this object from ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " class objects that have a relationship\n to this object from "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "class objects that have a relationship\n to this object from"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcFieldName", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcFieldName"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcFieldName"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.linkingObjects", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "srcClassName", "typeName": "String", "asString": "String srcClassName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "srcFieldName", "typeName": "String", "asString": "String srcFieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code srcClassName} is {@code null} or does not exist,\n the {@code srcFieldName} is {@code null} or does not exist,\n type of the source field is not supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcClassName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcFieldName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n type of the source field is not supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcClassName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "srcFieldName"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or does not exist,\n type of the source field is not supported."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code srcClassName} is {@code null} or does not exist,\n the {@code srcFieldName} is {@code null} or does not exist,\n type of the source field is not supported.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "srcClassName name of the class returned objects belong to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the class returned objects belong to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcClassName name of the class returned objects belong to."}], "parameterName": "srcClassName", "parameterComment": "name of the class returned objects belong to.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "srcFieldName name of the field in the source class that holds a reference to this object.\n                    Field type must be either {@code io.realm.RealmFieldType.OBJECT} or {@code io.realm.RealmFieldType.LIST}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field in the source class that holds a reference to this object.\n                    Field type must be either "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "io.realm.RealmFieldType.OBJECT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "io.realm.RealmFieldType.LIST"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "srcFieldName name of the field in the source class that holds a reference to this object."}], "parameterName": "srcFieldName", "parameterComment": "name of the field in the source class that holds a reference to this object.\n                    Field type must be either {@code io.realm.RealmFieldType.OBJECT} or {@code io.realm.RealmFieldType.LIST}.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String)", "flatSignature": "(String, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<io.realm.DynamicRealmObject>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<io.realm.DynamicRealmObject>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<io.realm.DynamicRealmObject>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<io.realm.DynamicRealmObject>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "Returns {@link DynamicRealm} instance where this {@link DynamicRealmObject} belongs.\n <p>\n You <b>must not</b> call {@link DynamicRealm#close()} against returned instance.", "name": "getDynamicRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1298, "column": 25, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@link DynamicRealm} instance where this object belongs.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance where this object belongs."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance where this object belongs."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this object was deleted or the corresponding {@link DynamicRealm} was already closed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this object was deleted or the corresponding "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this object was deleted or the corresponding "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this object was deleted or the corresponding {@link DynamicRealm} was already closed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance where this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance where this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance where this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " belongs.\n <p>\n You <b>must not</b> call ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " belongs.\n <p>\n You <b>must not</b> call "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "belongs."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm#close()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm#close()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm#close()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "close()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " against returned instance.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " against returned instance."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "against returned instance."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance where this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance where this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance where this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " belongs.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " belongs."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "belongs."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.getDynamicRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this object was deleted or the corresponding {@link DynamicRealm} was already closed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this object was deleted or the corresponding "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this object was deleted or the corresponding "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this object was deleted or the corresponding {@link DynamicRealm} was already closed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "", "name": "realm$injectObjectContext", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1308, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.realm$injectObjectContext", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "name": "realmGet$proxyState", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1313, "column": 23, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject.realmGet$proxyState", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.ProxyState", "typeName": "ProxyState", "qualifiedTypeName": "io.realm.ProxyState", "simpleTypeName": "ProxyState", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["io.realm.internal.PendingRow.FrontEnd"]}}], "constructors": [{"commentText": "Creates a dynamic Realm object based on an existing object.", "name": "DynamicRealmObject", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 55, "column": 12, "file": "./realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "obj the Realm object to convert to a dynamic object. Only objects managed by {@link Realm} can be used.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Realm object to convert to a dynamic object. Only objects managed by "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be used."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "obj the Realm object to convert to a dynamic object."}], "parameterName": "obj", "parameterComment": "the Realm object to convert to a dynamic object. Only objects managed by {@link Realm} can be used.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if object isn't managed by Realm or is a {@link DynamicRealmObject} already.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if object isn't managed by Realm or is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " already."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if object isn't managed by Realm or is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " already."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if object isn't managed by Realm or is a {@link DynamicRealmObject} already.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a dynamic Realm object based on an existing object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a dynamic Realm object based on an existing object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a dynamic Realm object based on an existing object."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a dynamic Realm object based on an existing object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a dynamic Realm object based on an existing object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a dynamic Realm object based on an existing object."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.DynamicRealmObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "obj", "typeName": "RealmModel", "asString": "RealmModel obj", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if object isn't managed by Realm or is a {@link DynamicRealmObject} already.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if object isn't managed by Realm or is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " already."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if object isn't managed by Realm or is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " already."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if object isn't managed by Realm or is a {@link DynamicRealmObject} already.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "obj the Realm object to convert to a dynamic object. Only objects managed by {@link Realm} can be used.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Realm object to convert to a dynamic object. Only objects managed by "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be used."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "obj the Realm object to convert to a dynamic object."}], "parameterName": "obj", "parameterComment": "the Realm object to convert to a dynamic object. Only objects managed by {@link Realm} can be used.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmModel)", "flatSignature": "(RealmModel)", "typeParameters": []}], "innerClasses": []}