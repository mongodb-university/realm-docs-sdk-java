{"commentText": "An {@code OrderedRealmCollection} is a collection which maintains an ordering for its elements. Every\n element in the {@code OrderedRealmCollection} has an index. Each element can thus be accessed by its\n index, with the first index being zero. Normally, {@code OrderedRealmCollection}s allow duplicate\n elements, as compared to Sets, where elements have to be unique.\n <p>\n <p>\n <p>\n There are three types of {@link OrderedRealmCollection}. {@link RealmResults} and {@link RealmList} are live\n collections. They are up-to-date all the time and they will never contain an invalid {@link RealmObject}.\n {@link OrderedRealmCollectionSnapshot} is different. An {@link OrderedRealmCollectionSnapshot} can be created from\n another {@link OrderedRealmCollection}. Its size and elements order stay the same as the original collection's when\n it was created. {@link OrderedRealmCollectionSnapshot} may contain invalid {@link RealmObject}s if the objects get\n deleted.\n <p>\n <p>\n <p>\n <div class=\"loops\"></div>\n Using iterators to iterate on {@link OrderedRealmCollection} will always work. You can delete or modify the elements\n without impacting the iterator. See below example:\n <p>\n <pre>\n {@code\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n int s = dogs.size(); // 10\n realm.beginTransaction();\n for (Dog dog : dogs) {\n     dog.deleteFromRealm();\n     s = dogs.size(); // This will be decreased by 1 every time after a dog is removed.\n }\n realm.commitTransaction();\n s = dogs.size(); // 0\n }\n </pre>\n <p>\n An iterator created from a live collection will create a stable view when the iterator is created, allowing you to\n delete and modify elements while iterating without impacting the iterator. However, the {@code RealmResults} backing\n the iterator will still be live updated meaning that size and order of elements can change when iterating.\n {@link RealmList} has the same behaviour as {@link RealmResults} since they are both live collections.\n <p>\n <p>\n <p>\n A simple for-loop is different. See below example:\n <p>\n <pre>\n {@code\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n realm.beginTransaction();\n for (int i = 0; i < dogs.size(); i++) {\n     dogs.get(i).deleteFromRealm();\n }\n realm.commitTransaction();\n s = dogs.size(); // 5\n }\n </pre>\n <p>\n The above example only deletes half of elements in the {@link RealmResults}. This is because of {@code dogs.size()}\n decreased by 1 for every loop. The deletion happens in the loop will immediately impact the size of\n {@code RealmResults}. To solve this problem, you can create a {@link OrderedRealmCollectionSnapshot} from the\n {@link RealmResults} or {@link RealmList} and do simple for-loop on that instead:\n <p>\n <pre>\n {@code\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n OrderedRealmCollectionSnapshot snapshot = dogs.createSnapshot();\n // dogs.size() == 10 && snapshot.size() == 10\n realm.beginTransaction();\n for (int i = 0; i < snapshot.size(); i++) {\n     snapshot.get(0).deleteFromRealm();\n     // snapshot.get(0).isValid() == false\n }\n realm.commitTransaction();\n // dogs.size() == 0 && snapshot.size() == 10\n }\n </pre>\n <p>\n As you can see, after deletion, the size and elements order of snapshot stay the same as before. But the element at\n the position becomes invalid.", "name": "OrderedRealmCollection", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": true, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": true, "isIncluded": true, "position": {"line": 103, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is a collection which maintains an ordering for its elements. Every\n element in the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is a collection which maintains an ordering for its elements. Every\n element in the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is a collection which maintains an ordering for its elements."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has an index. Each element can thus be accessed by its\n index, with the first index being zero. Normally, ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " has an index. Each element can thus be accessed by its\n index, with the first index being zero. Normally, "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "has an index."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s allow duplicate\n elements, as compared to Sets, where elements have to be unique.\n <p>\n <p>\n <p>\n There are three types of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s allow duplicate\n elements, as compared to Sets, where elements have to be unique.\n <p>\n <p>\n <p>\n There are three types of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s allow duplicate\n elements, as compared to Sets, where elements have to be unique."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are live\n collections. They are up-to-date all the time and they will never contain an invalid ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are live\n collections. They are up-to-date all the time and they will never contain an invalid "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are live\n collections."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollectionSnapshot", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollectionSnapshot", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is different. An ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is different. An "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is different."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollectionSnapshot", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollectionSnapshot", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be created from\n another ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be created from\n another "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can be created from\n another"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Its size and elements order stay the same as the original collection's when\n it was created. ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Its size and elements order stay the same as the original collection's when\n it was created. "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollectionSnapshot", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollectionSnapshot", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " may contain invalid ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " may contain invalid "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "may contain invalid"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s if the objects get\n deleted.\n <p>\n <p>\n <p>\n <div class=\"loops\"></div>\n Using iterators to iterate on ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s if the objects get\n deleted.\n <p>\n <p>\n <p>\n <div class=\"loops\"></div>\n Using iterators to iterate on "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s if the objects get\n deleted."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will always work. You can delete or modify the elements\n without impacting the iterator. See below example:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will always work. You can delete or modify the elements\n without impacting the iterator. See below example:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will always work."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n int s = dogs.size(); // 10\n realm.beginTransaction();\n for (Dog dog : dogs) {\n     dog.deleteFromRealm();\n     s = dogs.size(); // This will be decreased by 1 every time after a dog is removed.\n }\n realm.commitTransaction();\n s = dogs.size(); // 0\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n int s = dogs.size(); // 10\n realm.beginTransaction();\n for (Dog dog : dogs) {\n     dog.deleteFromRealm();\n     s = dogs.size(); // This will be decreased by 1 every time after a dog is removed.\n }\n realm.commitTransaction();\n s = dogs.size(); // 0\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n int s = dogs.size(); // 10\n realm.beginTransaction();\n for (Dog dog : dogs) {\n     dog.deleteFromRealm();\n     s = dogs.size(); // This will be decreased by 1 every time after a dog is removed."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n An iterator created from a live collection will create a stable view when the iterator is created, allowing you to\n delete and modify elements while iterating without impacting the iterator. However, the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n An iterator created from a live collection will create a stable view when the iterator is created, allowing you to\n delete and modify elements while iterating without impacting the iterator. However, the "}], "firstSentenceTags": []}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " backing\n the iterator will still be live updated meaning that size and order of elements can change when iterating.\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " backing\n the iterator will still be live updated meaning that size and order of elements can change when iterating.\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "backing\n the iterator will still be live updated meaning that size and order of elements can change when iterating."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has the same behaviour as ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " has the same behaviour as "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "has the same behaviour as"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " since they are both live collections.\n <p>\n <p>\n <p>\n A simple for-loop is different. See below example:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " since they are both live collections.\n <p>\n <p>\n <p>\n A simple for-loop is different. See below example:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "since they are both live collections."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n realm.beginTransaction();\n for (int i = 0; i < dogs.size(); i++) {\n     dogs.get(i).deleteFromRealm();\n }\n realm.commitTransaction();\n s = dogs.size(); // 5\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n realm.beginTransaction();\n for (int i = 0; i < dogs.size(); i++) {\n     dogs.get(i).deleteFromRealm();\n }\n realm.commitTransaction();\n s = dogs.size(); // 5\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n realm.beginTransaction();\n for (int i = 0; i < dogs.size(); i++) {\n     dogs.get(i).deleteFromRealm();\n }\n realm.commitTransaction();\n s = dogs.size(); // 5"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n The above example only deletes half of elements in the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n The above example only deletes half of elements in the "}], "firstSentenceTags": []}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This is because of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This is because of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "dogs.size()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "dogs.size()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "dogs.size()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n decreased by 1 for every loop. The deletion happens in the loop will immediately impact the size of\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n decreased by 1 for every loop. The deletion happens in the loop will immediately impact the size of\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "decreased by 1 for every loop."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". To solve this problem, you can create a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". To solve this problem, you can create a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollectionSnapshot", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollectionSnapshot", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " from the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " from the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults"}], "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and do simple for-loop on that instead:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and do simple for-loop on that instead:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and do simple for-loop on that instead:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n OrderedRealmCollectionSnapshot snapshot = dogs.createSnapshot();\n // dogs.size() == 10 && snapshot.size() == 10\n realm.beginTransaction();\n for (int i = 0; i < snapshot.size(); i++) {\n     snapshot.get(0).deleteFromRealm();\n     // snapshot.get(0).isValid() == false\n }\n realm.commitTransaction();\n // dogs.size() == 0 && snapshot.size() == 10\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n OrderedRealmCollectionSnapshot snapshot = dogs.createSnapshot();\n // dogs.size() == 10 && snapshot.size() == 10\n realm.beginTransaction();\n for (int i = 0; i < snapshot.size(); i++) {\n     snapshot.get(0).deleteFromRealm();\n     // snapshot.get(0).isValid() == false\n }\n realm.commitTransaction();\n // dogs.size() == 0 && snapshot.size() == 10\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmResults<Dog> dogs = realm.where(Dog.class).findAll();\n OrderedRealmCollectionSnapshot snapshot = dogs.createSnapshot();\n // dogs.size() == 10 && snapshot.size() == 10\n realm.beginTransaction();\n for (int i = 0; i < snapshot.size(); i++) {\n     snapshot.get(0).deleteFromRealm();\n     // snapshot.get(0).isValid() == false\n }\n realm.commitTransaction();\n // dogs.size() == 0 && snapshot.size() == 10"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n As you can see, after deletion, the size and elements order of snapshot stay the same as before. But the element at\n the position becomes invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n As you can see, after deletion, the size and elements order of snapshot stay the same as before. But the element at\n the position becomes invalid."}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is a collection which maintains an ordering for its elements.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is a collection which maintains an ordering for its elements."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is a collection which maintains an ordering for its elements."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection", "modifierSpecifier": 513, "modifiers": "public interface", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [], "inheritedMethods": {"java.util.List": ["size", "isEmpty", "contains", "iterator", "toArray", "toArray", "add", "remove", "containsAll", "addAll", "addAll", "removeAll", "retainAll", "replaceAll", "sort", "clear", "equals", "hashCode", "get", "set", "add", "remove", "indexOf", "lastIndexOf", "listIterator", "listIterator", "subList", "spliterator"], "io.realm.RealmCollection": ["where", "min", "max", "sum", "average", "maxDate", "minDate", "deleteAllFromRealm", "isLoaded", "load", "isValid", "isManaged", "contains", "freeze"], "java.util.Collection": ["size", "isEmpty", "contains", "iterator", "toArray", "toArray", "add", "remove", "containsAll", "addAll", "removeAll", "removeIf", "retainAll", "clear", "equals", "hashCode", "spliterator", "stream", "parallelStream"], "java.lang.Iterable": ["iterator", "forEach", "spliterator"], "io.realm.internal.ManageableObject": ["isManaged", "isValid", "isFrozen"]}, "interfaceTypes": [{"_class": "ParameterizedType", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}, {"_class": "ParameterizedType", "asString": "io.realm.RealmCollection<E>", "typeName": "RealmCollection", "qualifiedTypeName": "io.realm.RealmCollection", "simpleTypeName": "RealmCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Collection", "io.realm.internal.ManageableObject"]}, {"_class": "ParameterizedType", "asString": "java.util.Collection<E>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.lang.Iterable"]}, {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}, {"_class": "ParameterizedType", "asString": "java.util.Collection<E>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.lang.Iterable"]}, {"_class": "ClassDoc", "asString": "io.realm.internal.ManageableObject", "typeName": "ManageableObject", "qualifiedTypeName": "io.realm.internal.ManageableObject", "simpleTypeName": "ManageableObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}], "typeParameters": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Gets the first object from the collection.", "name": "first", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 112, "column": 7, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the first object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if the collection is empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if the collection is empty."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if the collection is empty.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.first", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if the collection is empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if the collection is empty."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if the collection is empty.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Gets the first object from the collection. If the collection is empty, the provided default will be used instead.", "name": "first", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 120, "column": 7, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the first object or the provided default.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object or the provided default."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object or the provided default."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection. If the collection is empty, the provided default will be used instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection. If the collection is empty, the provided default will be used instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.first", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "defaultValue", "typeName": "E", "asString": "E defaultValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(E)", "flatSignature": "(E)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Gets the last object from the collection.", "name": "last", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 129, "column": 7, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the last object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if the collection is empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if the collection is empty."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if the collection is empty.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.last", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if the collection is empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if the collection is empty."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if the collection is empty.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Gets the last object from the collection. If the collection is empty, the provided default will be used instead.", "name": "last", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 137, "column": 7, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the last object or the provided default.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object or the provided default."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object or the provided default."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection. If the collection is empty, the provided default will be used instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection. If the collection is empty, the provided default will be used instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.last", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "defaultValue", "typeName": "E", "asString": "E defaultValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(E)", "flatSignature": "(E)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "Sorts a collection based on the provided field in ascending order.", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 149, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field name to sort by."}], "parameterName": "fieldName", "parameterComment": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if field name does not exist or it has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name does not exist or it has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if field name does not exist or it has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if field name does not exist or it has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if field name does not exist or it has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name does not exist or it has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if field name does not exist or it has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if field name does not exist or it has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field name to sort by."}], "parameterName": "fieldName", "parameterComment": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "Sorts a collection based on the provided field and sort order.", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 162, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field name to sort by."}], "parameterName": "fieldName", "parameterComment": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder the direction to sort by.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the direction to sort by."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder the direction to sort by."}], "parameterName": "sortOrder", "parameterComment": "the direction to sort by.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "sortOrder", "typeName": "Sort", "asString": "Sort sortOrder", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field name to sort by."}], "parameterName": "fieldName", "parameterComment": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder the direction to sort by.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the direction to sort by."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder the direction to sort by."}], "parameterName": "sortOrder", "parameterComment": "the direction to sort by.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.Sort)", "flatSignature": "(String, Sort)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "Sorts a collection based on the provided fields and sort orders.", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 178, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName1 first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName1 first field name."}], "parameterName": "fieldName1", "parameterComment": "first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder1 sort order for first field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sort order for first field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder1 sort order for first field."}], "parameterName": "sortOrder1", "parameterComment": "sort order for first field.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName2 second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName2 second field name."}], "parameterName": "fieldName2", "parameterComment": "second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder2 sort order for second field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sort order for second field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder2 sort order for second field."}], "parameterName": "sortOrder2", "parameterComment": "sort order for second field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if a field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName1", "typeName": "String", "asString": "String fieldName1", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "sortOrder1", "typeName": "Sort", "asString": "Sort sortOrder1", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName2", "typeName": "String", "asString": "String fieldName2", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "sortOrder2", "typeName": "Sort", "asString": "Sort sortOrder2", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if a field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName1 first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName1 first field name."}], "parameterName": "fieldName1", "parameterComment": "first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder1 sort order for first field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sort order for first field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder1 sort order for first field."}], "parameterName": "sortOrder1", "parameterComment": "sort order for first field.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName2 second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName2 second field name."}], "parameterName": "fieldName2", "parameterComment": "second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder2 sort order for second field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sort order for second field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder2 sort order for second field."}], "parameterName": "sortOrder2", "parameterComment": "sort order for second field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.Sort, java.lang.String, io.realm.Sort)", "flatSignature": "(String, Sort, String, Sort)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "Sorts a collection based on the provided fields and sort orders.", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 191, "column": 21, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldNames an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldNames an array of field names to sort by."}], "parameterName": "fieldNames", "parameterComment": "an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrders the directions to sort by.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the directions to sort by."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrders the directions to sort by."}], "parameterName": "sortOrders", "parameterComment": "the directions to sort by.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if a field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "fieldNames", "typeName": "java.lang.String[]", "asString": "java.lang.String[] fieldNames", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.Sort[]", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "sortOrders", "typeName": "io.realm.Sort[]", "asString": "io.realm.Sort[] sortOrders", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if a field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldNames an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldNames an array of field names to sort by."}], "parameterName": "fieldNames", "parameterComment": "an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrders the directions to sort by.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the directions to sort by."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrders the directions to sort by."}], "parameterName": "sortOrders", "parameterComment": "the directions to sort by.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String[], io.realm.Sort[])", "flatSignature": "(String[], Sort[])", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "Deletes the object at the given index from the Realm. This also removes it from the collection.", "name": "deleteFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 201, "column": 10, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the array index identifying the object to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the array index identifying the object to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the array index identifying the object to be removed."}], "parameterName": "location", "parameterComment": "the array index identifying the object to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the array index identifying the object to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the array index identifying the object to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the array index identifying the object to be removed."}], "parameterName": "location", "parameterComment": "the array index identifying the object to be removed.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm. This also removes it from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm. This also removes it from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.deleteFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the array index identifying the object to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the array index identifying the object to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the array index identifying the object to be removed."}], "parameterName": "location", "parameterComment": "the array index identifying the object to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(int)", "flatSignature": "(int)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Deletes the first object from the Realm. This also removes it from this collection.", "name": "deleteFirstFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 210, "column": 13, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if an object was deleted, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called on the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called on the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called on the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called on the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm. This also removes it from this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm. This also removes it from this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.deleteFirstFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called on the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called on the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called on the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called on the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Deletes the last object from the Realm. This also removes it from this collection.", "name": "deleteLastFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 219, "column": 13, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if an object was deleted, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm. This also removes it from this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm. This also removes it from this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.deleteLastFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Creates a snapshot from this {@link OrderedRealmCollection}.", "name": "createSnapshot", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 229, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/OrderedRealmCollection.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the snapshot of this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the snapshot of this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the snapshot of this collection."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "OrderedRealmCollectionSnapshot", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollectionSnapshot", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "OrderedRealmCollectionSnapshot", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollectionSnapshot"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollectionSnapshot", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.OrderedRealmCollection.createSnapshot", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}], "constructors": [], "innerClasses": []}