{"commentText": "Class for interacting with the schema for a given RealmObject class. This makes it possible to inspect,\n add, delete or change the fields for given class.\n <p>\n If this {@link RealmObjectSchema} is retrieved from an immutable {@link RealmSchema}, this {@link RealmObjectSchema}\n will be immutable as well.", "name": "RealmObjectSchema", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 49, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmMigration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmMigration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class for interacting with the schema for a given RealmObject class. This makes it possible to inspect,\n add, delete or change the fields for given class.\n <p>\n If this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class for interacting with the schema for a given RealmObject class. This makes it possible to inspect,\n add, delete or change the fields for given class.\n <p>\n If this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class for interacting with the schema for a given RealmObject class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjectSchema"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjectSchema"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is retrieved from an immutable ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is retrieved from an immutable "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is retrieved from an immutable"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmSchema", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema"}], "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjectSchema"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjectSchema"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be immutable as well.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be immutable as well."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be immutable as well."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class for interacting with the schema for a given RealmObject class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class for interacting with the schema for a given RealmObject class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class for interacting with the schema for a given RealmObject class."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Returns the name of the RealmObject class being represented by this schema.\n <p>\n <ul>\n <li>When using a normal {@link Realm} this name is the same as the {@link RealmObject} class.</li>\n <li>When using a {@link DynamicRealm} this is the name used in all API methods requiring a class name.</li>\n </ul>", "name": "getClassName", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 116, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the name of the RealmObject class represented by this schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the RealmObject class represented by this schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the RealmObject class represented by this schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this schema defintion is no longer part of the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this schema defintion is no longer part of the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this schema defintion is no longer part of the Realm."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this schema defintion is no longer part of the Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the RealmObject class being represented by this schema.\n <p>\n <ul>\n <li>When using a normal ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the RealmObject class being represented by this schema.\n <p>\n <ul>\n <li>When using a normal "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the RealmObject class being represented by this schema."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " this name is the same as the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " this name is the same as the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this name is the same as the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " class.</li>\n <li>When using a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " class.</li>\n <li>When using a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "class.</li>\n <li>When using a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " this is the name used in all API methods requiring a class name.</li>\n </ul>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " this is the name used in all API methods requiring a class name.</li>\n </ul>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this is the name used in all API methods requiring a class name.</li>\n </ul>"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the RealmObject class being represented by this schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the RealmObject class being represented by this schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the RealmObject class being represented by this schema."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.getClassName", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this schema defintion is no longer part of the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this schema defintion is no longer part of the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this schema defintion is no longer part of the Realm."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this schema defintion is no longer part of the Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets a new name for this RealmObject class. This is equivalent to renaming it.", "name": "setClassName", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 129, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the new name for this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new name for this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the new name for this class."}], "parameterName": "className", "parameterComment": "the new name for this class.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if className is {@code null} or an empty string, or its length exceeds 56\n characters.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if className is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or an empty string, or its length exceeds 56\n characters."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if className is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or an empty string, or its length exceeds 56\n characters."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if className is {@code null} or an empty string, or its length exceeds 56\n characters.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or from a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or from a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or from a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or from a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmSchema#rename(String, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema#rename(String, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema#rename(String, String)"}], "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "rename(String, String)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the new name for this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new name for this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the new name for this class."}], "parameterName": "className", "parameterComment": "the new name for this class.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmSchema#rename(String, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema#rename(String, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmSchema#rename(String, String)"}], "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "rename(String, String)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a new name for this RealmObject class. This is equivalent to renaming it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a new name for this RealmObject class. This is equivalent to renaming it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a new name for this RealmObject class."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a new name for this RealmObject class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a new name for this RealmObject class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a new name for this RealmObject class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.setClassName", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "className", "typeName": "String", "asString": "String className", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if className is {@code null} or an empty string, or its length exceeds 56\n characters.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if className is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or an empty string, or its length exceeds 56\n characters."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if className is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or an empty string, or its length exceeds 56\n characters."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if className is {@code null} or an empty string, or its length exceeds 56\n characters.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or from a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or from a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or from a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or from a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "className the new name for this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new name for this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "className the new name for this class."}], "parameterName": "className", "parameterComment": "the new name for this class.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Adds a new simple field to the RealmObject class. The type must be one supported by Realm. See\n {@link RealmObject} for the list of supported types. If the field should allow {@code null} values use the boxed\n type instead e.g., {@code Integer.class} instead of {@code int.class}.\n <p>\n To add fields that reference other RealmObjects or RealmLists use\n {@link #addRealmObjectField(String, RealmObjectSchema)} or {@link #addRealmListField(String, RealmObjectSchema)}\n instead.", "name": "addField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 149, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldType type of field to add. See {@link RealmObject} for the full list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of field to add. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the full list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldType type of field to add."}], "parameterName": "fieldType", "parameterComment": "type of field to add. See {@link RealmObject} for the full list.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "attributes set of attributes for this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "set of attributes for this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "attributes set of attributes for this field."}], "parameterName": "attributes", "parameterComment": "set of attributes for this field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the type isn't supported, field name is illegal or a field with that name\n already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the type isn't supported, field name is illegal or a field with that name\n already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the type isn't supported, field name is illegal or a field with that name\n already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the type isn't supported, field name is illegal or a field with that name\n already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or if adding a\n a field with {@link FieldAttribute#PRIMARY_KEY} attribute to a schema of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or if adding a\n a field with "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FieldAttribute#PRIMARY_KEY", "label": "", "referencedClassName": "io.realm.FieldAttribute", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.FieldAttribute", "typeName": "FieldAttribute", "qualifiedTypeName": "io.realm.FieldAttribute", "simpleTypeName": "FieldAttribute", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}, "referencedMemberName": "PRIMARY_KEY"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " attribute to a schema of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or if adding a\n a field with "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FieldAttribute#PRIMARY_KEY", "label": "", "referencedClassName": "io.realm.FieldAttribute", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.FieldAttribute", "typeName": "FieldAttribute", "qualifiedTypeName": "io.realm.FieldAttribute", "simpleTypeName": "FieldAttribute", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}, "referencedMemberName": "PRIMARY_KEY"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " attribute to a schema of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or if adding a\n a field with {@link FieldAttribute#PRIMARY_KEY} attribute to a schema of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new simple field to the RealmObject class. The type must be one supported by Realm. See\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new simple field to the RealmObject class. The type must be one supported by Realm. See\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new simple field to the RealmObject class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the list of supported types. If the field should allow ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the list of supported types. If the field should allow "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for the list of supported types."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values use the boxed\n type instead e.g., ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values use the boxed\n type instead e.g., "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values use the boxed\n type instead e.g.,"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer.class", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.class"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.class"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int.class", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int.class"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int.class"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n To add fields that reference other RealmObjects or RealmLists use\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n To add fields that reference other RealmObjects or RealmLists use\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#addRealmObjectField(String, RealmObjectSchema)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmObjectField(String, RealmObjectSchema)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmObjectField(String, RealmObjectSchema)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "addRealmObjectField(String, RealmObjectSchema)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#addRealmListField(String, RealmObjectSchema)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmListField(String, RealmObjectSchema)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmListField(String, RealmObjectSchema)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "addRealmListField(String, RealmObjectSchema)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new simple field to the RealmObject class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new simple field to the RealmObject class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new simple field to the RealmObject class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.addField", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<?>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "fieldType", "typeName": "java.lang.Class<?>", "asString": "java.lang.Class<?> fieldType", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.FieldAttribute[]", "typeName": "FieldAttribute", "qualifiedTypeName": "io.realm.FieldAttribute", "simpleTypeName": "FieldAttribute", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.FieldAttribute", "typeName": "FieldAttribute", "qualifiedTypeName": "io.realm.FieldAttribute", "simpleTypeName": "FieldAttribute", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "attributes", "typeName": "io.realm.FieldAttribute[]", "asString": "io.realm.FieldAttribute[] attributes", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the type isn't supported, field name is illegal or a field with that name\n already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the type isn't supported, field name is illegal or a field with that name\n already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the type isn't supported, field name is illegal or a field with that name\n already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the type isn't supported, field name is illegal or a field with that name\n already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or if adding a\n a field with {@link FieldAttribute#PRIMARY_KEY} attribute to a schema of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or if adding a\n a field with "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FieldAttribute#PRIMARY_KEY", "label": "", "referencedClassName": "io.realm.FieldAttribute", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.FieldAttribute", "typeName": "FieldAttribute", "qualifiedTypeName": "io.realm.FieldAttribute", "simpleTypeName": "FieldAttribute", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}, "referencedMemberName": "PRIMARY_KEY"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " attribute to a schema of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or if adding a\n a field with "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FieldAttribute#PRIMARY_KEY", "label": "", "referencedClassName": "io.realm.FieldAttribute", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.FieldAttribute", "typeName": "FieldAttribute", "qualifiedTypeName": "io.realm.FieldAttribute", "simpleTypeName": "FieldAttribute", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}, "referencedMemberName": "PRIMARY_KEY"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " attribute to a schema of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or if adding a\n a field with {@link FieldAttribute#PRIMARY_KEY} attribute to a schema of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldType type of field to add. See {@link RealmObject} for the full list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of field to add. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the full list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldType type of field to add."}], "parameterName": "fieldType", "parameterComment": "type of field to add. See {@link RealmObject} for the full list.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "attributes set of attributes for this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "set of attributes for this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "attributes set of attributes for this field."}], "parameterName": "attributes", "parameterComment": "set of attributes for this field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.Class<?>, io.realm.FieldAttribute...)", "flatSignature": "(String, Class<?>, FieldAttribute...)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Adds a new field that references another {@link RealmObject}.", "name": "addRealmObjectField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 160, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objectSchema schema for the Realm type being referenced.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schema for the Realm type being referenced."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objectSchema schema for the Realm type being referenced."}], "parameterName": "objectSchema", "parameterComment": "schema for the Realm type being referenced.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name is illegal or a field with that name already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name is illegal or a field with that name already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name is illegal or a field with that name already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name is illegal or a field with that name already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references another ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references another "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references another"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references another ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references another "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references another"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.addRealmObjectField", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "objectSchema", "typeName": "RealmObjectSchema", "asString": "RealmObjectSchema objectSchema", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name is illegal or a field with that name already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name is illegal or a field with that name already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name is illegal or a field with that name already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name is illegal or a field with that name already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objectSchema schema for the Realm type being referenced.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schema for the Realm type being referenced."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objectSchema schema for the Realm type being referenced."}], "parameterName": "objectSchema", "parameterComment": "schema for the Realm type being referenced.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.RealmObjectSchema)", "flatSignature": "(String, RealmObjectSchema)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Adds a new field that contains a {@link RealmList} with references to other Realm model classes.\n <p>\n If the list contains primitive types, use {@link #addRealmListField(String, Class)} instead.", "name": "addRealmListField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 173, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objectSchema schema for the Realm type being referenced.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schema for the Realm type being referenced."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objectSchema schema for the Realm type being referenced."}], "parameterName": "objectSchema", "parameterComment": "schema for the Realm type being referenced.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name is illegal or a field with that name already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name is illegal or a field with that name already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name is illegal or a field with that name already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name is illegal or a field with that name already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that contains a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that contains a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that contains a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with references to other Realm model classes.\n <p>\n If the list contains primitive types, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " with references to other Realm model classes.\n <p>\n If the list contains primitive types, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "with references to other Realm model classes."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#addRealmListField(String, Class)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmListField(String, Class)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmListField(String, Class)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "addRealmListField(String, Class)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that contains a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that contains a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that contains a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with references to other Realm model classes.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " with references to other Realm model classes."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "with references to other Realm model classes."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.addRealmListField", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "objectSchema", "typeName": "RealmObjectSchema", "asString": "RealmObjectSchema objectSchema", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name is illegal or a field with that name already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name is illegal or a field with that name already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name is illegal or a field with that name already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name is illegal or a field with that name already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objectSchema schema for the Realm type being referenced.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "schema for the Realm type being referenced."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objectSchema schema for the Realm type being referenced."}], "parameterName": "objectSchema", "parameterComment": "schema for the Realm type being referenced.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.RealmObjectSchema)", "flatSignature": "(String, RealmObjectSchema)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Adds a new field that references a {@link RealmList} with primitive values. See {@link RealmObject} for the\n list of supported types.\n <p>\n Nullability of elements are defined by using the correct class e.g., {@code Integer.class} instead of\n {@code int.class}. Alternatively {@link #setRequired(String, boolean)} can be used.\n <p>\n Example:\n <pre>\n {@code\n // Defines the list of Strings as being non null.\n RealmObjectSchema schema = schema.create(\"Person\")\n     .addRealmListField(\"children\", String.class)\n     .setRequired(\"children\", true)\n }\n </pre>\n If the list contains references to other Realm classes, use\n {@link #addRealmListField(String, RealmObjectSchema)} instead.", "name": "addRealmListField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 201, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "primitiveType simple type of elements in the array.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "simple type of elements in the array."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "primitiveType simple type of elements in the array."}], "parameterName": "primitiveType", "parameterComment": "simple type of elements in the array.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name is illegal, a field with that name already exists or\n the element type isn't supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name is illegal, a field with that name already exists or\n the element type isn't supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name is illegal, a field with that name already exists or\n the element type isn't supported."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name is illegal, a field with that name already exists or\n the element type isn't supported.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with primitive values. See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " with primitive values. See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "with primitive values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the\n list of supported types.\n <p>\n Nullability of elements are defined by using the correct class e.g., ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the\n list of supported types.\n <p>\n Nullability of elements are defined by using the correct class e.g., "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for the\n list of supported types."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer.class", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.class"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.class"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead of\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead of"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int.class", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int.class"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int.class"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Alternatively ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Alternatively "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#setRequired(String, boolean)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setRequired(String, boolean)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setRequired(String, boolean)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "setRequired(String, boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be used.\n <p>\n Example:\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be used.\n <p>\n Example:\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can be used."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n // Defines the list of Strings as being non null.\n RealmObjectSchema schema = schema.create(\"Person\")\n     .addRealmListField(\"children\", String.class)\n     .setRequired(\"children\", true)\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n // Defines the list of Strings as being non null.\n RealmObjectSchema schema = schema.create(\"Person\")\n     .addRealmListField(\"children\", String.class)\n     .setRequired(\"children\", true)\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "// Defines the list of Strings as being non null."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n If the list contains references to other Realm classes, use\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n If the list contains references to other Realm classes, use\n "}], "firstSentenceTags": []}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#addRealmListField(String, RealmObjectSchema)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmListField(String, RealmObjectSchema)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addRealmListField(String, RealmObjectSchema)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "addRealmListField(String, RealmObjectSchema)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a new field that references a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with primitive values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " with primitive values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "with primitive values."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.addRealmListField", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<?>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "primitiveType", "typeName": "java.lang.Class<?>", "asString": "java.lang.Class<?> primitiveType", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name is illegal, a field with that name already exists or\n the element type isn't supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name is illegal, a field with that name already exists or\n the element type isn't supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name is illegal, a field with that name already exists or\n the element type isn't supported."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name is illegal, a field with that name already exists or\n the element type isn't supported.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the field to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the field to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the field to add."}], "parameterName": "fieldName", "parameterComment": "name of the field to add.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "primitiveType simple type of elements in the array.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "simple type of elements in the array."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "primitiveType simple type of elements in the array."}], "parameterName": "primitiveType", "parameterComment": "simple type of elements in the array.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.Class<?>)", "flatSignature": "(String, Class<?>)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Removes a field from the class.", "name": "removeField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 211, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to remove."}], "parameterName": "fieldName", "parameterComment": "field name to remove.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a field from the class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a field from the class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a field from the class."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a field from the class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a field from the class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a field from the class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.removeField", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to remove."}], "parameterName": "fieldName", "parameterComment": "field name to remove.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Renames a field from one name to another.", "name": "renameField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 222, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "currentFieldName field name to rename.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to rename."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "currentFieldName field name to rename."}], "parameterName": "currentFieldName", "parameterComment": "field name to rename.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newFieldName the new field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newFieldName the new field name."}], "parameterName": "newFieldName", "parameterComment": "the new field name.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or if the new field name already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or if the new field name already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or if the new field name already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or if the new field name already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Renames a field from one name to another.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Renames a field from one name to another."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Renames a field from one name to another."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Renames a field from one name to another.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Renames a field from one name to another."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Renames a field from one name to another."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.renameField", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "currentFieldName", "typeName": "String", "asString": "String currentFieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "newFieldName", "typeName": "String", "asString": "String newFieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or if the new field name already exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or if the new field name already exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or if the new field name already exists."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or if the new field name already exists.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or for a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or for a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "currentFieldName field name to rename.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to rename."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "currentFieldName field name to rename."}], "parameterName": "currentFieldName", "parameterComment": "field name to rename.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newFieldName the new field name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new field name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newFieldName the new field name."}], "parameterName": "newFieldName", "parameterComment": "the new field name.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String)", "flatSignature": "(String, String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Tests if the class has field defined with the given name.", "name": "hasField", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 230, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to test.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to test."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to test."}], "parameterName": "fieldName", "parameterComment": "field name to test.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the field exists, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the field exists, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the field exists, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to test.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to test."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to test."}], "parameterName": "fieldName", "parameterComment": "field name to test.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tests if the class has field defined with the given name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tests if the class has field defined with the given name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tests if the class has field defined with the given name."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tests if the class has field defined with the given name.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tests if the class has field defined with the given name."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tests if the class has field defined with the given name."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.hasField", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field name to test.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field name to test."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field name to test."}], "parameterName": "fieldName", "parameterComment": "field name to test.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds an index to a given field. This is the equivalent of adding the {@link io.realm.annotations.Index}\n annotation on the field.", "name": "addIndex", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 244, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to add index to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to add index to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to add index to."}], "parameterName": "fieldName", "parameterComment": "field to add index to.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be indexed or it already has a\n index defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, the field cannot be indexed or it already has a\n index defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be indexed or it already has a\n index defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, the field cannot be indexed or it already has a\n index defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds an index to a given field. This is the equivalent of adding the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds an index to a given field. This is the equivalent of adding the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds an index to a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.Index", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "label": "", "referencedClassName": "io.realm.annotations.Index", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Index", "typeName": "Index", "qualifiedTypeName": "io.realm.annotations.Index", "simpleTypeName": "Index", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation on the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation on the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation on the field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds an index to a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds an index to a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds an index to a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.addIndex", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be indexed or it already has a\n index defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, the field cannot be indexed or it already has a\n index defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be indexed or it already has a\n index defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, the field cannot be indexed or it already has a\n index defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to add index to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to add index to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to add index to."}], "parameterName": "fieldName", "parameterComment": "field to add index to.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Checks if a given field has an index defined.", "name": "hasIndex", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 254, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName existing field name to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "existing field name to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName existing field name to check."}], "parameterName": "fieldName", "parameterComment": "existing field name to check.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if field is indexed, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field is indexed, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field is indexed, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.annotations.Index", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "label": "", "referencedClassName": "io.realm.annotations.Index", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Index", "typeName": "Index", "qualifiedTypeName": "io.realm.annotations.Index", "simpleTypeName": "Index", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.annotations.Index", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "label": "", "referencedClassName": "io.realm.annotations.Index", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Index", "typeName": "Index", "qualifiedTypeName": "io.realm.annotations.Index", "simpleTypeName": "Index", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field has an index defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field has an index defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field has an index defined."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field has an index defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field has an index defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field has an index defined."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.hasIndex", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName existing field name to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "existing field name to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName existing field name to check."}], "parameterName": "fieldName", "parameterComment": "existing field name to check.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes an index from a given field. This is the same as removing the {@code @Index} annotation on the field.", "name": "removeIndex", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 268, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to remove index from.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to remove index from."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to remove index from."}], "parameterName": "fieldName", "parameterComment": "field to remove index from.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or the field doesn't have an index.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or the field doesn't have an index."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or the field doesn't have an index."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or the field doesn't have an index.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes an index from a given field. This is the same as removing the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes an index from a given field. This is the same as removing the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes an index from a given field."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "@Index", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "@Index"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "@Index"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation on the field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation on the field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation on the field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes an index from a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes an index from a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes an index from a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.removeIndex", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist or the field doesn't have an index.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist or the field doesn't have an index."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist or the field doesn't have an index."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist or the field doesn't have an index.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to remove index from.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to remove index from."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to remove index from."}], "parameterName": "fieldName", "parameterComment": "field to remove index from.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Adds a primary key to a given field. This is the same as adding the {@link io.realm.annotations.PrimaryKey}\n annotation on the field. Further, this implicitly adds {@link io.realm.annotations.Index} annotation to the field\n as well.", "name": "addPrimaryKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 281, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to set as primary key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to set as primary key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to set as primary key."}], "parameterName": "fieldName", "parameterComment": "field to set as primary key.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a primary key to a given field. This is the same as adding the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a primary key to a given field. This is the same as adding the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a primary key to a given field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation on the field. Further, this implicitly adds ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation on the field. Further, this implicitly adds "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation on the field."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.Index", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "label": "", "referencedClassName": "io.realm.annotations.Index", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Index", "typeName": "Index", "qualifiedTypeName": "io.realm.annotations.Index", "simpleTypeName": "Index", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation to the field\n as well.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation to the field\n as well."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation to the field\n as well."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a primary key to a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a primary key to a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a primary key to a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.addPrimaryKey", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist, the field cannot be a primary key or it already\n has a primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to set as primary key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to set as primary key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to set as primary key."}], "parameterName": "fieldName", "parameterComment": "field to set as primary key.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Removes the primary key from this class. This is the same as removing the {@link io.realm.annotations.PrimaryKey}\n annotation from the class. Further, this implicitly removes {@link io.realm.annotations.Index} annotation from\n the field as well.", "name": "removePrimaryKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 292, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the class doesn't have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class doesn't have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the class doesn't have a primary key defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the class doesn't have a primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the primary key from this class. This is the same as removing the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the primary key from this class. This is the same as removing the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the primary key from this class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation from the class. Further, this implicitly removes ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n annotation from the class. Further, this implicitly removes "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation from the class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.Index", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.Index"}], "label": "", "referencedClassName": "io.realm.annotations.Index", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Index", "typeName": "Index", "qualifiedTypeName": "io.realm.annotations.Index", "simpleTypeName": "Index", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation from\n the field as well.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation from\n the field as well."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "annotation from\n the field as well."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the primary key from this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the primary key from this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the primary key from this class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.removePrimaryKey", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the class doesn't have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class doesn't have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the class doesn't have a primary key defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the class doesn't have a primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable or of a synced Realm."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable or of a synced Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets a field to be required i.e., it is not allowed to hold {@code null} values. This is equivalent to switching\n between boxed types and their primitive variant e.g., {@code Integer} to {@code int}.\n <p>\n If the type of designated field is a list of values (not {@link RealmObject}s , specified nullability\n only affects its elements, not the field itself. Value list itself is always non-nullable.", "name": "setRequired", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 309, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of field in the class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of field in the class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of field in the class."}], "parameterName": "fieldName", "parameterComment": "name of field in the class.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "required {@code true} if field should be required, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "required "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "parameterName": "required", "parameterComment": "{@code true} if field should be required, {@code false} otherwise.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name doesn't exist, cannot have the {@link Required} annotation or\n the field already have been set as required.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name doesn't exist, cannot have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Required", "label": "", "referencedClassName": "io.realm.annotations.Required", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Required", "typeName": "Required", "qualifiedTypeName": "io.realm.annotations.Required", "simpleTypeName": "Required", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation or\n the field already have been set as required."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name doesn't exist, cannot have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Required", "label": "", "referencedClassName": "io.realm.annotations.Required", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Required", "typeName": "Required", "qualifiedTypeName": "io.realm.annotations.Required", "simpleTypeName": "Required", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation or\n the field already have been set as required."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name doesn't exist, cannot have the {@link Required} annotation or\n the field already have been set as required.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Required", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Required"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Required"}], "label": "", "referencedClassName": "io.realm.annotations.Required", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Required", "typeName": "Required", "qualifiedTypeName": "io.realm.annotations.Required", "simpleTypeName": "Required", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Required", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Required"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Required"}], "label": "", "referencedClassName": "io.realm.annotations.Required", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Required", "typeName": "Required", "qualifiedTypeName": "io.realm.annotations.Required", "simpleTypeName": "Required", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be required i.e., it is not allowed to hold ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be required i.e., it is not allowed to hold "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be required i.e., it is not allowed to hold"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values. This is equivalent to switching\n between boxed types and their primitive variant e.g., ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values. This is equivalent to switching\n between boxed types and their primitive variant e.g., "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n If the type of designated field is a list of values (not ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n If the type of designated field is a list of values (not "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s , specified nullability\n only affects its elements, not the field itself. Value list itself is always non-nullable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s , specified nullability\n only affects its elements, not the field itself. Value list itself is always non-nullable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s , specified nullability\n only affects its elements, not the field itself."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be required i.e., it is not allowed to hold ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be required i.e., it is not allowed to hold "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be required i.e., it is not allowed to hold"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.setRequired", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "required", "typeName": "boolean", "asString": "boolean required", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name doesn't exist, cannot have the {@link Required} annotation or\n the field already have been set as required.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name doesn't exist, cannot have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Required", "label": "", "referencedClassName": "io.realm.annotations.Required", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Required", "typeName": "Required", "qualifiedTypeName": "io.realm.annotations.Required", "simpleTypeName": "Required", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation or\n the field already have been set as required."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name doesn't exist, cannot have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Required", "label": "", "referencedClassName": "io.realm.annotations.Required", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.Required", "typeName": "Required", "qualifiedTypeName": "io.realm.annotations.Required", "simpleTypeName": "Required", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation or\n the field already have been set as required."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name doesn't exist, cannot have the {@link Required} annotation or\n the field already have been set as required.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of field in the class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of field in the class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of field in the class."}], "parameterName": "fieldName", "parameterComment": "name of field in the class.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "required {@code true} if field should be required, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "required "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "parameterName": "required", "parameterComment": "{@code true} if field should be required, {@code false} otherwise.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, boolean)", "flatSignature": "(String, boolean)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets a field to be nullable i.e., it should be able to hold {@code null} values. This is equivalent to switching\n between primitive types and their boxed variant e.g., {@code int} to {@code Integer}.\n <p>\n If the type of designated field is a list of values (not {@link RealmObject}s , specified nullability\n only affects its elements, not the field itself. Value list itself is always non-nullable.", "name": "setNullable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 324, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of field in the class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of field in the class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of field in the class."}], "parameterName": "fieldName", "parameterComment": "name of field in the class.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "nullable {@code true} if field should be nullable, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be nullable, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "nullable "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be nullable, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "parameterName": "nullable", "parameterComment": "{@code true} if field should be nullable, {@code false} otherwise.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the updated schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the updated schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name doesn't exist, or cannot be set as nullable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name doesn't exist, or cannot be set as nullable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name doesn't exist, or cannot be set as nullable."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name doesn't exist, or cannot be set as nullable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be nullable i.e., it should be able to hold ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be nullable i.e., it should be able to hold "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be nullable i.e., it should be able to hold"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values. This is equivalent to switching\n between primitive types and their boxed variant e.g., ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values. This is equivalent to switching\n between primitive types and their boxed variant e.g., "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "int", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "int"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n If the type of designated field is a list of values (not ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n If the type of designated field is a list of values (not "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s , specified nullability\n only affects its elements, not the field itself. Value list itself is always non-nullable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s , specified nullability\n only affects its elements, not the field itself. Value list itself is always non-nullable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s , specified nullability\n only affects its elements, not the field itself."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be nullable i.e., it should be able to hold ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be nullable i.e., it should be able to hold "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a field to be nullable i.e., it should be able to hold"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.setNullable", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "nullable", "typeName": "boolean", "asString": "boolean nullable", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the field name doesn't exist, or cannot be set as nullable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field name doesn't exist, or cannot be set as nullable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the field name doesn't exist, or cannot be set as nullable."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the field name doesn't exist, or cannot be set as nullable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of field in the class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of field in the class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of field in the class."}], "parameterName": "fieldName", "parameterComment": "name of field in the class.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "nullable {@code true} if field should be nullable, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be nullable, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "nullable "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if field should be nullable, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "parameterName": "nullable", "parameterComment": "{@code true} if field should be nullable, {@code false} otherwise.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, boolean)", "flatSignature": "(String, boolean)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Checks if a given field is required i.e., it is not allowed to contain {@code null} values.", "name": "isRequired", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 334, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to check."}], "parameterName": "fieldName", "parameterComment": "field to check.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if it is required, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#setRequired(String, boolean)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setRequired(String, boolean)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setRequired(String, boolean)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "setRequired(String, boolean)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#setRequired(String, boolean)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setRequired(String, boolean)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setRequired(String, boolean)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "setRequired(String, boolean)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is required i.e., it is not allowed to contain ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is required i.e., it is not allowed to contain "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is required i.e., it is not allowed to contain"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is required i.e., it is not allowed to contain ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is required i.e., it is not allowed to contain "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is required i.e., it is not allowed to contain"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.isRequired", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to check."}], "parameterName": "fieldName", "parameterComment": "field to check.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Checks if a given field is nullable i.e., it is allowed to contain {@code null} values.", "name": "isNullable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 347, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to check."}], "parameterName": "fieldName", "parameterComment": "field to check.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if it is required, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is required, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#setNullable(String, boolean)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setNullable(String, boolean)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setNullable(String, boolean)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "setNullable(String, boolean)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#setNullable(String, boolean)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setNullable(String, boolean)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setNullable(String, boolean)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "setNullable(String, boolean)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is nullable i.e., it is allowed to contain ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is nullable i.e., it is allowed to contain "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is nullable i.e., it is allowed to contain"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is nullable i.e., it is allowed to contain ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is nullable i.e., it is allowed to contain "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is nullable i.e., it is allowed to contain"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.isNullable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to check."}], "parameterName": "fieldName", "parameterComment": "field to check.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Checks if a given field is the primary key field.", "name": "isPrimaryKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 360, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to check."}], "parameterName": "fieldName", "parameterComment": "field to check.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if it is the primary key field, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is the primary key field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is the primary key field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#addPrimaryKey(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addPrimaryKey(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addPrimaryKey(String)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "addPrimaryKey(String)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#addPrimaryKey(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addPrimaryKey(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addPrimaryKey(String)"}], "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "addPrimaryKey(String)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is the primary key field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a given field is the primary key field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.isPrimaryKey", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if field name doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if field name doesn't exist."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if field name doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName field to check.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field to check."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName field to check."}], "parameterName": "fieldName", "parameterComment": "field to check.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Checks if the class has a primary key defined.", "name": "hasPrimaryKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 371, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if a primary key is defined, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if a primary key is defined, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if a primary key is defined, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the class has a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the class has a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the class has a primary key defined."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the class has a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the class has a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the class has a primary key defined."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.hasPrimaryKey", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the name of the primary key field.", "name": "getPrimaryKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 381, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the name of the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the primary key field."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the class doesn't have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class doesn't have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the class doesn't have a primary key defined."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the class doesn't have a primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the primary key field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the name of the primary key field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.getPrimaryKey", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the class doesn't have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class doesn't have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the class doesn't have a primary key defined."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the class doesn't have a primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns all fields in this class.", "name": "getFieldNames", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 394, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a list of all the fields in this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of all the fields in this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of all the fields in this class."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all fields in this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all fields in this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all fields in this class."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all fields in this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all fields in this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all fields in this class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.getFieldNames", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.Set<java.lang.String>", "typeName": "Set", "qualifiedTypeName": "java.util.Set", "simpleTypeName": "Set", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Runs a transformation function on each RealmObject instance of the current class. The object will be represented\n as a {@link DynamicRealmObject}.\n <p>\n There is no guarantees in which order the objects are returned.", "name": "transform", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 413, "column": 39, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "function transformation function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transformation function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "function transformation function."}], "parameterName": "function", "parameterComment": "transformation function.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "this schema.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this schema."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this schema."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Runs a transformation function on each RealmObject instance of the current class. The object will be represented\n as a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Runs a transformation function on each RealmObject instance of the current class. The object will be represented\n as a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Runs a transformation function on each RealmObject instance of the current class."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealmObject"}], "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n There is no guarantees in which order the objects are returned.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n There is no guarantees in which order the objects are returned."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Runs a transformation function on each RealmObject instance of the current class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Runs a transformation function on each RealmObject instance of the current class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Runs a transformation function on each RealmObject instance of the current class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.transform", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema.Function", "typeName": "RealmObjectSchema.Function", "qualifiedTypeName": "io.realm.RealmObjectSchema.Function", "simpleTypeName": "Function", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "function", "typeName": "RealmObjectSchema.Function", "asString": "RealmObjectSchema.Function function", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if this {@link RealmObjectSchema} is immutable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if this "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is immutable."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if this {@link RealmObjectSchema} is immutable.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "function transformation function.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transformation function."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "function transformation function."}], "parameterName": "function", "parameterComment": "transformation function.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmObjectSchema.Function)", "flatSignature": "(RealmObjectSchema.Function)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the type used by the underlying storage engine to represent this field.", "name": "getFieldType", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 421, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the target field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the target field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the target field."}], "parameterName": "fieldName", "parameterComment": "name of the target field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the underlying type used by Realm to represent this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the underlying type used by Realm to represent this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the underlying type used by Realm to represent this field."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the target field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the target field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the target field."}], "parameterName": "fieldName", "parameterComment": "name of the target field.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the type used by the underlying storage engine to represent this field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.getFieldType", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName name of the target field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name of the target field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName name of the target field."}], "parameterName": "fieldName", "parameterComment": "name of the target field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmFieldType", "typeName": "RealmFieldType", "qualifiedTypeName": "io.realm.RealmFieldType", "simpleTypeName": "RealmFieldType", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns {@code true} if objects of this type are considered \"embedded\".\n See {@link RealmClass#embedded()} for further details.", "name": "isEmbedded", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 432, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if objects of this type are embedded. {@code false} if not.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects of this type are embedded. "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if not."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects of this type are embedded."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects of this type are considered \"embedded\".\n See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects of this type are considered \"embedded\".\n See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if objects of this type are considered \"embedded\"."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for further details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for further details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for further details."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects of this type are considered \"embedded\".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects of this type are considered \"embedded\"."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if objects of this type are considered \"embedded\"."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.isEmbedded", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Converts the class to be embedded or not.\n <p>\n A class can only be marked as embedded if the following invariants are satisfied:\n <ul>\n     <li>\n         The class is not allowed to have a primary key defined.\n     </li>\n     <li>\n         All existing objects of this type, must have one and exactly one parent object\n         already pointing to it. If 0 or more than 1 object has a reference to an object\n         about to be marked embedded an {@link IllegalStateException} will be thrown.\n     </li>\n </ul>", "name": "setEmbedded", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 454, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the class could not be converted because it broke some of the Embedded Objects invariants.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class could not be converted because it broke some of the Embedded Objects invariants."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the class could not be converted because it broke some of the Embedded Objects invariants."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the class could not be converted because it broke some of the Embedded Objects invariants.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Converts the class to be embedded or not.\n <p>\n A class can only be marked as embedded if the following invariants are satisfied:\n <ul>\n     <li>\n         The class is not allowed to have a primary key defined.\n     </li>\n     <li>\n         All existing objects of this type, must have one and exactly one parent object\n         already pointing to it. If 0 or more than 1 object has a reference to an object\n         about to be marked embedded an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Converts the class to be embedded or not.\n <p>\n A class can only be marked as embedded if the following invariants are satisfied:\n <ul>\n     <li>\n         The class is not allowed to have a primary key defined.\n     </li>\n     <li>\n         All existing objects of this type, must have one and exactly one parent object\n         already pointing to it. If 0 or more than 1 object has a reference to an object\n         about to be marked embedded an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Converts the class to be embedded or not."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be thrown.\n     </li>\n </ul>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be thrown.\n     </li>\n </ul>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be thrown."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Converts the class to be embedded or not.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Converts the class to be embedded or not."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Converts the class to be embedded or not."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.setEmbedded", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "embedded", "typeName": "boolean", "asString": "boolean embedded", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the class could not be converted because it broke some of the Embedded Objects invariants.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the class could not be converted because it broke some of the Embedded Objects invariants."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the class could not be converted because it broke some of the Embedded Objects invariants."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the class could not be converted because it broke some of the Embedded Objects invariants.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "(boolean)", "flatSignature": "(boolean)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "", "name": "getSchemaConnector", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 538, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/RealmObjectSchema.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmObjectSchema.getSchemaConnector", "modifierSpecifier": 20, "modifiers": "protected final", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": true, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.SchemaConnector", "typeName": "SchemaConnector", "qualifiedTypeName": "io.realm.SchemaConnector", "simpleTypeName": "SchemaConnector", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "constructors": [], "innerClasses": [{"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema.Function", "typeName": "RealmObjectSchema.Function", "qualifiedTypeName": "io.realm.RealmObjectSchema.Function", "simpleTypeName": "Function", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}]}