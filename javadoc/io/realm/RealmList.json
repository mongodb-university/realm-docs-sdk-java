{"commentText": "RealmList is used to model one-to-many relationships in a {@link io.realm.RealmObject}.\n RealmList has two modes: A managed and unmanaged mode. In managed mode all objects are persisted inside a Realm, in\n unmanaged mode it works as a normal ArrayList.\n <p>\n Only Realm can create managed RealmLists. Managed RealmLists will automatically update the content whenever the\n underlying Realm is updated, and can only be accessed using the getter of a {@link io.realm.RealmObject}.\n <p>\n Unmanaged RealmLists can be created by the user and can contain both managed and unmanaged RealmObjects. This is\n useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class.\n Unmanaged elements in this list can be added to a Realm using the {@link Realm#copyToRealm(Iterable, ImportFlag...)} method.\n <p>\n {@link RealmList} can contain more elements than {@code Integer.MAX_VALUE}.\n In that case, you can access only first {@code Integer.MAX_VALUE} elements in it.", "name": "RealmList", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 63, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> the class of objects in list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of objects in list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> the class of objects in list."}], "parameterName": "E", "parameterComment": "the class of objects in list.", "isTypeParameter": true}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList is used to model one-to-many relationships in a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList is used to model one-to-many relationships in a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList is used to model one-to-many relationships in a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n RealmList has two modes: A managed and unmanaged mode. In managed mode all objects are persisted inside a Realm, in\n unmanaged mode it works as a normal ArrayList.\n <p>\n Only Realm can create managed RealmLists. Managed RealmLists will automatically update the content whenever the\n underlying Realm is updated, and can only be accessed using the getter of a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n RealmList has two modes: A managed and unmanaged mode. In managed mode all objects are persisted inside a Realm, in\n unmanaged mode it works as a normal ArrayList.\n <p>\n Only Realm can create managed RealmLists. Managed RealmLists will automatically update the content whenever the\n underlying Realm is updated, and can only be accessed using the getter of a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Unmanaged RealmLists can be created by the user and can contain both managed and unmanaged RealmObjects. This is\n useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class.\n Unmanaged elements in this list can be added to a Realm using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Unmanaged RealmLists can be created by the user and can contain both managed and unmanaged RealmObjects. This is\n useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class.\n Unmanaged elements in this list can be added to a Realm using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " method.\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " method.\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "method."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can contain more elements than ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can contain more elements than "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can contain more elements than"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer.MAX_VALUE", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.MAX_VALUE"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.MAX_VALUE"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n In that case, you can access only first ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n In that case, you can access only first "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Integer.MAX_VALUE", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.MAX_VALUE"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Integer.MAX_VALUE"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " elements in it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " elements in it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "elements in it."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList is used to model one-to-many relationships in a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList is used to model one-to-many relationships in a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList is used to model one-to-many relationships in a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.util.AbstractList": ["add", "get", "set", "add", "remove", "indexOf", "lastIndexOf", "clear", "addAll", "iterator", "listIterator", "listIterator", "subList", "equals", "hashCode", "removeRange"], "java.util.AbstractCollection": ["iterator", "size", "isEmpty", "contains", "toArray", "toArray", "add", "remove", "containsAll", "addAll", "removeAll", "retainAll", "clear", "toString"], "java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"], "io.realm.OrderedRealmCollection": ["first", "first", "last", "last", "sort", "sort", "sort", "sort", "deleteFromRealm", "deleteFirstFromRealm", "deleteLastFromRealm", "createSnapshot"], "java.util.List": ["size", "isEmpty", "contains", "iterator", "toArray", "toArray", "add", "remove", "containsAll", "addAll", "addAll", "removeAll", "retainAll", "replaceAll", "sort", "clear", "equals", "hashCode", "get", "set", "add", "remove", "indexOf", "lastIndexOf", "listIterator", "listIterator", "subList", "spliterator"], "io.realm.RealmCollection": ["where", "min", "max", "sum", "average", "maxDate", "minDate", "deleteAllFromRealm", "isLoaded", "load", "isValid", "isManaged", "contains", "freeze"], "java.util.Collection": ["size", "isEmpty", "contains", "iterator", "toArray", "toArray", "add", "remove", "containsAll", "addAll", "removeAll", "removeIf", "retainAll", "clear", "equals", "hashCode", "spliterator", "stream", "parallelStream"], "java.lang.Iterable": ["iterator", "forEach", "spliterator"], "io.realm.internal.ManageableObject": ["isManaged", "isValid", "isFrozen"]}, "interfaceTypes": [{"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.List", "io.realm.RealmCollection"]}, {"_class": "ParameterizedType", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}, {"_class": "ParameterizedType", "asString": "io.realm.RealmCollection<E>", "typeName": "RealmCollection", "qualifiedTypeName": "io.realm.RealmCollection", "simpleTypeName": "RealmCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Collection", "io.realm.internal.ManageableObject"]}, {"_class": "ParameterizedType", "asString": "java.util.Collection<E>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.lang.Iterable"]}, {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}, {"_class": "ParameterizedType", "asString": "java.util.Collection<E>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.lang.Iterable"]}, {"_class": "ClassDoc", "asString": "io.realm.internal.ManageableObject", "typeName": "ManageableObject", "qualifiedTypeName": "io.realm.internal.ManageableObject", "simpleTypeName": "ManageableObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}], "typeParameters": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> the class of objects in list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of objects in list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> the class of objects in list."}], "parameterName": "E", "parameterComment": "the class of objects in list.", "isTypeParameter": true}], "fields": [{"commentText": "", "name": "clazz", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 70, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.clazz", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}, {"commentText": "", "name": "className", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 72, "column": 22, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.className", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}, {"commentText": "The {@link BaseRealm} instance in which this list resides.\n <p>\n Warning: This field is only exposed for internal usage, and should not be used.", "name": "baseRealm", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 82, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BaseRealm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BaseRealm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BaseRealm"}], "label": "", "referencedClassName": "io.realm.BaseRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance in which this list resides.\n <p>\n Warning: This field is only exposed for internal usage, and should not be used.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance in which this list resides.\n <p>\n Warning: This field is only exposed for internal usage, and should not be used."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance in which this list resides."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "BaseRealm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BaseRealm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "BaseRealm"}], "label": "", "referencedClassName": "io.realm.BaseRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance in which this list resides.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance in which this list resides."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance in which this list resides."}]}], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.baseRealm", "modifierSpecifier": 17, "modifiers": "public final", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": true, "isSynthetic": false, "type": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}], "enumConstants": [], "methods": [{"commentText": "{@inheritDoc}", "name": "isValid", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 150, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if it is still valid to use or an unmanaged collection, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is still valid to use or an unmanaged collection, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is still valid to use or an unmanaged collection, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is still valid to use, i.e., the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is still valid to use, i.e., the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is still valid to use, i.e., the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance hasn't been closed. It\n will always return ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance hasn't been closed. It\n will always return "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance hasn't been closed."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for an unmanaged collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is still valid to use, i.e., the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is still valid to use, i.e., the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is still valid to use, i.e., the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance hasn't been closed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance hasn't been closed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance hasn't been closed."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.isValid", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "freeze", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 165, "column": 25, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a frozen copy of this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this collection."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this method is called from inside a write transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this method is called from inside a write transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this method is called from inside a write transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this method is called from inside a write transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of this collection. The frozen copy can be read and queried from any thread without throwing\n an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of this collection. The frozen copy can be read and queried from any thread without throwing\n an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of this collection."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Freezing a collection also creates a Realm which has its own lifecycle, but if the live Realm that spawned the\n original collection is fully closed (i.e. all instances across all threads are closed), the frozen Realm and this\n collection will be closed as well.\n <p>\n Frozen collections can be queried as normal, but trying to mutate it in any way or attempting to register a listener will\n throw an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Freezing a collection also creates a Realm which has its own lifecycle, but if the live Realm that spawned the\n original collection is fully closed (i.e. all instances across all threads are closed), the frozen Realm and this\n collection will be closed as well.\n <p>\n Frozen collections can be queried as normal, but trying to mutate it in any way or attempting to register a listener will\n throw an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of frozen collections with different versions alive can have a negative impact on the filesize\n of the Realm. In order to avoid such a situation, it is possible to set ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of frozen collections with different versions alive can have a negative impact on the filesize\n of the Realm. In order to avoid such a situation, it is possible to set "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "maxNumberOfActiveVersions(long)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of this collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.freeze", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}}, {"commentText": "{@inheritDoc}", "name": "isFrozen", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 187, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the object is frozen, {@code false} if it is not.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the object is frozen, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is not."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the object is frozen, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it is not."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns whether or not this object is frozen.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns whether or not this object is frozen."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns whether or not this object is frozen."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns whether or not this object is frozen.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns whether or not this object is frozen."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns whether or not this object is frozen."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.isFrozen", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "isManaged", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 195, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if this is a managed {@link RealmCollection}, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this is a managed "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmCollection", "label": "", "referencedClassName": "io.realm.RealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmCollection<E>", "typeName": "RealmCollection", "qualifiedTypeName": "io.realm.RealmCollection", "simpleTypeName": "RealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this is a managed "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmCollection", "label": "", "referencedClassName": "io.realm.RealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmCollection<E>", "typeName": "RealmCollection", "qualifiedTypeName": "io.realm.RealmCollection", "simpleTypeName": "RealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is managed by Realm. A managed collection is just a wrapper around the data in the\n underlying Realm file. On Looper threads, a managed collection will be live-updated so it always points to the\n latest data. Managed collections are thread confined so that they cannot be accessed from other threads than the\n one that created them.\n <p>\n <p>\n If this method returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is managed by Realm. A managed collection is just a wrapper around the data in the\n underlying Realm file. On Looper threads, a managed collection will be live-updated so it always points to the\n latest data. Managed collections are thread confined so that they cannot be accessed from other threads than the\n one that created them.\n <p>\n <p>\n If this method returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is managed by Realm."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "false"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "false"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the collection is unmanaged. An unmanaged collection is just a normal java\n collection, so it will not be live updated.\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the collection is unmanaged. An unmanaged collection is just a normal java\n collection, so it will not be live updated.\n <p>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the collection is unmanaged."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is managed by Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is managed by Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the collection is managed by Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.isManaged", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Inserts the specified object into this List at the specified location. The object is inserted before any previous\n element at the specified location. If the location is equal to the size of this List, the object is added at the\n end.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n {@link Realm#copyToRealm(RealmModel, ImportFlag...)} afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed. In\n that case the object will transparently be copied to Realm using {@link Realm#copyToRealm(RealmModel, ImportFlag...)}\n or {@link Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)} if it has a primary key.</li>\n </ol>", "name": "add", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 222, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index at which to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index at which to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index at which to insert."}], "parameterName": "location", "parameterComment": "the index at which to insert.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "element the element to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "element the element to add."}], "parameterName": "element", "parameterComment": "the element to add.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or container object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or container object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or container object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or container object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location > size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location > size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location > size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location > size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index at which to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index at which to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index at which to insert."}], "parameterName": "location", "parameterComment": "the index at which to insert.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "element the element to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "element the element to add."}], "parameterName": "element", "parameterComment": "the element to add.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the specified object into this List at the specified location. The object is inserted before any previous\n element at the specified location. If the location is equal to the size of this List, the object is added at the\n end.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the specified object into this List at the specified location. The object is inserted before any previous\n element at the specified location. If the location is equal to the size of this List, the object is added at the\n end.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the specified object into this List at the specified location."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed. In\n that case the object will transparently be copied to Realm using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed. In\n that case the object will transparently be copied to Realm using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it has a primary key.</li>\n </ol>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it has a primary key.</li>\n </ol>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it has a primary key.</li>\n </ol>"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the specified object into this List at the specified location.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the specified object into this List at the specified location."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts the specified object into this List at the specified location."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.add", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}, {"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "element", "typeName": "E", "asString": "E element", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or container object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or container object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or container object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or container object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location > size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location > size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location > size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location > size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index at which to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index at which to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index at which to insert."}], "parameterName": "location", "parameterComment": "the index at which to insert.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "element the element to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "element the element to add."}], "parameterName": "element", "parameterComment": "the element to add.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(int, E)", "flatSignature": "(int, E)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Adds the specified object at the end of this List.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n {@link Realm#copyToRealm(RealmModel, ImportFlag...)} afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed. In\n that case the object will transparently be copied to Realm using {@link Realm#copyToRealm(RealmModel, ImportFlag...)}\n or {@link Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)} if it has a primary key.</li>\n </ol>", "name": "add", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 249, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the object to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the object to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the object to add."}], "parameterName": "object", "parameterComment": "the object to add.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "always {@code true}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "always "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "always "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds the specified object at the end of this List.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds the specified object at the end of this List.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds the specified object at the end of this List."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed. In\n that case the object will transparently be copied to Realm using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed. In\n that case the object will transparently be copied to Realm using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it has a primary key.</li>\n </ol>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it has a primary key.</li>\n </ol>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it has a primary key.</li>\n </ol>"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds the specified object at the end of this List.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds the specified object at the end of this List."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds the specified object at the end of this List."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.add", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "object", "typeName": "E", "asString": "E object", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the object to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the object to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the object to add."}], "parameterName": "object", "parameterComment": "the object to add.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(E)", "flatSignature": "(E)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Replaces the element at the specified location in this list with the specified object.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n {@link Realm#copyToRealm(RealmModel, ImportFlag...)} afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed.\n In that case the object will transparently be copied to Realm using {@link Realm#copyToRealm(RealmModel, ImportFlag...)} or\n {@link Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)} if it has a primary key.</li>\n </ol>", "name": "set", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 278, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index at which to put the specified object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index at which to put the specified object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index at which to put the specified object."}], "parameterName": "location", "parameterComment": "the index at which to put the specified object.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the object to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the object to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the object to add."}], "parameterName": "object", "parameterComment": "the object to add.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the previous element at the index.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the previous element at the index."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the previous element at the index."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the element at the specified location in this list with the specified object.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the element at the specified location in this list with the specified object.\n <ol>\n <li><b>Unmanaged RealmLists</b>: It is possible to add both managed and unmanaged objects. If adding managed\n objects to an unmanaged RealmList they will not be copied to the Realm again if using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the element at the specified location in this list with the specified object."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed.\n In that case the object will transparently be copied to Realm using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed.\n In that case the object will transparently be copied to Realm using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "afterwards.</li>\n <li><b>Managed RealmLists</b>: It is possible to add unmanaged objects to a RealmList that is already managed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it has a primary key.</li>\n </ol>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if it has a primary key.</li>\n </ol>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it has a primary key.</li>\n </ol>"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the element at the specified location in this list with the specified object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the element at the specified location in this list with the specified object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the element at the specified location in this list with the specified object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.set", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}, {"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "object", "typeName": "E", "asString": "E object", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index at which to put the specified object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index at which to put the specified object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index at which to put the specified object."}], "parameterName": "location", "parameterComment": "the index at which to put the specified object.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the object to add.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the object to add."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the object to add."}], "parameterName": "object", "parameterComment": "the object to add.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(int, E)", "flatSignature": "(int, E)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Moves an object from one position to another, while maintaining a fixed sized list.\n RealmObjects will be shifted so no {@code null} values are introduced.", "name": "move", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 299, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "oldPos index of RealmObject to move.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "index of RealmObject to move."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "oldPos index of RealmObject to move."}], "parameterName": "oldPos", "parameterComment": "index of RealmObject to move.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPos target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPos target position."}], "parameterName": "newPos", "parameterComment": "target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IndexOutOfBoundsException if any position is outside [0, size()].", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any position is outside [0, size()]."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IndexOutOfBoundsException if any position is outside [0, size()]."}], "exceptionName": "java.lang.IndexOutOfBoundsException", "exceptionComment": "if any position is outside [0, size()].", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "oldPos index of RealmObject to move.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "index of RealmObject to move."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "oldPos index of RealmObject to move."}], "parameterName": "oldPos", "parameterComment": "index of RealmObject to move.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPos target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPos target position."}], "parameterName": "newPos", "parameterComment": "target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Moves an object from one position to another, while maintaining a fixed sized list.\n RealmObjects will be shifted so no ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Moves an object from one position to another, while maintaining a fixed sized list.\n RealmObjects will be shifted so no "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Moves an object from one position to another, while maintaining a fixed sized list."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values are introduced.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " values are introduced."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "values are introduced."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Moves an object from one position to another, while maintaining a fixed sized list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Moves an object from one position to another, while maintaining a fixed sized list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Moves an object from one position to another, while maintaining a fixed sized list."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.move", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "oldPos", "typeName": "int", "asString": "int oldPos", "annotations": []}, {"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "newPos", "typeName": "int", "asString": "int newPos", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IndexOutOfBoundsException if any position is outside [0, size()].", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any position is outside [0, size()]."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IndexOutOfBoundsException if any position is outside [0, size()]."}], "exceptionName": "java.lang.IndexOutOfBoundsException", "exceptionComment": "if any position is outside [0, size()].", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "oldPos index of RealmObject to move.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "index of RealmObject to move."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "oldPos index of RealmObject to move."}], "parameterName": "oldPos", "parameterComment": "index of RealmObject to move.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPos target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPos target position."}], "parameterName": "newPos", "parameterComment": "target position. If newPos &lt; oldPos the object at the location will be shifted to the right. If\n oldPos &lt; newPos, indexes &gt; oldPos will be shifted once to the left.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(int, int)", "flatSignature": "(int, int)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes all elements from this list, leaving it empty. This method doesn't remove the objects from the Realm.", "name": "clear", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 325, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "List#isEmpty", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#isEmpty"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#isEmpty"}], "label": "", "referencedClassName": "java.util.List", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "referencedMemberName": "isEmpty"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "List#size", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#size"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#size"}], "label": "", "referencedClassName": "java.util.List", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "referencedMemberName": "size"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#deleteAllFromRealm()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#deleteAllFromRealm()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#deleteAllFromRealm()"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "deleteAllFromRealm()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "List#isEmpty", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#isEmpty"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#isEmpty"}], "label": "", "referencedClassName": "java.util.List", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "referencedMemberName": "isEmpty"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "List#size", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#size"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#size"}], "label": "", "referencedClassName": "java.util.List", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "referencedMemberName": "size"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#deleteAllFromRealm()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#deleteAllFromRealm()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#deleteAllFromRealm()"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "deleteAllFromRealm()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all elements from this list, leaving it empty. This method doesn't remove the objects from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all elements from this list, leaving it empty. This method doesn't remove the objects from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all elements from this list, leaving it empty."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all elements from this list, leaving it empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all elements from this list, leaving it empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all elements from this list, leaving it empty."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.clear", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Removes the object at the specified location from this list.", "name": "remove", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 344, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index of the object to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index of the object to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index of the object to remove."}], "parameterName": "location", "parameterComment": "the index of the object to remove.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the removed object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the removed object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the removed object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the object at the specified location from this list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the object at the specified location from this list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the object at the specified location from this list."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the object at the specified location from this list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the object at the specified location from this list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the object at the specified location from this list."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.remove", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index of the object to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index of the object to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index of the object to remove."}], "parameterName": "location", "parameterComment": "the index of the object to remove.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(int)", "flatSignature": "(int)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Removes one instance of the specified object from this {@code Collection} if one\n is contained. This implementation iterates over this\n {@code Collection} and tests each element {@code e} returned by the iterator,\n whether {@code e} is equal to the given object. If {@code object != null}\n then this test is performed using {@code object.equals(e)}, otherwise\n using {@code object == null}. If an element equal to the given object is\n found, then the {@code remove} method is called on the iterator and\n {@code true} is returned, {@code false} otherwise. If the iterator does\n not support removing elements, an {@code UnsupportedOperationException}\n is thrown.", "name": "remove", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 375, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the object to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the object to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the object to remove."}], "parameterName": "object", "parameterComment": "the object to remove.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if this {@code Collection} is modified, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is modified, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is modified, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "ClassCastException if the object passed is not of the correct type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object passed is not of the correct type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ClassCastException if the object passed is not of the correct type."}], "exceptionName": "ClassCastException", "exceptionComment": "if the object passed is not of the correct type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.ClassCastException", "typeName": "ClassCastException", "qualifiedTypeName": "java.lang.ClassCastException", "simpleTypeName": "ClassCastException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NullPointerException if {@code object} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NullPointerException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "NullPointerException", "exceptionComment": "if {@code object} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes one instance of the specified object from this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes one instance of the specified object from this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes one instance of the specified object from this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if one\n is contained. This implementation iterates over this\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if one\n is contained. This implementation iterates over this\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if one\n is contained."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and tests each element ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and tests each element "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and tests each element"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "e", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "e"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "e"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned by the iterator,\n whether ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned by the iterator,\n whether "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returned by the iterator,\n whether"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "e", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "e"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "e"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is equal to the given object. If ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is equal to the given object. If "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is equal to the given object."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object != null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object != null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object != null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n then this test is performed using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n then this test is performed using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "then this test is performed using"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object.equals(e)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object.equals(e)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object.equals(e)"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise\n using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise\n using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise\n using"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object == null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object == null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object == null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". If an element equal to the given object is\n found, then the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". If an element equal to the given object is\n found, then the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "remove"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " method is called on the iterator and\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " method is called on the iterator and\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "method is called on the iterator and"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is returned, ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is returned, "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is returned,"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "false"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "false"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise. If the iterator does\n not support removing elements, an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise. If the iterator does\n not support removing elements, an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "otherwise."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "UnsupportedOperationException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is thrown."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes one instance of the specified object from this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes one instance of the specified object from this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes one instance of the specified object from this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if one\n is contained.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if one\n is contained."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if one\n is contained."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.remove", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "object", "typeName": "Object", "asString": "Object object", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "ClassCastException if the object passed is not of the correct type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object passed is not of the correct type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ClassCastException if the object passed is not of the correct type."}], "exceptionName": "ClassCastException", "exceptionComment": "if the object passed is not of the correct type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.ClassCastException", "typeName": "ClassCastException", "qualifiedTypeName": "java.lang.ClassCastException", "simpleTypeName": "ClassCastException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NullPointerException if {@code object} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NullPointerException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "object"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "NullPointerException", "exceptionComment": "if {@code object} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the object to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the object to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the object to remove."}], "parameterName": "object", "parameterComment": "the object to remove.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Removes all occurrences in this {@code Collection} of each object in the\n specified {@code Collection}. After this method returns none of the\n elements in the passed {@code Collection} can be found in this {@code Collection}\n anymore.\n <p>\n This implementation iterates over the {@code Collection} and tests each\n element {@code e} returned by the iterator, whether it is contained in\n the specified {@code Collection}. If this test is positive, then the {@code\n remove} method is called on the iterator.", "name": "removeAll", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 399, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "collection the collection of objects to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the collection of objects to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "collection the collection of objects to remove."}], "parameterName": "collection", "parameterComment": "the collection of objects to remove.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if this {@code Collection} is modified, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is modified, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is modified, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "ClassCastException if one or more elements of {@code collection} isn't of the correct type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if one or more elements of "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " isn't of the correct type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ClassCastException if one or more elements of "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " isn't of the correct type."}], "exceptionName": "ClassCastException", "exceptionComment": "if one or more elements of {@code collection} isn't of the correct type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.ClassCastException", "typeName": "ClassCastException", "qualifiedTypeName": "java.lang.ClassCastException", "simpleTypeName": "ClassCastException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NullPointerException if {@code collection} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NullPointerException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "NullPointerException", "exceptionComment": "if {@code collection} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all occurrences in this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all occurrences in this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all occurrences in this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " of each object in the\n specified ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " of each object in the\n specified "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "of each object in the\n specified"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". After this method returns none of the\n elements in the passed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". After this method returns none of the\n elements in the passed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be found in this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be found in this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can be found in this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n anymore.\n <p>\n This implementation iterates over the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n anymore.\n <p>\n This implementation iterates over the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "anymore."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and tests each\n element ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and tests each\n element "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and tests each\n element"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "e", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "e"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "e"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned by the iterator, whether it is contained in\n the specified ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned by the iterator, whether it is contained in\n the specified "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returned by the iterator, whether it is contained in\n the specified"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". If this test is positive, then the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". If this test is positive, then the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "remove"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " method is called on the iterator.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " method is called on the iterator."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "method is called on the iterator."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all occurrences in this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all occurrences in this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all occurrences in this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " of each object in the\n specified ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " of each object in the\n specified "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "of each object in the\n specified"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Collection"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.removeAll", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.Collection<?>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "?", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [], "superBounds": []}], "interfaceTypes": ["java.lang.Iterable"]}, "name": "collection", "typeName": "java.util.Collection<?>", "asString": "java.util.Collection<?> collection", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "ClassCastException if one or more elements of {@code collection} isn't of the correct type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if one or more elements of "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " isn't of the correct type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ClassCastException if one or more elements of "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " isn't of the correct type."}], "exceptionName": "ClassCastException", "exceptionComment": "if one or more elements of {@code collection} isn't of the correct type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.ClassCastException", "typeName": "ClassCastException", "qualifiedTypeName": "java.lang.ClassCastException", "simpleTypeName": "ClassCastException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NullPointerException if {@code collection} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NullPointerException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "NullPointerException", "exceptionComment": "if {@code collection} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "collection the collection of objects to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the collection of objects to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "collection the collection of objects to remove."}], "parameterName": "collection", "parameterComment": "the collection of objects to remove.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.util.Collection<?>)", "flatSignature": "(Collection<?>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "{@inheritDoc}", "name": "deleteFirstFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 410, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if an object was deleted, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called on the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called on the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called on the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called on the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm. This also removes it from this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm. This also removes it from this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the first object from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.deleteFirstFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "deleteLastFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 428, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if an object was deleted, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if an object was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm. This also removes it from this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm. This also removes it from this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the last object from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.deleteLastFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the element at the specified location in this list.", "name": "get", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 452, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index of the element to return.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index of the element to return."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index of the element to return."}], "parameterName": "location", "parameterComment": "the index of the element to return.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the element at the specified index.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element at the specified index."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element at the specified index."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the element at the specified location in this list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the element at the specified location in this list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the element at the specified location in this list."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the element at the specified location in this list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the element at the specified location in this list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the element at the specified location in this list."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.get", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the index of the element to return.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the index of the element to return."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the index of the element to return."}], "parameterName": "location", "parameterComment": "the index of the element to return.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(int)", "flatSignature": "(int)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "{@inheritDoc}", "name": "first", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 466, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the first object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if the collection is empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if the collection is empty."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if the collection is empty.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.first", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "{@inheritDoc}", "name": "first", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 475, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the first object or the provided default.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object or the provided default."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first object or the provided default."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection. If the collection is empty, the provided default will be used instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection. If the collection is empty, the provided default will be used instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the first object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.first", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "defaultValue", "typeName": "E", "asString": "E defaultValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(E)", "flatSignature": "(E)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "{@inheritDoc}", "name": "last", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 502, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the last object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if the collection is empty.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is empty."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if the collection is empty."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if the collection is empty.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.last", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "{@inheritDoc}", "name": "last", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 511, "column": 14, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the last object or the provided default.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object or the provided default."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the last object or the provided default."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection. If the collection is empty, the provided default will be used instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection. If the collection is empty, the provided default will be used instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Gets the last object from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.last", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "name": "defaultValue", "typeName": "E", "asString": "E defaultValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(E)", "flatSignature": "(E)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}}, {"commentText": "{@inheritDoc}", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 537, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if field name does not exist or it has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name does not exist or it has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if field name does not exist or it has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if field name does not exist or it has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field name to sort by."}], "parameterName": "fieldName", "parameterComment": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field in ascending order."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "{@inheritDoc}", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 545, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field name to sort by."}], "parameterName": "fieldName", "parameterComment": "the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date,\n and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder the direction to sort by.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the direction to sort by."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder the direction to sort by."}], "parameterName": "sortOrder", "parameterComment": "the direction to sort by.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided field and sort order."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "sortOrder", "typeName": "Sort", "asString": "Sort sortOrder", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String, io.realm.Sort)", "flatSignature": "(String, Sort)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "{@inheritDoc}", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 557, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if a field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName1 first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName1 first field name."}], "parameterName": "fieldName1", "parameterComment": "first field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder1 sort order for first field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sort order for first field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder1 sort order for first field."}], "parameterName": "sortOrder1", "parameterComment": "sort order for first field.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName2 second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName2 second field name."}], "parameterName": "fieldName2", "parameterComment": "second field name. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrder2 sort order for second field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sort order for second field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrder2 sort order for second field."}], "parameterName": "sortOrder2", "parameterComment": "sort order for second field.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName1", "typeName": "String", "asString": "String fieldName1", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "sortOrder1", "typeName": "Sort", "asString": "Sort sortOrder1", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName2", "typeName": "String", "asString": "String fieldName2", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "sortOrder2", "typeName": "Sort", "asString": "Sort sortOrder2", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String, io.realm.Sort, java.lang.String, io.realm.Sort)", "flatSignature": "(String, Sort, String, Sort)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "{@inheritDoc}", "name": "sort", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 565, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a new sorted {@link RealmResults} will be created and returned. The original collection stays unchanged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned. The original collection stays unchanged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a new sorted "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmResults", "label": "", "referencedClassName": "io.realm.RealmResults", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be created and returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a field name does not exist or has an invalid type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if a field name does not exist or has an invalid type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if a field name does not exist or has an invalid type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed, called on the wrong thread or the collection is\n an unmanaged collection.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldNames an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldNames an array of field names to sort by."}], "parameterName": "fieldNames", "parameterComment": "an array of field names to sort by. Only fields of type boolean, short, int, long, float,\n double, Date, and String are supported.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "sortOrders the directions to sort by.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the directions to sort by."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "sortOrders the directions to sort by."}], "parameterName": "sortOrders", "parameterComment": "the directions to sort by.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sorts a collection based on the provided fields and sort orders."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.sort", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "fieldNames", "typeName": "java.lang.String[]", "asString": "java.lang.String[] fieldNames", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.Sort[]", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.Sort", "typeName": "Sort", "qualifiedTypeName": "io.realm.Sort", "simpleTypeName": "Sort", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "sortOrders", "typeName": "io.realm.Sort[]", "asString": "io.realm.Sort[] sortOrders", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String[], io.realm.Sort[])", "flatSignature": "(String[], Sort[])", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmResults<E>", "typeName": "RealmResults", "qualifiedTypeName": "io.realm.RealmResults", "simpleTypeName": "RealmResults", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "{@inheritDoc}", "name": "deleteFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 577, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IndexOutOfBoundsException if {@code location < 0 || location >= size()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IndexOutOfBoundsException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "location < 0 || location >= size()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IndexOutOfBoundsException", "exceptionComment": "if {@code location < 0 || location >= size()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IndexOutOfBoundsException", "typeName": "IndexOutOfBoundsException", "qualifiedTypeName": "java.lang.IndexOutOfBoundsException", "simpleTypeName": "IndexOutOfBoundsException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "location the array index identifying the object to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the array index identifying the object to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "location the array index identifying the object to be removed."}], "parameterName": "location", "parameterComment": "the array index identifying the object to be removed.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm. This also removes it from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm. This also removes it from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the object at the given index from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.deleteFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(int)", "flatSignature": "(int)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the number of elements in this {@code List}.", "name": "size", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 594, "column": 16, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the number of elements in this {@code List}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the number of elements in this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "List"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the number of elements in this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "List"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the number of elements in this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the number of elements in this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the number of elements in this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "List", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the number of elements in this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the number of elements in this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the number of elements in this"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "List", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.size", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Returns a RealmQuery, which can be used to query for specific objects of this class.", "name": "where", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 611, "column": 26, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a RealmQuery object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a RealmQuery object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a RealmQuery object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query for specific objects of this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query for specific objects of this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query for specific objects of this class."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query for specific objects of this class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query for specific objects of this class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a RealmQuery, which can be used to query for specific objects of this class."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.where", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if Realm instance has been closed or parent object has been removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if Realm instance has been closed or parent object has been removed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if Realm instance has been closed or parent object has been removed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}}, {"commentText": "{@inheritDoc}", "name": "min", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 628, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "if no objects exist or they all have {@code null} as the value for the given field, {@code null} will be\n returned. Otherwise the minimum value is returned. When determining the minimum value, objects with {@code null}\n values are ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n returned. Otherwise the minimum value is returned. When determining the minimum value, objects with "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n values are ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the field is not a number type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is not a number type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the field is not a number type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the field is not a number type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field to look for a minimum on. Only number fields are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field to look for a minimum on. Only number fields are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field to look for a minimum on."}], "parameterName": "fieldName", "parameterComment": "the field to look for a minimum on. Only number fields are supported.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum value of a field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum value of a field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum value of a field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum value of a field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum value of a field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum value of a field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.min", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.Number", "typeName": "Number", "qualifiedTypeName": "java.lang.Number", "simpleTypeName": "Number", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "max", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 638, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "if no objects exist or they all have {@code null} as the value for the given field, {@code null} will be\n returned. Otherwise the maximum value is returned. When determining the maximum value, objects with {@code null}\n values are ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n returned. Otherwise the maximum value is returned. When determining the maximum value, objects with "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n values are ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the field is not a number type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is not a number type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the field is not a number type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the field is not a number type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field to look for a maximum on. Only number fields are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field to look for a maximum on. Only number fields are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field to look for a maximum on."}], "parameterName": "fieldName", "parameterComment": "the field to look for a maximum on. Only number fields are supported.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum value of a field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum value of a field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum value of a field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum value of a field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum value of a field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum value of a field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.max", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.Number", "typeName": "Number", "qualifiedTypeName": "java.lang.Number", "simpleTypeName": "Number", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "sum", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 647, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the sum. If no objects exist or they all have {@code null} as the value for the given field, {@code 0}\n will be returned. When computing the sum, objects with {@code null} values are ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the sum. If no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be returned. When computing the sum, objects with "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values are ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the sum."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the field is not a number type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is not a number type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the field is not a number type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the field is not a number type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field to sum. Only number fields are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field to sum. Only number fields are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field to sum."}], "parameterName": "fieldName", "parameterComment": "the field to sum. Only number fields are supported.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calculates the sum of a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calculates the sum of a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calculates the sum of a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calculates the sum of a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calculates the sum of a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calculates the sum of a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.sum", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.Number", "typeName": "Number", "qualifiedTypeName": "java.lang.Number", "simpleTypeName": "Number", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "average", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 656, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the average for the given field amongst objects in query results. This will be of type double for all\n types of number fields. If no objects exist or they all have {@code null} as the value for the given field,\n {@code 0} will be returned. When computing the average, objects with {@code null} values are ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the average for the given field amongst objects in query results. This will be of type double for all\n types of number fields. If no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given field,\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be returned. When computing the average, objects with "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values are ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the average for the given field amongst objects in query results."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the field is not a number type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the field is not a number type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the field is not a number type."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the field is not a number type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field to calculate average on. Only number fields are supported.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field to calculate average on. Only number fields are supported."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field to calculate average on."}], "parameterName": "fieldName", "parameterComment": "the field to calculate average on. Only number fields are supported.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the average of a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the average of a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the average of a given field."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the average of a given field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the average of a given field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the average of a given field."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.average", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "double", "typeName": "double", "qualifiedTypeName": "double", "simpleTypeName": "double", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "maxDate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 666, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "if no objects exist or they all have {@code null} as the value for the given date field, {@code null}\n will be returned. Otherwise the maximum date is returned. When determining the maximum date, objects with\n {@code null} values are ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given date field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be returned. Otherwise the maximum date is returned. When determining the maximum date, objects with\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values are ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given date field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if fieldName is not a Date field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if fieldName is not a Date field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if fieldName is not a Date field."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if fieldName is not a Date field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field to look for the maximum date. If fieldName is not of Date type, an exception is\n thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field to look for the maximum date. If fieldName is not of Date type, an exception is\n thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field to look for the maximum date."}], "parameterName": "fieldName", "parameterComment": "the field to look for the maximum date. If fieldName is not of Date type, an exception is\n thrown.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum date.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum date."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum date."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum date.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum date."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the maximum date."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.maxDate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.util.Date", "typeName": "Date", "qualifiedTypeName": "java.util.Date", "simpleTypeName": "Date", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "minDate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 676, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "if no objects exist or they all have {@code null} as the value for the given date field, {@code null}\n will be returned. Otherwise the minimum date is returned. When determining the minimum date, objects with\n {@code null} values are ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given date field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be returned. Otherwise the minimum date is returned. When determining the minimum date, objects with\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " values are ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no objects exist or they all have "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the value for the given date field, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be returned."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if fieldName is not a Date field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if fieldName is not a Date field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if fieldName is not a Date field."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if fieldName is not a Date field.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "fieldName the field to look for the minimum date. If fieldName is not of Date type, an exception is\n thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the field to look for the minimum date. If fieldName is not of Date type, an exception is\n thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "fieldName the field to look for the minimum date."}], "parameterName": "fieldName", "parameterComment": "the field to look for the minimum date. If fieldName is not of Date type, an exception is\n thrown.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum date.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum date."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum date."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum date.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum date."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Finds the minimum date."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.minDate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "fieldName", "typeName": "String", "asString": "String fieldName", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.util.Date", "typeName": "Date", "qualifiedTypeName": "java.util.Date", "simpleTypeName": "Date", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "deleteAllFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 685, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if objects was deleted, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if objects was deleted, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed or in an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed or in an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed or in an incorrect thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed or in an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm has been closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm has been closed or called from an incorrect thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm has been closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This deletes all objects in the collection from the underlying Realm as well as from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This deletes all objects in the collection from the underlying Realm as well as from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This deletes all objects in the collection from the underlying Realm as well as from the collection."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This deletes all objects in the collection from the underlying Realm as well as from the collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This deletes all objects in the collection from the underlying Realm as well as from the collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This deletes all objects in the collection from the underlying Realm as well as from the collection."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.deleteAllFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "isLoaded", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 704, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if data has been loaded and is available, {@code false} if data is still being loaded.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if data has been loaded and is available, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if data is still being loaded."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if data has been loaded and is available, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if data is still being loaded."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a collection has finished loading its data yet.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a collection has finished loading its data yet."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a collection has finished loading its data yet."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a collection has finished loading its data yet.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a collection has finished loading its data yet."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if a collection has finished loading its data yet."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.isLoaded", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "load", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 712, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the data could be successfully loaded, {@code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the data could be successfully loaded, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the data could be successfully loaded, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " otherwise."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Blocks the collection until all data are available.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Blocks the collection until all data are available."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Blocks the collection until all data are available."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Blocks the collection until all data are available.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Blocks the collection until all data are available."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Blocks the collection until all data are available."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.load", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns {@code true} if the list contains the specified element when attached to a Realm. This\n method will query the native Realm underlying storage engine to quickly find the specified element.\n <p>\n If the list is not attached to a Realm, the default {@link List#contains(Object)}\n implementation will occur.", "name": "contains", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 727, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the element whose presence in this list is to be tested.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element whose presence in this list is to be tested."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the element whose presence in this list is to be tested."}], "parameterName": "object", "parameterComment": "the element whose presence in this list is to be tested.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if this list contains the specified element otherwise {@code false}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this list contains the specified element otherwise "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if this list contains the specified element otherwise "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "NullPointerException if the object to look for is {@code null} and this {@code Collection} doesn't\n support {@code null} elements.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object to look for is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't\n support "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " elements."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "NullPointerException if the object to look for is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and this "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "Collection"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't\n support "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " elements."}], "exceptionName": "NullPointerException", "exceptionComment": "if the object to look for is {@code null} and this {@code Collection} doesn't\n support {@code null} elements.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the element whose presence in this list is to be tested.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element whose presence in this list is to be tested."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the element whose presence in this list is to be tested."}], "parameterName": "object", "parameterComment": "the element whose presence in this list is to be tested.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the list contains the specified element when attached to a Realm. This\n method will query the native Realm underlying storage engine to quickly find the specified element.\n <p>\n If the list is not attached to a Realm, the default ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the list contains the specified element when attached to a Realm. This\n method will query the native Realm underlying storage engine to quickly find the specified element.\n <p>\n If the list is not attached to a Realm, the default "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the list contains the specified element when attached to a Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "List#contains(Object)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#contains(Object)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "List#contains(Object)"}], "label": "", "referencedClassName": "java.util.List", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "referencedMemberName": "contains(Object)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n implementation will occur.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n implementation will occur."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "implementation will occur."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the list contains the specified element when attached to a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the list contains the specified element when attached to a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the list contains the specified element when attached to a Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.contains", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "object", "typeName": "Object", "asString": "Object object", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the element whose presence in this list is to be tested.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the element whose presence in this list is to be tested."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the element whose presence in this list is to be tested."}], "parameterName": "object", "parameterComment": "the element whose presence in this list is to be tested.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "{@inheritDoc}", "name": "iterator", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 750, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.iterator", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.Iterator<E>", "typeName": "Iterator", "qualifiedTypeName": "java.util.Iterator", "simpleTypeName": "Iterator", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": []}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "{@inheritDoc}", "name": "listIterator", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 763, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.listIterator", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.ListIterator<E>", "typeName": "ListIterator", "qualifiedTypeName": "java.util.ListIterator", "simpleTypeName": "ListIterator", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Iterator"]}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "{@inheritDoc}", "name": "listIterator", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 772, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "", "inlineTags": [], "firstSentenceTags": []}, {"_class": "Tag", "name": "@inheritDoc", "kind": "@inheritDoc", "text": "", "inlineTags": [], "firstSentenceTags": []}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.listIterator", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "location", "typeName": "int", "asString": "int location", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(int)", "flatSignature": "(int)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.ListIterator<E>", "typeName": "ListIterator", "qualifiedTypeName": "java.util.ListIterator", "simpleTypeName": "ListIterator", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "interfaceTypes": ["java.util.Iterator"]}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "{@inheritDoc}", "name": "createSnapshot", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 788, "column": 46, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the snapshot of this collection.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the snapshot of this collection."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the snapshot of this collection."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or the method is called from the wrong thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalStateException if the Realm is closed or the method is called from the wrong thread."}], "exceptionName": "java.lang.IllegalStateException", "exceptionComment": "if the Realm is closed or the method is called from the wrong thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the collection is unmanaged."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the collection is unmanaged.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a snapshot from this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedRealmCollection", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedRealmCollection"}], "label": "", "referencedClassName": "io.realm.OrderedRealmCollection", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedRealmCollection<E>", "typeName": "OrderedRealmCollection", "qualifiedTypeName": "io.realm.OrderedRealmCollection", "simpleTypeName": "OrderedRealmCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.createSnapshot", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionSnapshot<E>", "typeName": "OrderedRealmCollectionSnapshot", "qualifiedTypeName": "io.realm.OrderedRealmCollectionSnapshot", "simpleTypeName": "OrderedRealmCollectionSnapshot", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionImpl<E>", "typeName": "OrderedRealmCollectionImpl", "qualifiedTypeName": "io.realm.OrderedRealmCollectionImpl", "simpleTypeName": "OrderedRealmCollectionImpl", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}, "interfaceTypes": []}}, {"commentText": "Returns the {@link Realm} instance to which this collection belongs.\n <p>\n Calling {@link Realm#close()} on the returned instance is discouraged as it is the same as\n calling it on the original Realm instance which may cause the Realm to fully close invalidating the\n list.", "name": "getRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 822, "column": 18, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@link Realm} instance this collection belongs to or {@code null} if the collection is unmanaged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance this collection belongs to or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the collection is unmanaged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance this collection belongs to or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the collection is unmanaged."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm is an instance of {@link DynamicRealm} or the\n {@link Realm} was already closed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is an instance of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or the\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm is an instance of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or the\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm is an instance of {@link DynamicRealm} or the\n {@link Realm} was already closed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance to which this collection belongs.\n <p>\n Calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance to which this collection belongs.\n <p>\n Calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance to which this collection belongs."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#close()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#close()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#close()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "close()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the returned instance is discouraged as it is the same as\n calling it on the original Realm instance which may cause the Realm to fully close invalidating the\n list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " on the returned instance is discouraged as it is the same as\n calling it on the original Realm instance which may cause the Realm to fully close invalidating the\n list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "on the returned instance is discouraged as it is the same as\n calling it on the original Realm instance which may cause the Realm to fully close invalidating the\n list."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance to which this collection belongs.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance to which this collection belongs."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance to which this collection belongs."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.getRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm is an instance of {@link DynamicRealm} or the\n {@link Realm} was already closed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is an instance of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or the\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm is an instance of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm", "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or the\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " was already closed."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm is an instance of {@link DynamicRealm} or the\n {@link Realm} was already closed.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "", "name": "toString", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 834, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.toString", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"commentText": "Returns an Rx Flowable that monitors changes to this RealmList. It will emit the current RealmList when\n subscribed to. RealmList will continually be emitted as the RealmList is updated -\n {@code onComplete} will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See {@link #freeze()}. This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live RealmList. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n {@code\n list.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxResults -> doExpensiveWork(rxResults))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n }\n <p>\n If you would like the {@code asFlowable()} to stop emitting items you can instruct RxJava to\n only emit only the first item by using the {@code first()} operator:\n <p>\n <pre>\n {@code\n list.asFlowable()\n      .first()\n      .subscribe( ... ) // You only get the results once\n }\n </pre>\n <p>", "name": "asFlowable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 954, "column": 35, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "RxJava Observable that only calls {@code onNext}. It will never call {@code onComplete} or {@code OnError}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". It will never call "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OnError"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "label": ""}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Flowable that monitors changes to this RealmList. It will emit the current RealmList when\n subscribed to. RealmList will continually be emitted as the RealmList is updated -\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Flowable that monitors changes to this RealmList. It will emit the current RealmList when\n subscribed to. RealmList will continually be emitted as the RealmList is updated -\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Flowable that monitors changes to this RealmList."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will never be called."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#freeze()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "freeze()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live RealmList. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live RealmList. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "list.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxResults -> doExpensiveWork(rxResults))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxResults -> doExpensiveWork(rxResults))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxResults -> doExpensiveWork(rxResults))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n If you would like the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n If you would like the "}], "firstSentenceTags": []}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "asFlowable()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "asFlowable()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "asFlowable()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to stop emitting items you can instruct RxJava to\n only emit only the first item by using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to stop emitting items you can instruct RxJava to\n only emit only the first item by using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to stop emitting items you can instruct RxJava to\n only emit only the first item by using the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "first()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " operator:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " operator:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "operator:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n list.asFlowable()\n      .first()\n      .subscribe( ... ) // You only get the results once\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n list.asFlowable()\n      .first()\n      .subscribe( ... ) // You only get the results once\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list.asFlowable()\n      .first()\n      .subscribe( ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Flowable that monitors changes to this RealmList.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Flowable that monitors changes to this RealmList."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Flowable that monitors changes to this RealmList."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.asFlowable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [{"element": {"commentText": "", "name": "value", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": true, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": false, "position": {"line": 0, "column": 0, "file": "SuppressWarnings.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "AnnotationTypeElementDoc", "containingClass": {"_class": "ClassDoc", "asString": "java.lang.SuppressWarnings", "typeName": "SuppressWarnings", "qualifiedTypeName": "java.lang.SuppressWarnings", "simpleTypeName": "SuppressWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "java.lang"}, "qualifiedName": "java.lang.SuppressWarnings.value", "modifierSpecifier": 1025, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}}, "value": "\"unchecked\""}], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns an Rx Observable that monitors changes to this RealmList. It will emit the current RealmList when\n subscribed. For each update to the RealmList a pair consisting of the RealmList and the\n {@link OrderedCollectionChangeSet} will be sent. The changeset will be {@code null} the first\n time an RealmList is emitted.\n <p>\n RealmList will continually be emitted as the RealmList is updated - {@code onComplete} will never be called.\n <p>\n Items emitted from Realm Observables are frozen (See {@link #freeze()}. This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Observables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n {@code\n list.asChangesetObservable()\n   .observeOn(Schedulers.computation())\n   .map((rxList, changes) -> doExpensiveWork(rxList, changes))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n }", "name": "asChangesetObservable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 995, "column": 55, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "RxJava Observable that only calls {@code onNext}. It will never call {@code onComplete} or {@code OnError}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". It will never call "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OnError"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm wasn't opened on a Looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm wasn't opened on a Looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "label": ""}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#rxjava\">RxJava and Realm</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Observable that monitors changes to this RealmList. It will emit the current RealmList when\n subscribed. For each update to the RealmList a pair consisting of the RealmList and the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Observable that monitors changes to this RealmList. It will emit the current RealmList when\n subscribed. For each update to the RealmList a pair consisting of the RealmList and the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Observable that monitors changes to this RealmList."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "OrderedCollectionChangeSet", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedCollectionChangeSet"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "OrderedCollectionChangeSet"}], "label": "", "referencedClassName": "io.realm.OrderedCollectionChangeSet", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.OrderedCollectionChangeSet", "typeName": "OrderedCollectionChangeSet", "qualifiedTypeName": "io.realm.OrderedCollectionChangeSet", "simpleTypeName": "OrderedCollectionChangeSet", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be sent. The changeset will be ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be sent. The changeset will be "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be sent."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " the first\n time an RealmList is emitted.\n <p>\n RealmList will continually be emitted as the RealmList is updated - ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " the first\n time an RealmList is emitted.\n <p>\n RealmList will continually be emitted as the RealmList is updated - "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first\n time an RealmList is emitted."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Observables are frozen (See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Observables are frozen (See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will never be called."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#freeze()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "freeze()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Observables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Observables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "list.asChangesetObservable()\n   .observeOn(Schedulers.computation())\n   .map((rxList, changes) -> doExpensiveWork(rxList, changes))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list.asChangesetObservable()\n   .observeOn(Schedulers.computation())\n   .map((rxList, changes) -> doExpensiveWork(rxList, changes))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "list.asChangesetObservable()\n   .observeOn(Schedulers.computation())\n   .map((rxList, changes) -> doExpensiveWork(rxList, changes))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ..."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Observable that monitors changes to this RealmList.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Observable that monitors changes to this RealmList."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an Rx Observable that monitors changes to this RealmList."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.asChangesetObservable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the required RxJava framework is not on the classpath or the\n corresponding Realm instance doesn't support RxJava.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm wasn't opened on a Looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm wasn't opened on a Looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds a change listener to this {@link RealmList}.\n <p>\n Registering a change listener will not prevent the underlying RealmList from being garbage collected.\n If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a\n strong reference for as long as appropriate e.g. in a class variable.\n <p>\n <pre>\n {@code\n public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs, OrderedCollectionChangeSet changeSet) {\n               // React to change\n           }\n       });\n     }\n }\n }\n </pre>", "name": "addChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1048, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmList from being garbage collected.\n If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a\n strong reference for as long as appropriate e.g. in a class variable.\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmList from being garbage collected.\n If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a\n strong reference for as long as appropriate e.g. in a class variable.\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs, OrderedCollectionChangeSet changeSet) {\n               // React to change\n           }\n       });\n     }\n }\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs, OrderedCollectionChangeSet changeSet) {\n               // React to change\n           }\n       });\n     }\n }\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs, OrderedCollectionChangeSet changeSet) {\n               // React to change\n           }\n       });\n     }\n }"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.addChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>>", "typeName": "OrderedRealmCollectionChangeListener", "qualifiedTypeName": "io.realm.OrderedRealmCollectionChangeListener", "simpleTypeName": "OrderedRealmCollectionChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>>", "asString": "io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>>)", "flatSignature": "(OrderedRealmCollectionChangeListener<RealmList<E>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the specified change listener.", "name": "removeChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1061, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.removeChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>>", "typeName": "OrderedRealmCollectionChangeListener", "qualifiedTypeName": "io.realm.OrderedRealmCollectionChangeListener", "simpleTypeName": "OrderedRealmCollectionChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>>", "asString": "io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.OrderedRealmCollectionChangeListener<io.realm.RealmList<E>>)", "flatSignature": "(OrderedRealmCollectionChangeListener<RealmList<E>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds a change listener to this {@link RealmList}.\n <p>\n Registering a change listener will not prevent the underlying RealmList from being garbage collected.\n If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a\n strong reference for as long as appropriate e.g. in a class variable.\n <p>\n <pre>\n {@code\n public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs) {\n               // React to change\n           }\n       });\n     }\n }\n }\n </pre>", "name": "addChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1099, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmList from being garbage collected.\n If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a\n strong reference for as long as appropriate e.g. in a class variable.\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Registering a change listener will not prevent the underlying RealmList from being garbage collected.\n If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a\n strong reference for as long as appropriate e.g. in a class variable.\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs) {\n               // React to change\n           }\n       });\n     }\n }\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs) {\n               // React to change\n           }\n       });\n     }\n }\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "public class MyActivity extends Activity {\n\n     private RealmList<Dog> dogs; // Strong reference to keep listeners alive\n\n     \\@Override\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       dogs = realm.where(Person.class).findFirst().getDogs();\n       dogs.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {\n           \\@Override\n           public void onChange(RealmList<Dog> dogs) {\n               // React to change\n           }\n       });\n     }\n }"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmList"}], "label": "", "referencedClassName": "io.realm.RealmList", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.addChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.RealmList<E>>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.RealmList<E>>", "asString": "io.realm.RealmChangeListener<io.realm.RealmList<E>> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to add a listener from a non-Looper or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to add a listener from a non-Looper or\n {@link android.app.IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be notified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be notified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be notified."}], "parameterName": "listener", "parameterComment": "the change listener to be notified.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.RealmList<E>>)", "flatSignature": "(RealmChangeListener<RealmList<E>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the specified change listener.", "name": "removeChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1112, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.removeChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.RealmList<E>>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractList<E>", "typeName": "AbstractList", "qualifiedTypeName": "java.util.AbstractList", "simpleTypeName": "AbstractList", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ParameterizedType", "asString": "java.util.AbstractCollection<E>", "typeName": "AbstractCollection", "qualifiedTypeName": "java.util.AbstractCollection", "simpleTypeName": "AbstractCollection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.util.Collection"]}, "interfaceTypes": ["java.util.List"]}, "interfaceTypes": ["io.realm.OrderedRealmCollection"]}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.RealmList<E>>", "asString": "io.realm.RealmChangeListener<io.realm.RealmList<E>> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.RealmList<E>>)", "flatSignature": "(RealmChangeListener<RealmList<E>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes all user-defined change listeners.", "name": "removeAllChangeListeners", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1123, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList.removeAllChangeListeners", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}], "constructors": [{"commentText": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm.\n This effectively makes the RealmList function as a {@link java.util.ArrayList} and it is not possible to query\n the objects in this state.\n <p>\n Use {@link io.realm.Realm#copyToRealm(Iterable, ImportFlag...)} to properly persist its elements in Realm.", "name": "RealmList", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 93, "column": 12, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm.\n This effectively makes the RealmList function as a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm.\n This effectively makes the RealmList function as a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "java.util.ArrayList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.util.ArrayList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.util.ArrayList"}], "label": "", "referencedClassName": "java.util.ArrayList", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.ArrayList<E>", "typeName": "ArrayList", "qualifiedTypeName": "java.util.ArrayList", "simpleTypeName": "ArrayList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and it is not possible to query\n the objects in this state.\n <p>\n Use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and it is not possible to query\n the objects in this state.\n <p>\n Use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and it is not possible to query\n the objects in this state."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to properly persist its elements in Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to properly persist its elements in Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to properly persist its elements in Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode, where the elements are not controlled by a Realm."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": []}, {"commentText": "Creates a RealmList in unmanaged mode with an initial list of elements.\n A RealmList in unmanaged mode function as a {@link java.util.ArrayList} and it is not possible to query the\n objects in this state.\n <p>\n Use {@link io.realm.Realm#copyToRealm(Iterable, ImportFlag...)} to properly persist all unmanaged elements in Realm.", "name": "RealmList", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 108, "column": 12, "file": "./realm/realm-library/src/main/java/io/realm/RealmList.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects initial objects in the list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "initial objects in the list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects initial objects in the list."}], "parameterName": "objects", "parameterComment": "initial objects in the list.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode with an initial list of elements.\n A RealmList in unmanaged mode function as a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode with an initial list of elements.\n A RealmList in unmanaged mode function as a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode with an initial list of elements."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "java.util.ArrayList", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.util.ArrayList"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.util.ArrayList"}], "label": "", "referencedClassName": "java.util.ArrayList", "referencedClass": {"_class": "ClassDoc", "asString": "java.util.ArrayList<E>", "typeName": "ArrayList", "qualifiedTypeName": "java.util.ArrayList", "simpleTypeName": "ArrayList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and it is not possible to query the\n objects in this state.\n <p>\n Use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and it is not possible to query the\n objects in this state.\n <p>\n Use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and it is not possible to query the\n objects in this state."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to properly persist all unmanaged elements in Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to properly persist all unmanaged elements in Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to properly persist all unmanaged elements in Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode with an initial list of elements.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode with an initial list of elements."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a RealmList in unmanaged mode with an initial list of elements."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmList<E>", "typeName": "RealmList", "qualifiedTypeName": "io.realm.RealmList", "simpleTypeName": "RealmList", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmList", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "Type", "asString": "E[]", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "TypeVariable", "asString": "E", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [], "annotations": []}, "isClass": false, "isAnnotationType": false}, "name": "objects", "typeName": "E[]", "asString": "E[] objects", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects initial objects in the list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "initial objects in the list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects initial objects in the list."}], "parameterName": "objects", "parameterComment": "initial objects in the list.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(E...)", "flatSignature": "(E...)", "typeParameters": []}], "innerClasses": []}