{"commentText": "The Realm class is the storage and transactional manager of your object persistent store. It is in charge of creating\n instances of your RealmObjects. Objects within a Realm can be queried and read at any time. Creating, modifying, and\n deleting objects must be done while inside a transaction. See {@link #executeTransaction(Transaction)}\n <p>\n The transactions ensure that multiple instances (on multiple threads) can access the same objects in a consistent\n state with full ACID guarantees.\n <p>\n It is important to remember to call the {@link #close()} method when done with a Realm instance. Failing to do so can\n lead to {@link java.lang.OutOfMemoryError} as the native resources cannot be freed.\n <p>\n Realm instances cannot be used across different threads. This means that you have to open an instance on each thread\n you want to use Realm. Realm instances are cached automatically per thread using reference counting, so as long as\n the reference count doesn't reach zero, calling {@link #getInstance(RealmConfiguration)} will just return the cached\n Realm and should be considered a lightweight operation.\n <p>\n For the UI thread this means that opening and closing Realms should occur in either onCreate/onDestroy or\n onStart/onStop.\n <p>\n Realm instances coordinate their state across threads using the {@link android.os.Handler} mechanism. This also means\n that Realm instances on threads without a {@link android.os.Looper} cannot receive updates unless {@link #refresh()}\n is manually called.\n <p>\n A standard pattern for working with Realm in Android activities can be seen below:\n <p>\n <pre>\n public class RealmApplication extends Application {\n\n     \\@Override\n     public void onCreate() {\n         super.onCreate();\n\n         // The Realm file will be located in package's \"files\" directory.\n         RealmConfiguration realmConfig = new RealmConfiguration.Builder(this).build();\n         Realm.setDefaultConfiguration(realmConfig);\n     }\n }\n\n public class RealmActivity extends Activity {\n\n   private Realm realm;\n\n   \\@Override\n   protected void onCreate(Bundle savedInstanceState) {\n     super.onCreate(savedInstanceState);\n     setContentView(R.layout.layout_main);\n     realm = Realm.getDefaultInstance();\n   }\n\n   \\@Override\n   protected void onDestroy() {\n     super.onDestroy();\n     realm.close();\n   }\n }\n </pre>\n <p>\n Realm supports String and byte fields containing up to 16 MB.\n <p>", "name": "Realm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 136, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"http://en.wikipedia.org/wiki/ACID\">ACID</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"http://en.wikipedia.org/wiki/ACID\">ACID</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"http://en.wikipedia.org/wiki/ACID\">ACID</a>"}], "label": ""}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples\">Examples using Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples\">Examples using Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples\">Examples using Realm</a>"}], "label": ""}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"http://en.wikipedia.org/wiki/ACID\">ACID</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"http://en.wikipedia.org/wiki/ACID\">ACID</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"http://en.wikipedia.org/wiki/ACID\">ACID</a>"}], "label": ""}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples\">Examples using Realm</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples\">Examples using Realm</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://github.com/realm/realm-java/tree/master/examples\">Examples using Realm</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The Realm class is the storage and transactional manager of your object persistent store. It is in charge of creating\n instances of your RealmObjects. Objects within a Realm can be queried and read at any time. Creating, modifying, and\n deleting objects must be done while inside a transaction. See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The Realm class is the storage and transactional manager of your object persistent store. It is in charge of creating\n instances of your RealmObjects. Objects within a Realm can be queried and read at any time. Creating, modifying, and\n deleting objects must be done while inside a transaction. See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The Realm class is the storage and transactional manager of your object persistent store."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransaction(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n The transactions ensure that multiple instances (on multiple threads) can access the same objects in a consistent\n state with full ACID guarantees.\n <p>\n It is important to remember to call the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n The transactions ensure that multiple instances (on multiple threads) can access the same objects in a consistent\n state with full ACID guarantees.\n <p>\n It is important to remember to call the "}], "firstSentenceTags": []}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#close()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "close()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " method when done with a Realm instance. Failing to do so can\n lead to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " method when done with a Realm instance. Failing to do so can\n lead to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "method when done with a Realm instance."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "java.lang.OutOfMemoryError", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.OutOfMemoryError"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.OutOfMemoryError"}], "label": "", "referencedClassName": "java.lang.OutOfMemoryError", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.OutOfMemoryError", "typeName": "OutOfMemoryError", "qualifiedTypeName": "java.lang.OutOfMemoryError", "simpleTypeName": "OutOfMemoryError", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the native resources cannot be freed.\n <p>\n Realm instances cannot be used across different threads. This means that you have to open an instance on each thread\n you want to use Realm. Realm instances are cached automatically per thread using reference counting, so as long as\n the reference count doesn't reach zero, calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the native resources cannot be freed.\n <p>\n Realm instances cannot be used across different threads. This means that you have to open an instance on each thread\n you want to use Realm. Realm instances are cached automatically per thread using reference counting, so as long as\n the reference count doesn't reach zero, calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "as the native resources cannot be freed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getInstance(RealmConfiguration)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getInstance(RealmConfiguration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getInstance(RealmConfiguration)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getInstance(RealmConfiguration)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will just return the cached\n Realm and should be considered a lightweight operation.\n <p>\n For the UI thread this means that opening and closing Realms should occur in either onCreate/onDestroy or\n onStart/onStop.\n <p>\n Realm instances coordinate their state across threads using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will just return the cached\n Realm and should be considered a lightweight operation.\n <p>\n For the UI thread this means that opening and closing Realms should occur in either onCreate/onDestroy or\n onStart/onStop.\n <p>\n Realm instances coordinate their state across threads using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will just return the cached\n Realm and should be considered a lightweight operation."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.os.Handler", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.os.Handler"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.os.Handler"}], "label": "", "referencedClassName": "android.os.Handler", "referencedClass": {"_class": "ClassDoc", "asString": "android.os.Handler", "typeName": "Handler", "qualifiedTypeName": "android.os.Handler", "simpleTypeName": "Handler", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " mechanism. This also means\n that Realm instances on threads without a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " mechanism. This also means\n that Realm instances on threads without a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mechanism."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.os.Looper", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.os.Looper"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.os.Looper"}], "label": "", "referencedClassName": "android.os.Looper", "referencedClass": {"_class": "ClassDoc", "asString": "android.os.Looper", "typeName": "Looper", "qualifiedTypeName": "android.os.Looper", "simpleTypeName": "Looper", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " cannot receive updates unless ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " cannot receive updates unless "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "cannot receive updates unless"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#refresh()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refresh()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refresh()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "refresh()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n is manually called.\n <p>\n A standard pattern for working with Realm in Android activities can be seen below:\n <p>\n <pre>\n public class RealmApplication extends Application {\n\n     \\@Override\n     public void onCreate() {\n         super.onCreate();\n\n         // The Realm file will be located in package's \"files\" directory.\n         RealmConfiguration realmConfig = new RealmConfiguration.Builder(this).build();\n         Realm.setDefaultConfiguration(realmConfig);\n     }\n }\n\n public class RealmActivity extends Activity {\n\n   private Realm realm;\n\n   \\@Override\n   protected void onCreate(Bundle savedInstanceState) {\n     super.onCreate(savedInstanceState);\n     setContentView(R.layout.layout_main);\n     realm = Realm.getDefaultInstance();\n   }\n\n   \\@Override\n   protected void onDestroy() {\n     super.onDestroy();\n     realm.close();\n   }\n }\n </pre>\n <p>\n Realm supports String and byte fields containing up to 16 MB.\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n is manually called.\n <p>\n A standard pattern for working with Realm in Android activities can be seen below:\n <p>\n <pre>\n public class RealmApplication extends Application {\n\n     \\@Override\n     public void onCreate() {\n         super.onCreate();\n\n         // The Realm file will be located in package's \"files\" directory.\n         RealmConfiguration realmConfig = new RealmConfiguration.Builder(this).build();\n         Realm.setDefaultConfiguration(realmConfig);\n     }\n }\n\n public class RealmActivity extends Activity {\n\n   private Realm realm;\n\n   \\@Override\n   protected void onCreate(Bundle savedInstanceState) {\n     super.onCreate(savedInstanceState);\n     setContentView(R.layout.layout_main);\n     realm = Realm.getDefaultInstance();\n   }\n\n   \\@Override\n   protected void onDestroy() {\n     super.onDestroy();\n     realm.close();\n   }\n }\n </pre>\n <p>\n Realm supports String and byte fields containing up to 16 MB.\n <p>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is manually called."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The Realm class is the storage and transactional manager of your object persistent store.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The Realm class is the storage and transactional manager of your object persistent store."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The Realm class is the storage and transactional manager of your object persistent store."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"io.realm.BaseRealm": ["setAutoRefresh", "isAutoRefresh", "refresh", "isInTransaction", "addListener", "removeListener", "asFlowable", "removeAllListeners", "writeCopyTo", "writeEncryptedCopyTo", "waitForChange", "stopWaitForChange", "beginTransaction", "commitTransaction", "cancelTransaction", "freeze", "isFrozen", "getNumberOfActiveVersions", "checkIfValid", "checkAllowQueriesOnUiThread", "checkAllowWritesOnUiThread", "checkIfInTransaction", "checkIfValidAndInTransaction", "getPath", "getConfiguration", "getVersion", "close", "isClosed", "isEmpty", "getSchema", "deleteAll", "migrateRealm", "finalize"], "java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [{"commentText": "", "name": "DEFAULT_REALM_NAME", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 140, "column": 32, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.DEFAULT_REALM_NAME", "modifierSpecifier": 25, "modifiers": "public static final", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": true, "isSynthetic": false, "type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": [], "constantValue": "default.realm", "constantValueExpression": "\"default.realm\""}, {"commentText": "The required length for encryption keys used to encrypt Realm data.", "name": "ENCRYPTION_KEY_LENGTH", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 145, "column": 29, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The required length for encryption keys used to encrypt Realm data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The required length for encryption keys used to encrypt Realm data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The required length for encryption keys used to encrypt Realm data."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The required length for encryption keys used to encrypt Realm data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The required length for encryption keys used to encrypt Realm data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The required length for encryption keys used to encrypt Realm data."}]}], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.ENCRYPTION_KEY_LENGTH", "modifierSpecifier": 25, "modifiers": "public static final", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": true, "isSynthetic": false, "type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": [], "constantValue": "64", "constantValueExpression": "64"}], "enumConstants": [], "methods": [{"commentText": "{@inheritDoc}", "name": "asFlowable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 195, "column": 28, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "RxJava Observable that only calls {@code onNext}. It will never call {@code onComplete} or {@code OnError}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". It will never call "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "OnError"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxJava Observable that only calls "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onNext"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the required RxJava framework is not on the classpath."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException if the required RxJava framework is not on the classpath."}], "exceptionName": "UnsupportedOperationException", "exceptionComment": "if the required RxJava framework is not on the classpath.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm wasn't opened on a Looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm wasn't opened on a Looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm wasn't opened on a Looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm. It will emit the current state\n when subscribed to. Items will continually be emitted as the Realm is updated -\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm. It will emit the current state\n when subscribed to. Items will continually be emitted as the Realm is updated -\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "onComplete", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onComplete"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will never be called.\n <p>\n Items emitted from Realm Flowables are frozen (See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will never be called."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#freeze()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#freeze()"}], "label": "", "referencedClassName": "io.realm.BaseRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}, "referencedMemberName": "freeze()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This means that they\n are immutable and can be read on any thread.\n <p>\n Realm Flowables always emit items from the thread holding the live Realm. This means that if\n you need to do further processing, it is recommend to observe the values on a computation\n scheduler:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "realm.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxRealm -> doExpensiveWork(rxRealm))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realm.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxRealm -> doExpensiveWork(rxRealm))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ... );\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realm.asFlowable()\n   .observeOn(Schedulers.computation())\n   .map(rxRealm -> doExpensiveWork(rxRealm))\n   .observeOn(AndroidSchedulers.mainThread())\n   .subscribe( ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n If you would like the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>\n If you would like the "}], "firstSentenceTags": []}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "asFlowable()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "asFlowable()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "asFlowable()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to stop emitting items, you can instruct RxJava to\n only emit only the first item by using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to stop emitting items, you can instruct RxJava to\n only emit only the first item by using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to stop emitting items, you can instruct RxJava to\n only emit only the first item by using the"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "first()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "first()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " operator:\n <p>\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " operator:\n <p>\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "operator:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n realm.asFlowable().first().subscribe( ... ); // You only get the results once\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n realm.asFlowable().first().subscribe( ... ); // You only get the results once\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realm.asFlowable().first().subscribe( ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns an RxJava Flowable that monitors changes to this Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.asFlowable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "<any>", "typeName": "<any>", "qualifiedTypeName": "<any>", "simpleTypeName": "<any>", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "{@inheritDoc}", "name": "isEmpty", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 203, "column": 20, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if empty, @{code false} otherwise.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if empty, @{code false} otherwise."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if empty, @{code false} otherwise."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "contains any objects."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if this"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " contains any objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "contains any objects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.isEmpty", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "Returns the schema for this Realm. The schema is immutable.\n Any attempt to modify it will result in an {@link UnsupportedOperationException}.\n <p>\n The schema can only be modified using {@link DynamicRealm#getSchema()} or through an migration.", "name": "getSchema", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 222, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The {@link RealmSchema} for this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmSchema", "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmSchema", "label": "", "referencedClassName": "io.realm.RealmSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for this Realm."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the schema for this Realm. The schema is immutable.\n Any attempt to modify it will result in an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the schema for this Realm. The schema is immutable.\n Any attempt to modify it will result in an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the schema for this Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "UnsupportedOperationException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UnsupportedOperationException"}], "label": "", "referencedClassName": "java.lang.UnsupportedOperationException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.UnsupportedOperationException", "typeName": "UnsupportedOperationException", "qualifiedTypeName": "java.lang.UnsupportedOperationException", "simpleTypeName": "UnsupportedOperationException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n The schema can only be modified using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n The schema can only be modified using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealm#getSchema()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm#getSchema()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DynamicRealm#getSchema()"}], "label": "", "referencedClassName": "io.realm.DynamicRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealm", "typeName": "DynamicRealm", "qualifiedTypeName": "io.realm.DynamicRealm", "simpleTypeName": "DynamicRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getSchema()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or through an migration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or through an migration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or through an migration."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the schema for this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the schema for this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the schema for this Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getSchema", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmSchema", "typeName": "RealmSchema", "qualifiedTypeName": "io.realm.RealmSchema", "simpleTypeName": "RealmSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "Initializes the Realm library and creates a default configuration that is ready to use. It is required to call\n this method before interacting with any other of the Realm API's.\n <p>\n A good place is in an {@link android.app.Application} subclass:\n <pre>\n {@code\n public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this);\n   }\n }\n }\n </pre>\n <p>\n Remember to register it in the {@code AndroidManifest.xml} file:\n <pre>\n {@code\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ...\n </application>\n </manifest>\n }\n </pre>", "name": "init", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 260, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "context the Application Context.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Application Context."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context the Application Context."}], "parameterName": "context", "parameterComment": "the Application Context.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a {@code null} context is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a {@code null} context is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if {@link Context#getFilesDir()} could not be found.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "exceptionName": "IllegalStateException", "exceptionComment": "if {@link Context#getFilesDir()} could not be found.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "context the Application Context.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Application Context."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context the Application Context."}], "parameterName": "context", "parameterComment": "the Application Context.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use. It is required to call\n this method before interacting with any other of the Realm API's.\n <p>\n A good place is in an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use. It is required to call\n this method before interacting with any other of the Realm API's.\n <p>\n A good place is in an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.Application", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.app.Application"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.app.Application"}], "label": "", "referencedClassName": "android.app.Application", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.Application", "typeName": "Application", "qualifiedTypeName": "android.app.Application", "simpleTypeName": "Application", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " subclass:\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " subclass:\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "subclass:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this);\n   }\n }\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this);\n   }\n }\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this);\n   }\n }"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Remember to register it in the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Remember to register it in the "}], "firstSentenceTags": []}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "AndroidManifest.xml", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AndroidManifest.xml"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AndroidManifest.xml"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " file:\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " file:\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "file:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ...\n </application>\n </manifest>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ...\n </application>\n </manifest>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.init", "modifierSpecifier": 41, "modifiers": "public static synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "context", "typeName": "Context", "asString": "Context context", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a {@code null} context is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a {@code null} context is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if {@link Context#getFilesDir()} could not be found.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "exceptionName": "IllegalStateException", "exceptionComment": "if {@link Context#getFilesDir()} could not be found.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "context the Application Context.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Application Context."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context the Application Context."}], "parameterName": "context", "parameterComment": "the Application Context.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(android.content.Context)", "flatSignature": "(Context)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Initializes the Realm library and creates a default configuration that is ready to use. It is required to call\n this method before interacting with any other of the Realm API's.\n <p>\n A good place is in an {@link android.app.Application} subclass:\n <pre>\n {@code\n public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this, \"MyApp/\" + BuildConfig.VERSION_NAME);\n   }\n }\n }\n </pre>\n <p>\n Remember to register it in the {@code AndroidManifest.xml} file:\n <pre>\n {@code\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ...\n </application>\n </manifest>\n }\n </pre>", "name": "init", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 303, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "context the Application Context.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Application Context."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context the Application Context."}], "parameterName": "context", "parameterComment": "the Application Context.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "userAgent optional user defined string that will be sent to the Realm Object Server\n as part of a {@code User-Agent} header when a session is established. This setting will not be\n used by non-synchronized Realms.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "optional user defined string that will be sent to the Realm Object Server\n as part of a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "User-Agent"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " header when a session is established. This setting will not be\n used by non-synchronized Realms."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "userAgent optional user defined string that will be sent to the Realm Object Server\n as part of a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "User-Agent"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " header when a session is established."}], "parameterName": "userAgent", "parameterComment": "optional user defined string that will be sent to the Realm Object Server\n as part of a {@code User-Agent} header when a session is established. This setting will not be\n used by non-synchronized Realms.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a {@code null} context or userAgent is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context or userAgent is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context or userAgent is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a {@code null} context or userAgent is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if {@link Context#getFilesDir()} could not be found.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "exceptionName": "IllegalStateException", "exceptionComment": "if {@link Context#getFilesDir()} could not be found.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "context the Application Context.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Application Context."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context the Application Context."}], "parameterName": "context", "parameterComment": "the Application Context.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "userAgent optional user defined string that will be sent to the Realm Object Server\n as part of a {@code User-Agent} header when a session is established. This setting will not be\n used by non-synchronized Realms.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "optional user defined string that will be sent to the Realm Object Server\n as part of a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "User-Agent"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " header when a session is established. This setting will not be\n used by non-synchronized Realms."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "userAgent optional user defined string that will be sent to the Realm Object Server\n as part of a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "User-Agent"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " header when a session is established."}], "parameterName": "userAgent", "parameterComment": "optional user defined string that will be sent to the Realm Object Server\n as part of a {@code User-Agent} header when a session is established. This setting will not be\n used by non-synchronized Realms.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use. It is required to call\n this method before interacting with any other of the Realm API's.\n <p>\n A good place is in an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use. It is required to call\n this method before interacting with any other of the Realm API's.\n <p>\n A good place is in an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "android.app.Application", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.app.Application"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "android.app.Application"}], "label": "", "referencedClassName": "android.app.Application", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.Application", "typeName": "Application", "qualifiedTypeName": "android.app.Application", "simpleTypeName": "Application", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " subclass:\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " subclass:\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "subclass:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this, \"MyApp/\" + BuildConfig.VERSION_NAME);\n   }\n }\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this, \"MyApp/\" + BuildConfig.VERSION_NAME);\n   }\n }\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "public class MyApplication extends Application {\n   \\@Override\n   public void onCreate() {\n     super.onCreate();\n     Realm.init(this, \"MyApp/\" + BuildConfig.VERSION_NAME);\n   }\n }"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Remember to register it in the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Remember to register it in the "}], "firstSentenceTags": []}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "AndroidManifest.xml", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AndroidManifest.xml"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AndroidManifest.xml"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " file:\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " file:\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "file:"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ...\n </application>\n </manifest>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ...\n </application>\n </manifest>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"io.realm.example\">\n <application android:name=\".MyApplication\">\n   // ..."}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Initializes the Realm library and creates a default configuration that is ready to use."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.init", "modifierSpecifier": 41, "modifiers": "public static synchronized", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.internal.annotations.ObjectServer", "typeName": "ObjectServer", "qualifiedTypeName": "io.realm.internal.annotations.ObjectServer", "simpleTypeName": "ObjectServer", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "context", "typeName": "Context", "asString": "Context context", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "userAgent", "typeName": "String", "asString": "String userAgent", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a {@code null} context or userAgent is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context or userAgent is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " context or userAgent is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a {@code null} context or userAgent is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if {@link Context#getFilesDir()} could not be found.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Context#getFilesDir()", "label": "", "referencedClassName": "android.content.Context", "referencedClass": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "getFilesDir()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " could not be found."}], "exceptionName": "IllegalStateException", "exceptionComment": "if {@link Context#getFilesDir()} could not be found.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "context the Application Context.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Application Context."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context the Application Context."}], "parameterName": "context", "parameterComment": "the Application Context.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "userAgent optional user defined string that will be sent to the Realm Object Server\n as part of a {@code User-Agent} header when a session is established. This setting will not be\n used by non-synchronized Realms.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "optional user defined string that will be sent to the Realm Object Server\n as part of a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "User-Agent"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " header when a session is established. This setting will not be\n used by non-synchronized Realms."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "userAgent optional user defined string that will be sent to the Realm Object Server\n as part of a "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "User-Agent"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " header when a session is established."}], "parameterName": "userAgent", "parameterComment": "optional user defined string that will be sent to the Realm Object Server\n as part of a {@code User-Agent} header when a session is established. This setting will not be\n used by non-synchronized Realms.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(android.content.Context, java.lang.String)", "flatSignature": "(Context, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Realm static constructor that returns the Realm instance defined by the {@link io.realm.RealmConfiguration} set\n by {@link #setDefaultConfiguration(RealmConfiguration)}", "name": "getDefaultInstance", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 394, "column": 25, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "an instance of the Realm class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an instance of the Realm class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an instance of the Realm class."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.NullPointerException if no default configuration has been defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no default configuration has been defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.NullPointerException if no default configuration has been defined."}], "exceptionName": "java.lang.NullPointerException", "exceptionComment": "if no default configuration has been defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmMigrationNeededException if no migration has been provided by the default configuration and the", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no migration has been provided by the default configuration and the"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigrationNeededException if no migration has been provided by the default configuration and the"}], "exceptionName": "RealmMigrationNeededException", "exceptionComment": "if no migration has been provided by the default configuration and the", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmFileException if an error happened when accessing the underlying Realm file.\n was set and the thread opening the Realm was interrupted while the download was in progress.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error happened when accessing the underlying Realm file.\n was set and the thread opening the Realm was interrupted while the download was in progress."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFileException if an error happened when accessing the underlying Realm file."}], "exceptionName": "RealmFileException", "exceptionComment": "if an error happened when accessing the underlying Realm file.\n was set and the thread opening the Realm was interrupted while the download was in progress.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmFileException", "typeName": "RealmFileException", "qualifiedTypeName": "io.realm.exceptions.RealmFileException", "simpleTypeName": "RealmFileException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " set\n by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " set\n by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "set\n by"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#setDefaultConfiguration(RealmConfiguration)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setDefaultConfiguration(RealmConfiguration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setDefaultConfiguration(RealmConfiguration)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "setDefaultConfiguration(RealmConfiguration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " set\n by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " set\n by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "set\n by"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#setDefaultConfiguration(RealmConfiguration)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setDefaultConfiguration(RealmConfiguration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setDefaultConfiguration(RealmConfiguration)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "setDefaultConfiguration(RealmConfiguration)"}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getDefaultInstance", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.NullPointerException if no default configuration has been defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no default configuration has been defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.NullPointerException if no default configuration has been defined."}], "exceptionName": "java.lang.NullPointerException", "exceptionComment": "if no default configuration has been defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.NullPointerException", "typeName": "NullPointerException", "qualifiedTypeName": "java.lang.NullPointerException", "simpleTypeName": "NullPointerException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmMigrationNeededException if no migration has been provided by the default configuration and the", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no migration has been provided by the default configuration and the"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigrationNeededException if no migration has been provided by the default configuration and the"}], "exceptionName": "RealmMigrationNeededException", "exceptionComment": "if no migration has been provided by the default configuration and the", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmFileException if an error happened when accessing the underlying Realm file.\n was set and the thread opening the Realm was interrupted while the download was in progress.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error happened when accessing the underlying Realm file.\n was set and the thread opening the Realm was interrupted while the download was in progress."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFileException if an error happened when accessing the underlying Realm file."}], "exceptionName": "RealmFileException", "exceptionComment": "if an error happened when accessing the underlying Realm file.\n was set and the thread opening the Realm was interrupted while the download was in progress.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmFileException", "typeName": "RealmFileException", "qualifiedTypeName": "io.realm.exceptions.RealmFileException", "simpleTypeName": "RealmFileException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Realm static constructor that returns the Realm instance defined by provided {@link io.realm.RealmConfiguration}", "name": "getInstance", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 419, "column": 25, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration} used to open the Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm"}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration} used to open the Realm", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an instance of the Realm class", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an instance of the Realm class"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an instance of the Realm class"}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmMigrationNeededException if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigrationNeededException if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required."}], "exceptionName": "RealmMigrationNeededException", "exceptionComment": "if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmFileException if an error happened when accessing the underlying Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error happened when accessing the underlying Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFileException if an error happened when accessing the underlying Realm file."}], "exceptionName": "RealmFileException", "exceptionComment": "if an error happened when accessing the underlying Realm file.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmFileException", "typeName": "RealmFileException", "qualifiedTypeName": "io.realm.exceptions.RealmFileException", "simpleTypeName": "RealmFileException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmConfiguration for details on how to configure a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "label": "for details on how to configure a Realm.", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmConfiguration for details on how to configure a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "label": "for details on how to configure a Realm.", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by provided ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by provided "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by provided"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by provided ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by provided "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm static constructor that returns the Realm instance defined by provided"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getInstance", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmMigrationNeededException if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigrationNeededException if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required."}], "exceptionName": "RealmMigrationNeededException", "exceptionComment": "if no migration has been provided by the configuration and the RealmObject\n classes or version has has changed so a migration is required.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmFileException if an error happened when accessing the underlying Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error happened when accessing the underlying Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFileException if an error happened when accessing the underlying Realm file."}], "exceptionName": "RealmFileException", "exceptionComment": "if an error happened when accessing the underlying Realm file.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmFileException", "typeName": "RealmFileException", "qualifiedTypeName": "io.realm.exceptions.RealmFileException", "simpleTypeName": "RealmFileException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration} used to open the Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm"}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration} used to open the Realm", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "The creation of the first Realm instance per {@link RealmConfiguration} in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data). This method places the initialization work in a background thread and deliver the Realm instance\n to the caller thread asynchronously after the initialization is finished.", "name": "getInstanceAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 440, "column": 34, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration} used to open the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration} used to open the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback invoked to return the results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "invoked to return the results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked to return the results."}], "parameterName": "callback", "parameterComment": "invoked to return the results.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.Realm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.Callback", "typeName": "Realm.Transaction.Callback", "qualifiedTypeName": "io.realm.Realm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.Realm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.Callback", "typeName": "Realm.Transaction.Callback", "qualifiedTypeName": "io.realm.Realm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if it is called from a non-Looper or {@link IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if it is called from a non-Looper or {@link IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Callback for more details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "label": "for more details.", "referencedClassName": "io.realm.Realm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.Callback", "typeName": "Realm.Transaction.Callback", "qualifiedTypeName": "io.realm.Realm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Callback for more details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Callback for more details."}], "label": "for more details.", "referencedClassName": "io.realm.Realm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.Callback", "typeName": "Realm.Transaction.Callback", "qualifiedTypeName": "io.realm.Realm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data). This method places the initialization work in a background thread and deliver the Realm instance\n to the caller thread asynchronously after the initialization is finished.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data). This method places the initialization work in a background thread and deliver the Realm instance\n to the caller thread asynchronously after the initialization is finished."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data)."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The creation of the first Realm instance per"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in a process can take some time as all\n initialization code need to run at that point (setting up the Realm, validating schemas and creating initial\n data)."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getInstanceAsync", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Callback", "typeName": "Realm.Callback", "qualifiedTypeName": "io.realm.Realm.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "callback", "typeName": "Realm.Callback", "asString": "Realm.Callback callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.Realm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.Callback", "typeName": "Realm.Transaction.Callback", "qualifiedTypeName": "io.realm.Realm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Callback", "label": "", "referencedClassName": "io.realm.Realm.Transaction.Callback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.Callback", "typeName": "Realm.Transaction.Callback", "qualifiedTypeName": "io.realm.Realm.Transaction.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} or a null {@link Callback} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if it is called from a non-Looper or {@link IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if it is called from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if it is called from a non-Looper or {@link IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration} used to open the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to open the Realm."}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration} used to open the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback invoked to return the results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "invoked to return the results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked to return the results."}], "parameterName": "callback", "parameterComment": "invoked to return the results.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration, io.realm.Realm.Callback)", "flatSignature": "(RealmConfiguration, Realm.Callback)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the {@link io.realm.RealmConfiguration} used when calling {@link #getDefaultInstance()}.", "name": "setDefaultConfiguration", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 456, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} to use as the default configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to use as the default configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to use as the default configuration."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} to use as the default configuration.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmConfiguration for details on how to configure a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "label": "for details on how to configure a Realm.", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} to use as the default configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to use as the default configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to use as the default configuration."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} to use as the default configuration.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmConfiguration for details on how to configure a Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration for details on how to configure a Realm."}], "label": "for details on how to configure a Realm.", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used when calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used when calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used when calling"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used when calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used when calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used when calling"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.setDefaultConfiguration", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if a null {@link RealmConfiguration} is provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if a null "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is provided."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if a null {@link RealmConfiguration} is provided.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} to use as the default configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to use as the default configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to use as the default configuration."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} to use as the default configuration.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the default configuration for {@link #getDefaultInstance()}.", "name": "getDefaultConfiguration", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 472, "column": 38, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "default configuration object or {@code null} if no default configuration is specified.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "default configuration object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no default configuration is specified."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "default configuration object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no default configuration is specified."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default configuration for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default configuration for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default configuration for"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default configuration for ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default configuration for "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default configuration for"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getDefaultConfiguration", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Removes the current default configuration (if any). Any further calls to {@link #getDefaultInstance()} will\n fail until a new default configuration has been set using {@link #setDefaultConfiguration(RealmConfiguration)}.", "name": "removeDefaultConfiguration", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 482, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the current default configuration (if any). Any further calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the current default configuration (if any). Any further calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the current default configuration (if any)."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getDefaultInstance()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getDefaultInstance()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultInstance()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will\n fail until a new default configuration has been set using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will\n fail until a new default configuration has been set using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will\n fail until a new default configuration has been set using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#setDefaultConfiguration(RealmConfiguration)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setDefaultConfiguration(RealmConfiguration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#setDefaultConfiguration(RealmConfiguration)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "setDefaultConfiguration(RealmConfiguration)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the current default configuration (if any).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the current default configuration (if any)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the current default configuration (if any)."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.removeDefaultConfiguration", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n <p>\n JSON properties with unknown properties will be ignored. If a {@link RealmObject} field is not present in the\n JSON object the {@link RealmObject} field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "name": "createAllFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 521, "column": 40, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects to create."}], "parameterName": "clazz", "parameterComment": "type of Realm objects to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json an array where each JSONObject must map to the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an array where each JSONObject must map to the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json an array where each JSONObject must map to the specified class."}], "parameterName": "json", "parameterComment": "an array where each JSONObject must map to the specified class.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects to create."}], "parameterName": "clazz", "parameterComment": "type of Realm objects to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json an array where each JSONObject must map to the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an array where each JSONObject must map to the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json an array where each JSONObject must map to the specified class."}], "parameterName": "json", "parameterComment": "an array where each JSONObject must map to the specified class.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n <p>\n JSON properties with unknown properties will be ignored. If a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n <p>\n JSON properties with unknown properties will be ignored. If a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the\n JSON object the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the\n JSON object the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field is not present in the\n JSON object the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field will be set to the default value for that type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createAllFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "org.json.JSONArray", "typeName": "JSONArray", "qualifiedTypeName": "org.json.JSONArray", "simpleTypeName": "JSONArray", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "JSONArray", "asString": "JSONArray json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects to create."}], "parameterName": "clazz", "parameterComment": "type of Realm objects to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json an array where each JSONObject must map to the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an array where each JSONObject must map to the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json an array where each JSONObject must map to the specified class."}], "parameterName": "json", "parameterComment": "an array where each JSONObject must map to the specified class.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, org.json.JSONArray)", "flatSignature": "(Class<E>, JSONArray)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a {@link RealmObject} and a field is not found in the JSON object, that field will not be updated. If\n a new {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n\n <p>\n This method currently does not support value list field.", "name": "createOrUpdateAllFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 555, "column": 40, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json array with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "array with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json array with object data."}], "parameterName": "json", "parameterComment": "array with object data.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to map JSON.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to map JSON."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to map JSON."}], "exceptionName": "RealmException", "exceptionComment": "if unable to map JSON.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createAllFromJson(Class, org.json.JSONArray)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, org.json.JSONArray)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, org.json.JSONArray)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createAllFromJson(Class, org.json.JSONArray)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json array with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "array with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json array with object data."}], "parameterName": "json", "parameterComment": "array with object data.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createAllFromJson(Class, org.json.JSONArray)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, org.json.JSONArray)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, org.json.JSONArray)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createAllFromJson(Class, org.json.JSONArray)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated. If\n a new ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated. If\n a new "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and a field is not found in the JSON object, that field will not be updated."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createOrUpdateAllFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "org.json.JSONArray", "typeName": "JSONArray", "qualifiedTypeName": "org.json.JSONArray", "simpleTypeName": "JSONArray", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "JSONArray", "asString": "JSONArray json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to map JSON.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to map JSON."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to map JSON."}], "exceptionName": "RealmException", "exceptionComment": "if unable to map JSON.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json array with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "array with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json array with object data."}], "parameterName": "json", "parameterComment": "array with object data.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, org.json.JSONArray)", "flatSignature": "(Class<E>, JSONArray)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n JSON properties with unknown properties will be ignored. If a {@link RealmObject} field is not present in the\n JSON object the {@link RealmObject} field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "name": "createAllFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 585, "column": 40, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects to create."}], "parameterName": "clazz", "parameterComment": "type of Realm objects to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSON array as a String where each object can map to the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON array as a String where each object can map to the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSON array as a String where each object can map to the specified class."}], "parameterName": "json", "parameterComment": "the JSON array as a String where each object can map to the specified class.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects to create."}], "parameterName": "clazz", "parameterComment": "type of Realm objects to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSON array as a String where each object can map to the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON array as a String where each object can map to the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSON array as a String where each object can map to the specified class."}], "parameterName": "json", "parameterComment": "the JSON array as a String where each object can map to the specified class.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n JSON properties with unknown properties will be ignored. If a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n JSON properties with unknown properties will be ignored. If a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the\n JSON object the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the\n JSON object the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field is not present in the\n JSON object the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field will be set to the default value for that type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createAllFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "String", "asString": "String json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects to create."}], "parameterName": "clazz", "parameterComment": "type of Realm objects to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSON array as a String where each object can map to the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON array as a String where each object can map to the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSON array as a String where each object can map to the specified class."}], "parameterName": "json", "parameterComment": "the JSON array as a String where each object can map to the specified class.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.lang.String)", "flatSignature": "(Class<E>, String)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a {@link RealmObject} and a field is not found in the JSON object, that field will not be updated.\n If a new {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type.\n\n <p>\n This method currently does not support value list field.", "name": "createOrUpdateAllFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 619, "column": 40, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json string with an array of JSON objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "string with an array of JSON objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json string with an array of JSON objects."}], "parameterName": "json", "parameterComment": "string with an array of JSON objects.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to create a JSON array from the json string.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to create a JSON array from the json string."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to create a JSON array from the json string."}], "exceptionName": "RealmException", "exceptionComment": "if unable to create a JSON array from the json string.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createAllFromJson(Class, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, String)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createAllFromJson(Class, String)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json string with an array of JSON objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "string with an array of JSON objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json string with an array of JSON objects."}], "parameterName": "json", "parameterComment": "string with an array of JSON objects.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createAllFromJson(Class, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createAllFromJson(Class, String)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createAllFromJson(Class, String)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated.\n If a new ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated.\n If a new "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and a field is not found in the JSON object, that field will not be updated."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createOrUpdateAllFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "String", "asString": "String json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to create a JSON array from the json string.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to create a JSON array from the json string."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to create a JSON array from the json string."}], "exceptionName": "RealmException", "exceptionComment": "if unable to create a JSON array from the json string.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json string with an array of JSON objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "string with an array of JSON objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json string with an array of JSON objects."}], "parameterName": "json", "parameterComment": "string with an array of JSON objects.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.lang.String)", "flatSignature": "(Class<E>, String)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n JSON properties with unknown properties will be ignored. If a {@link RealmObject} field is not present in the\n JSON object the {@link RealmObject} field will be set to the default value for that type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "name": "createAllFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 654, "column": 40, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects created."}], "parameterName": "clazz", "parameterComment": "type of Realm objects created.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "inputStream the JSON array as a InputStream. All objects in the array must be of the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON array as a InputStream. All objects in the array must be of the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "inputStream the JSON array as a InputStream."}], "parameterName": "inputStream", "parameterComment": "the JSON array as a InputStream. All objects in the array must be of the specified class.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IOException if something was wrong with the input stream.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if something was wrong with the input stream."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IOException if something was wrong with the input stream."}], "exceptionName": "IOException", "exceptionComment": "if something was wrong with the input stream.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.IOException", "typeName": "IOException", "qualifiedTypeName": "java.io.IOException", "simpleTypeName": "IOException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects created."}], "parameterName": "clazz", "parameterComment": "type of Realm objects created.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "inputStream the JSON array as a InputStream. All objects in the array must be of the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON array as a InputStream. All objects in the array must be of the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "inputStream the JSON array as a InputStream."}], "parameterName": "inputStream", "parameterComment": "the JSON array as a InputStream. All objects in the array must be of the specified class.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n JSON properties with unknown properties will be ignored. If a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array. This must be done within a transaction.\n JSON properties with unknown properties will be ignored. If a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the\n JSON object the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the\n JSON object the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field is not present in the\n JSON object the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field will be set to the default value for that type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object for each object in a JSON array."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createAllFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.io.IOException", "typeName": "IOException", "qualifiedTypeName": "java.io.IOException", "simpleTypeName": "IOException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "inputStream", "typeName": "InputStream", "asString": "InputStream inputStream", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IOException if something was wrong with the input stream.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if something was wrong with the input stream."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IOException if something was wrong with the input stream."}], "exceptionName": "IOException", "exceptionComment": "if something was wrong with the input stream.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.IOException", "typeName": "IOException", "qualifiedTypeName": "java.io.IOException", "simpleTypeName": "IOException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm objects created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm objects created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm objects created."}], "parameterName": "clazz", "parameterComment": "type of Realm objects created.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "inputStream the JSON array as a InputStream. All objects in the array must be of the specified class.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON array as a InputStream. All objects in the array must be of the specified class."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "inputStream the JSON array as a InputStream."}], "parameterName": "inputStream", "parameterComment": "the JSON array as a InputStream. All objects in the array must be of the specified class.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.io.InputStream)", "flatSignature": "(Class<E>, InputStream)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a {@link RealmObject} and a field is not found in the JSON object, that field will not be updated.\n If a new {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "name": "createOrUpdateAllFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 693, "column": 40, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "in the InputStream with a list of object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the InputStream with a list of object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in the InputStream with a list of object data in JSON format."}], "parameterName": "in", "parameterComment": "the InputStream with a list of object data in JSON format.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to read JSON.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to read JSON."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to read JSON."}], "exceptionName": "RealmException", "exceptionComment": "if unable to read JSON.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createOrUpdateAllFromJson(Class, java.io.InputStream)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateAllFromJson(Class, java.io.InputStream)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateAllFromJson(Class, java.io.InputStream)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createOrUpdateAllFromJson(Class, java.io.InputStream)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "in the InputStream with a list of object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the InputStream with a list of object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in the InputStream with a list of object data in JSON format."}], "parameterName": "in", "parameterComment": "the InputStream with a list of object data in JSON format.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createOrUpdateAllFromJson(Class, java.io.InputStream)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateAllFromJson(Class, java.io.InputStream)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateAllFromJson(Class, java.io.InputStream)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createOrUpdateAllFromJson(Class, java.io.InputStream)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data. If an existing\n object could not be found in the Realm, a new object will be created. This must happen within a transaction.\n If updating a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated.\n If a new ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated.\n If a new "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and a field is not found in the JSON object, that field will not be updated."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is created and a field is not found in the JSON object, that field will be assigned\n the default value for the field type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update a list of existing objects identified by their primary key with new JSON data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createOrUpdateAllFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "in", "typeName": "InputStream", "asString": "InputStream in", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to read JSON.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to read JSON."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to read JSON."}], "exceptionName": "RealmException", "exceptionComment": "if unable to read JSON.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "in the InputStream with a list of object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the InputStream with a list of object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in the InputStream with a list of object data in JSON format."}], "parameterName": "in", "parameterComment": "the InputStream with a list of object data in JSON format.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.io.InputStream)", "flatSignature": "(Class<E>, InputStream)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a {@link RealmObject} field is not present in the JSON\n object the {@link RealmObject} field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "name": "createObjectFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 736, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm object to create."}], "parameterName": "clazz", "parameterComment": "type of Realm object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSONObject with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSONObject with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSONObject with object data."}], "parameterName": "json", "parameterComment": "the JSONObject with object data.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "created object or {@code null} if no JSON data was provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no JSON data was provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no JSON data was provided."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if the mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createOrUpdateObjectFromJson(Class, org.json.JSONObject)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateObjectFromJson(Class, org.json.JSONObject)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateObjectFromJson(Class, org.json.JSONObject)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createOrUpdateObjectFromJson(Class, org.json.JSONObject)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createOrUpdateObjectFromJson(Class, org.json.JSONObject)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateObjectFromJson(Class, org.json.JSONObject)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createOrUpdateObjectFromJson(Class, org.json.JSONObject)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createOrUpdateObjectFromJson(Class, org.json.JSONObject)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the JSON\n object the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the JSON\n object the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field is not present in the JSON\n object the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field will be set to the default value for that type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createObjectFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "org.json.JSONObject", "typeName": "JSONObject", "qualifiedTypeName": "org.json.JSONObject", "simpleTypeName": "JSONObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "JSONObject", "asString": "JSONObject json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the mapping from JSON fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the mapping from JSON fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the mapping from JSON fails."}], "exceptionName": "RealmException", "exceptionComment": "if the mapping from JSON fails.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm object to create."}], "parameterName": "clazz", "parameterComment": "type of Realm object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSONObject with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSONObject with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSONObject with object data."}], "parameterName": "json", "parameterComment": "the JSONObject with object data.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, org.json.JSONObject)", "flatSignature": "(Class<E>, JSONObject)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a {@link RealmObject}\n and a field is not found in the JSON object, that field will not be updated. If a new {@link RealmObject} is\n created and a field is not found in the JSON object, that field will be assigned the default value for the field type.\n\n <p>\n This method currently does not support value list field.", "name": "createOrUpdateObjectFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 768, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz Type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz Type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "Type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json {@link org.json.JSONObject} with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "org.json.JSONObject", "label": "", "referencedClassName": "org.json.JSONObject", "referencedClass": {"_class": "ClassDoc", "asString": "org.json.JSONObject", "typeName": "JSONObject", "qualifiedTypeName": "org.json.JSONObject", "simpleTypeName": "JSONObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "org.json.JSONObject", "label": "", "referencedClassName": "org.json.JSONObject", "referencedClass": {"_class": "ClassDoc", "asString": "org.json.JSONObject", "typeName": "JSONObject", "qualifiedTypeName": "org.json.JSONObject", "simpleTypeName": "JSONObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data."}], "parameterName": "json", "parameterComment": "{@link org.json.JSONObject} with object data.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "created or updated {@link io.realm.RealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created or updated "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created or updated "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if JSON data cannot be mapped.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if JSON data cannot be mapped."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if JSON data cannot be mapped."}], "exceptionName": "RealmException", "exceptionComment": "if JSON data cannot be mapped.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObjectFromJson(Class, org.json.JSONObject)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, org.json.JSONObject)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, org.json.JSONObject)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObjectFromJson(Class, org.json.JSONObject)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObjectFromJson(Class, org.json.JSONObject)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, org.json.JSONObject)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, org.json.JSONObject)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObjectFromJson(Class, org.json.JSONObject)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n and a field is not found in the JSON object, that field will not be updated. If a new ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n and a field is not found in the JSON object, that field will not be updated. If a new "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and a field is not found in the JSON object, that field will not be updated."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is\n created and a field is not found in the JSON object, that field will be assigned the default value for the field type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is\n created and a field is not found in the JSON object, that field will be assigned the default value for the field type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is\n created and a field is not found in the JSON object, that field will be assigned the default value for the field type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createOrUpdateObjectFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "org.json.JSONObject", "typeName": "JSONObject", "qualifiedTypeName": "org.json.JSONObject", "simpleTypeName": "JSONObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "JSONObject", "asString": "JSONObject json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if JSON data cannot be mapped.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if JSON data cannot be mapped."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if JSON data cannot be mapped."}], "exceptionName": "RealmException", "exceptionComment": "if JSON data cannot be mapped.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz Type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz Type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "Type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json {@link org.json.JSONObject} with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "org.json.JSONObject", "label": "", "referencedClassName": "org.json.JSONObject", "referencedClass": {"_class": "ClassDoc", "asString": "org.json.JSONObject", "typeName": "JSONObject", "qualifiedTypeName": "org.json.JSONObject", "simpleTypeName": "JSONObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "org.json.JSONObject", "label": "", "referencedClassName": "org.json.JSONObject", "referencedClass": {"_class": "ClassDoc", "asString": "org.json.JSONObject", "typeName": "JSONObject", "qualifiedTypeName": "org.json.JSONObject", "simpleTypeName": "JSONObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data."}], "parameterName": "json", "parameterComment": "{@link org.json.JSONObject} with object data.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, org.json.JSONObject)", "flatSignature": "(Class<E>, JSONObject)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a {@link RealmObject} field is not present in the JSON\n object the {@link RealmObject} field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "name": "createObjectFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 798, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm object to create."}], "parameterName": "clazz", "parameterComment": "type of Realm object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSON string with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON string with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSON string with object data."}], "parameterName": "json", "parameterComment": "the JSON string with object data.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "created object or {@code null} if JSON string was empty or null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if JSON string was empty or null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if JSON string was empty or null."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping to json failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping to json failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping to json failed."}], "exceptionName": "RealmException", "exceptionComment": "if mapping to json failed.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the JSON\n object the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the JSON\n object the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field is not present in the JSON\n object the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field will be set to the default value for that type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createObjectFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "String", "asString": "String json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if mapping to json failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if mapping to json failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if mapping to json failed."}], "exceptionName": "RealmException", "exceptionComment": "if mapping to json failed.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm object to create."}], "parameterName": "clazz", "parameterComment": "type of Realm object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json the JSON string with object data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON string with object data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json the JSON string with object data."}], "parameterName": "json", "parameterComment": "the JSON string with object data.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.lang.String)", "flatSignature": "(Class<E>, String)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a\n {@link RealmObject} and a field is not found in the JSON object, that field will not be updated. If a new\n {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n\n <p>\n This method currently does not support value list field.", "name": "createOrUpdateObjectFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 833, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json string with object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "string with object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json string with object data in JSON format."}], "parameterName": "json", "parameterComment": "string with object data in JSON format.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "created or updated {@link io.realm.RealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created or updated "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created or updated "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if JSON object cannot be mapped from the string parameter.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if JSON object cannot be mapped from the string parameter."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if JSON object cannot be mapped from the string parameter."}], "exceptionName": "RealmException", "exceptionComment": "if JSON object cannot be mapped from the string parameter.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObjectFromJson(Class, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, String)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObjectFromJson(Class, String)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObjectFromJson(Class, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, String)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObjectFromJson(Class, String)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated. If a new\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated. If a new\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and a field is not found in the JSON object, that field will not be updated."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createOrUpdateObjectFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "json", "typeName": "String", "asString": "String json", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if JSON object cannot be mapped from the string parameter.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if JSON object cannot be mapped from the string parameter."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if JSON object cannot be mapped from the string parameter."}], "exceptionName": "RealmException", "exceptionComment": "if JSON object cannot be mapped from the string parameter.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "json string with object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "string with object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "json string with object data in JSON format."}], "parameterName": "json", "parameterComment": "string with object data in JSON format.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.lang.String)", "flatSignature": "(Class<E>, String)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a {@link RealmObject} field is not present in the JSON\n object the {@link RealmObject} field will be set to the default value for that type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "name": "createObjectFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 870, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm object to create."}], "parameterName": "clazz", "parameterComment": "type of Realm object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "inputStream the JSON object data as a InputStream.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON object data as a InputStream."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "inputStream the JSON object data as a InputStream."}], "parameterName": "inputStream", "parameterComment": "the JSON object data as a InputStream.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "created object or {@code null} if JSON string was empty or null.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if JSON string was empty or null."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created object or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if JSON string was empty or null."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the mapping from JSON failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the mapping from JSON failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the mapping from JSON failed."}], "exceptionName": "RealmException", "exceptionComment": "if the mapping from JSON failed.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IOException if something went wrong with the input stream.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if something went wrong with the input stream."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IOException if something went wrong with the input stream."}], "exceptionName": "IOException", "exceptionComment": "if something went wrong with the input stream.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.IOException", "typeName": "IOException", "qualifiedTypeName": "java.io.IOException", "simpleTypeName": "IOException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object. This must be done inside a transaction. JSON\n properties with unknown properties will be ignored. If a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the JSON\n object the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field is not present in the JSON\n object the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field is not present in the JSON\n object the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " field will be set to the default value for that type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "field will be set to the default value for that type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a Realm object pre-filled with data from a JSON object."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createObjectFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.io.IOException", "typeName": "IOException", "qualifiedTypeName": "java.io.IOException", "simpleTypeName": "IOException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "inputStream", "typeName": "InputStream", "asString": "InputStream inputStream", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the mapping from JSON failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the mapping from JSON failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the mapping from JSON failed."}], "exceptionName": "RealmException", "exceptionComment": "if the mapping from JSON failed.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IOException if something went wrong with the input stream.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if something went wrong with the input stream."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IOException if something went wrong with the input stream."}], "exceptionName": "IOException", "exceptionComment": "if something went wrong with the input stream.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.IOException", "typeName": "IOException", "qualifiedTypeName": "java.io.IOException", "simpleTypeName": "IOException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of Realm object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of Realm object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of Realm object to create."}], "parameterName": "clazz", "parameterComment": "type of Realm object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "inputStream the JSON object data as a InputStream.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the JSON object data as a InputStream."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "inputStream the JSON object data as a InputStream."}], "parameterName": "inputStream", "parameterComment": "the JSON object data as a InputStream.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.io.InputStream)", "flatSignature": "(Class<E>, InputStream)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a\n {@link RealmObject} and a field is not found in the JSON object, that field will not be updated. If a new\n {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "name": "createOrUpdateObjectFromJson", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 927, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "in the {@link InputStream} with object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "InputStream", "label": "", "referencedClassName": "java.io.InputStream", "referencedClass": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "InputStream", "label": "", "referencedClassName": "java.io.InputStream", "referencedClass": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data in JSON format."}], "parameterName": "in", "parameterComment": "the {@link InputStream} with object data in JSON format.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "created or updated {@link io.realm.RealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created or updated "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "created or updated "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if failure to read JSON.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if failure to read JSON."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if failure to read JSON."}], "exceptionName": "RealmException", "exceptionComment": "if failure to read JSON.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObjectFromJson(Class, java.io.InputStream)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, java.io.InputStream)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, java.io.InputStream)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObjectFromJson(Class, java.io.InputStream)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObjectFromJson(Class, java.io.InputStream)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, java.io.InputStream)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObjectFromJson(Class, java.io.InputStream)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObjectFromJson(Class, java.io.InputStream)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data. If no existing object could be\n found a new object will be saved in the Realm. This must happen within a transaction. If updating a\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated. If a new\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and a field is not found in the JSON object, that field will not be updated. If a new\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and a field is not found in the JSON object, that field will not be updated."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type.\n <p>\n This API is only available in API level 11 or later.\n\n <p>\n This method currently does not support value list field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is created and a field is not found in the JSON object, that field will be assigned the\n default value for the field type."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Tries to update an existing object defined by its primary key with new JSON data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createOrUpdateObjectFromJson", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "in", "typeName": "InputStream", "asString": "InputStream in", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if trying to update a class without a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObjectSchema", "label": "", "referencedClassName": "io.realm.RealmObjectSchema", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObjectSchema", "typeName": "RealmObjectSchema", "qualifiedTypeName": "io.realm.RealmObjectSchema", "simpleTypeName": "RealmObjectSchema", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " has a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the JSON object doesn't have a primary key property but the corresponding\n {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if failure to read JSON.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if failure to read JSON."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if failure to read JSON."}], "exceptionName": "RealmException", "exceptionComment": "if failure to read JSON.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update. It must have a primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz type of "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to create or update."}], "parameterName": "clazz", "parameterComment": "type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "in the {@link InputStream} with object data in JSON format.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "InputStream", "label": "", "referencedClassName": "java.io.InputStream", "referencedClass": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data in JSON format."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "in the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "InputStream", "label": "", "referencedClassName": "java.io.InputStream", "referencedClass": {"_class": "ClassDoc", "asString": "java.io.InputStream", "typeName": "InputStream", "qualifiedTypeName": "java.io.InputStream", "simpleTypeName": "InputStream", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " with object data in JSON format."}], "parameterName": "in", "parameterComment": "the {@link InputStream} with object data in JSON format.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.io.InputStream)", "flatSignature": "(Class<E>, InputStream)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Instantiates and adds a new object to the Realm.\n <p>\n This method is only available for model classes with no @PrimaryKey annotation.\n If you like to create an object that has a primary key, use {@link #createObject(Class, Object)}\n or {@link #copyToRealm(RealmModel, ImportFlag...)} instead.", "name": "createObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 967, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the Class of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Class of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the Class of the object to create."}], "parameterName": "clazz", "parameterComment": "the Class of the object to create.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the new object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the primary key is defined in the model class or an object cannot be created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the primary key is defined in the model class or an object cannot be created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the primary key is defined in the model class or an object cannot be created."}], "exceptionName": "RealmException", "exceptionComment": "if the primary key is defined in the model class or an object cannot be created.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObject(Class, Object)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(Class, Object)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(Class, Object)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObject(Class, Object)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#createObject(Class, Object)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(Class, Object)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(Class, Object)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObject(Class, Object)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm.\n <p>\n This method is only available for model classes with no @PrimaryKey annotation.\n If you like to create an object that has a primary key, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm.\n <p>\n This method is only available for model classes with no @PrimaryKey annotation.\n If you like to create an object that has a primary key, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#createObject(Class, Object)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(Class, Object)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#createObject(Class, Object)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "createObject(Class, Object)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if the primary key is defined in the model class or an object cannot be created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the primary key is defined in the model class or an object cannot be created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if the primary key is defined in the model class or an object cannot be created."}], "exceptionName": "RealmException", "exceptionComment": "if the primary key is defined in the model class or an object cannot be created.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the Class of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Class of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the Class of the object to create."}], "parameterName": "clazz", "parameterComment": "the Class of the object to create.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>)", "flatSignature": "(Class<E>)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Instantiates and adds a new object to the Realm with the primary key value already set.\n <p>\n If the value violates the primary key constraint, no object will be added and a {@link RealmException} will be\n thrown.\n The default value for primary key provided by the model class will be ignored.", "name": "createObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1018, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the Class of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Class of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the Class of the object to create."}], "parameterName": "clazz", "parameterComment": "the Class of the object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "primaryKeyValue value for the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "primaryKeyValue value for the primary key field."}], "parameterName": "primaryKeyValue", "parameterComment": "value for the primary key field.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the new object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if object could not be created due to the primary key being invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if object could not be created due to the primary key being invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if object could not be created due to the primary key being invalid."}], "exceptionName": "RealmException", "exceptionComment": "if object could not be created due to the primary key being invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the model class does not have an primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the model class does not have an primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the model class does not have an primary key defined."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the model class does not have an primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm with the primary key value already set.\n <p>\n If the value violates the primary key constraint, no object will be added and a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm with the primary key value already set.\n <p>\n If the value violates the primary key constraint, no object will be added and a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm with the primary key value already set."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException"}], "label": "", "referencedClassName": "io.realm.exceptions.RealmException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n thrown.\n The default value for primary key provided by the model class will be ignored.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n thrown.\n The default value for primary key provided by the model class will be ignored."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be\n thrown."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm with the primary key value already set.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm with the primary key value already set."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new object to the Realm with the primary key value already set."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "primaryKeyValue", "typeName": "Object", "asString": "Object primaryKeyValue", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if object could not be created due to the primary key being invalid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if object could not be created due to the primary key being invalid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if object could not be created due to the primary key being invalid."}], "exceptionName": "RealmException", "exceptionComment": "if object could not be created due to the primary key being invalid.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the model class does not have an primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the model class does not have an primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the model class does not have an primary key defined."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the model class does not have an primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "primaryKeyValue"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " doesn't have a value that can be converted to the\n expected value."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code primaryKeyValue} doesn't have a value that can be converted to the\n expected value.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the Class of the object to create.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Class of the object to create."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the Class of the object to create."}], "parameterName": "clazz", "parameterComment": "the Class of the object to create.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "primaryKeyValue value for the primary key field.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "value for the primary key field."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "primaryKeyValue value for the primary key field."}], "parameterName": "primaryKeyValue", "parameterComment": "value for the primary key field.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, java.lang.Object)", "flatSignature": "(Class<E>, Object)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Instantiates and adds a new embedded object to the Realm.\n <p>\n This method should only be used to create objects of types marked as embedded.", "name": "createEmbeddedObject", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1041, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the Class of the object to create. It must be marked with {@code \\@RealmClass(embedded = true)}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Class of the object to create. It must be marked with "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\\@RealmClass(embedded = true)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the Class of the object to create."}], "parameterName": "clazz", "parameterComment": "the Class of the object to create. It must be marked with {@code \\@RealmClass(embedded = true)}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentObject The parent object which should hold a reference to the embedded object. If the parent property is a list\n the embedded object will be added to the end of that list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The parent object which should hold a reference to the embedded object. If the parent property is a list\n the embedded object will be added to the end of that list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentObject The parent object which should hold a reference to the embedded object."}], "parameterName": "parentObject", "parameterComment": "The parent object which should hold a reference to the embedded object. If the parent property is a list\n the embedded object will be added to the end of that list.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentProperty the property in the parent class which holds the reference.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the property in the parent class which holds the reference."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentProperty the property in the parent class which holds the reference."}], "parameterName": "parentProperty", "parameterComment": "the property in the parent class which holds the reference.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the newly created embedded object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the newly created embedded object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the newly created embedded object."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "RealmClass#embedded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmClass#embedded()"}], "label": "", "referencedClassName": "io.realm.annotations.RealmClass", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmClass", "typeName": "RealmClass", "qualifiedTypeName": "io.realm.annotations.RealmClass", "simpleTypeName": "RealmClass", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "referencedMemberName": "embedded()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm.\n <p>\n This method should only be used to create objects of types marked as embedded.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm.\n <p>\n This method should only be used to create objects of types marked as embedded."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Instantiates and adds a new embedded object to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.createEmbeddedObject", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "parentObject", "typeName": "RealmModel", "asString": "RealmModel parentObject", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "parentProperty", "typeName": "String", "asString": "String parentProperty", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "clazz"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code clazz} is not an embedded class or if the property\n in the parent class cannot hold objects of the appropriate type.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the Class of the object to create. It must be marked with {@code \\@RealmClass(embedded = true)}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the Class of the object to create. It must be marked with "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\\@RealmClass(embedded = true)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the Class of the object to create."}], "parameterName": "clazz", "parameterComment": "the Class of the object to create. It must be marked with {@code \\@RealmClass(embedded = true)}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentObject The parent object which should hold a reference to the embedded object. If the parent property is a list\n the embedded object will be added to the end of that list.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The parent object which should hold a reference to the embedded object. If the parent property is a list\n the embedded object will be added to the end of that list."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentObject The parent object which should hold a reference to the embedded object."}], "parameterName": "parentObject", "parameterComment": "The parent object which should hold a reference to the embedded object. If the parent property is a list\n the embedded object will be added to the end of that list.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "parentProperty the property in the parent class which holds the reference.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the property in the parent class which holds the reference."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "parentProperty the property in the parent class which holds the reference."}], "parameterName": "parentProperty", "parameterComment": "the property in the parent class which holds the reference.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>, io.realm.RealmModel, java.lang.String)", "flatSignature": "(Class<E>, RealmModel, String)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Copies a RealmObject to the Realm instance and returns the copy. Any further changes to the original RealmObject\n will not be reflected in the Realm copy. This is a deep copy, so all referenced objects will be copied. Objects\n already in this Realm will be ignored.\n <p>\n Please note, copying an object will copy all field values. Any unset field in this and child objects will be\n set to their default value if not provided.", "name": "copyToRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1104, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the {@link io.realm.RealmObject} to copy to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy to the Realm."}], "parameterName": "object", "parameterComment": "the {@link io.realm.RealmObject} to copy to the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a managed RealmObject with its properties backed by the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a managed RealmObject with its properties backed by the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a managed RealmObject with its properties backed by the Realm."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the object is {@code null} or it belongs to a Realm instance\n in a different thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or it belongs to a Realm instance\n in a different thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or it belongs to a Realm instance\n in a different thread."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the object is {@code null} or it belongs to a Realm instance\n in a different thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a RealmObject to the Realm instance and returns the copy. Any further changes to the original RealmObject\n will not be reflected in the Realm copy. This is a deep copy, so all referenced objects will be copied. Objects\n already in this Realm will be ignored.\n <p>\n Please note, copying an object will copy all field values. Any unset field in this and child objects will be\n set to their default value if not provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a RealmObject to the Realm instance and returns the copy. Any further changes to the original RealmObject\n will not be reflected in the Realm copy. This is a deep copy, so all referenced objects will be copied. Objects\n already in this Realm will be ignored.\n <p>\n Please note, copying an object will copy all field values. Any unset field in this and child objects will be\n set to their default value if not provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a RealmObject to the Realm instance and returns the copy."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a RealmObject to the Realm instance and returns the copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a RealmObject to the Realm instance and returns the copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a RealmObject to the Realm instance and returns the copy."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyToRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}, "name": "object", "typeName": "E", "asString": "E object", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.ImportFlag[]", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "flags", "typeName": "io.realm.ImportFlag[]", "asString": "io.realm.ImportFlag[] flags", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the object is {@code null} or it belongs to a Realm instance\n in a different thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or it belongs to a Realm instance\n in a different thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or it belongs to a Realm instance\n in a different thread."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the object is {@code null} or it belongs to a Realm instance\n in a different thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object the {@link io.realm.RealmObject} to copy to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy to the Realm."}], "parameterName": "object", "parameterComment": "the {@link io.realm.RealmObject} to copy to the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(E, io.realm.ImportFlag...)", "flatSignature": "(E, ImportFlag...)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Updates an existing RealmObject that is identified by the same {@link io.realm.annotations.PrimaryKey} or creates\n a new copy if no existing object could be found. This is a deep copy or update i.e., all referenced objects will be\n either copied or updated.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the object and child objects will be\n set to their default value if not provided.", "name": "copyToRealmOrUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1125, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object {@link io.realm.RealmObject} to copy or update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy or update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy or update."}], "parameterName": "object", "parameterComment": "{@link io.realm.RealmObject} to copy or update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the new or updated RealmObject with all its properties backed by the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new or updated RealmObject with all its properties backed by the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new or updated RealmObject with all its properties backed by the Realm."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the object is {@code null} or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the object is {@code null} or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates an existing RealmObject that is identified by the same ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates an existing RealmObject that is identified by the same "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates an existing RealmObject that is identified by the same"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or creates\n a new copy if no existing object could be found. This is a deep copy or update i.e., all referenced objects will be\n either copied or updated.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the object and child objects will be\n set to their default value if not provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or creates\n a new copy if no existing object could be found. This is a deep copy or update i.e., all referenced objects will be\n either copied or updated.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the object and child objects will be\n set to their default value if not provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or creates\n a new copy if no existing object could be found."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates an existing RealmObject that is identified by the same ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates an existing RealmObject that is identified by the same "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates an existing RealmObject that is identified by the same"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or creates\n a new copy if no existing object could be found.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or creates\n a new copy if no existing object could be found."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or creates\n a new copy if no existing object could be found."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyToRealmOrUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}, "name": "object", "typeName": "E", "asString": "E object", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.ImportFlag[]", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "flags", "typeName": "io.realm.ImportFlag[]", "asString": "io.realm.ImportFlag[] flags", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if the object is {@code null} or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if the object is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if the object is {@code null} or doesn't have a Primary key defined\n or it belongs to a Realm instance in a different thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object {@link io.realm.RealmObject} to copy or update.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy or update."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy or update."}], "parameterName": "object", "parameterComment": "{@link io.realm.RealmObject} to copy or update.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(E, io.realm.ImportFlag...)", "flatSignature": "(E, ImportFlag...)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Copies a collection of RealmObjects to the Realm instance and returns their copy. Any further changes to the\n original RealmObjects will not be reflected in the Realm copies. This is a deep copy i.e., all referenced objects\n will be copied. Objects already in this Realm will be ignored.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the objects and child objects will be\n set to their default value if not provided.", "name": "copyToRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1145, "column": 43, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects the RealmObjects to copy to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the RealmObjects to copy to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects the RealmObjects to copy to the Realm."}], "parameterName": "objects", "parameterComment": "the RealmObjects to copy to the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a list of the the converted RealmObjects that all has their properties managed by the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of the the converted RealmObjects that all has their properties managed by the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of the the converted RealmObjects that all has their properties managed by the Realm."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if any of the objects has already been added to Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the objects has already been added to Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if any of the objects has already been added to Realm."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if any of the objects has already been added to Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if any of the elements in the input collection is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the elements in the input collection is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if any of the elements in the input collection is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if any of the elements in the input collection is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a collection of RealmObjects to the Realm instance and returns their copy. Any further changes to the\n original RealmObjects will not be reflected in the Realm copies. This is a deep copy i.e., all referenced objects\n will be copied. Objects already in this Realm will be ignored.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the objects and child objects will be\n set to their default value if not provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a collection of RealmObjects to the Realm instance and returns their copy. Any further changes to the\n original RealmObjects will not be reflected in the Realm copies. This is a deep copy i.e., all referenced objects\n will be copied. Objects already in this Realm will be ignored.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the objects and child objects will be\n set to their default value if not provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a collection of RealmObjects to the Realm instance and returns their copy."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a collection of RealmObjects to the Realm instance and returns their copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a collection of RealmObjects to the Realm instance and returns their copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies a collection of RealmObjects to the Realm instance and returns their copy."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyToRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": []}, "name": "objects", "typeName": "java.lang.Iterable<E>", "asString": "java.lang.Iterable<E> objects", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.ImportFlag[]", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "flags", "typeName": "io.realm.ImportFlag[]", "asString": "io.realm.ImportFlag[] flags", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmException if any of the objects has already been added to Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the objects has already been added to Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmException if any of the objects has already been added to Realm."}], "exceptionName": "io.realm.exceptions.RealmException", "exceptionComment": "if any of the objects has already been added to Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if any of the elements in the input collection is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the elements in the input collection is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if any of the elements in the input collection is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if any of the elements in the input collection is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects the RealmObjects to copy to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the RealmObjects to copy to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects the RealmObjects to copy to the Realm."}], "parameterName": "objects", "parameterComment": "the RealmObjects to copy to the Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Iterable<E>, io.realm.ImportFlag...)", "flatSignature": "(Iterable<E>, ImportFlag...)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Inserts a list of an unmanaged RealmObjects. This is generally faster than {@link #copyToRealm(Iterable, ImportFlag...)} since it\n doesn't return the inserted elements, and performs minimum allocations and checks.\n After being inserted any changes to the original objects will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed {@link RealmObject} for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed {@link RealmObject} returned, use {@link #copyToRealm(Iterable, ImportFlag...)}, otherwise if\n you have a large number of object this method is generally faster.", "name": "insert", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1188, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects RealmObjects to insert."}], "parameterName": "objects", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects RealmObjects to insert."}], "parameterName": "objects", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts a list of an unmanaged RealmObjects. This is generally faster than ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts a list of an unmanaged RealmObjects. This is generally faster than "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts a list of an unmanaged RealmObjects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it\n doesn't return the inserted elements, and performs minimum allocations and checks.\n After being inserted any changes to the original objects will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it\n doesn't return the inserted elements, and performs minimum allocations and checks.\n After being inserted any changes to the original objects will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "since it\n doesn't return the inserted elements, and performs minimum allocations and checks."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for each element</li>\n <li>Copying an object will copy all field values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returned, use"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts a list of an unmanaged RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts a list of an unmanaged RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts a list of an unmanaged RealmObjects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.insert", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.Collection<? extends io.realm.RealmModel>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends io.realm.RealmModel", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": ["java.lang.Iterable"]}, "name": "objects", "typeName": "java.util.Collection<? extends io.realm.RealmModel>", "asString": "java.util.Collection<? extends io.realm.RealmModel> objects", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects RealmObjects to insert."}], "parameterName": "objects", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.util.Collection<? extends io.realm.RealmModel>)", "flatSignature": "(Collection<? extends RealmModel>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Inserts an unmanaged RealmObject. This is generally faster than {@link #copyToRealm(RealmModel, ImportFlag...)} since it\n doesn't return the inserted elements, and performs minimum allocations and checks.\n After being inserted any changes to the original object will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed {@link RealmObject} for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed {@link RealmObject} returned, use {@link #copyToRealm(RealmModel, ImportFlag...)}, otherwise if\n you have a large number of object this method is generally faster.", "name": "insert", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1225, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object RealmObjects to insert."}], "parameterName": "object", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "exceptionName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "exceptionComment": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "typeName": "RealmPrimaryKeyConstraintException", "qualifiedTypeName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "simpleTypeName": "RealmPrimaryKeyConstraintException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object RealmObjects to insert."}], "parameterName": "object", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts an unmanaged RealmObject. This is generally faster than ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts an unmanaged RealmObject. This is generally faster than "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts an unmanaged RealmObject."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it\n doesn't return the inserted elements, and performs minimum allocations and checks.\n After being inserted any changes to the original object will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it\n doesn't return the inserted elements, and performs minimum allocations and checks.\n After being inserted any changes to the original object will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "since it\n doesn't return the inserted elements, and performs minimum allocations and checks."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for each element</li>\n <li>Copying an object will copy all field values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returned, use"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts an unmanaged RealmObject.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts an unmanaged RealmObject."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts an unmanaged RealmObject."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.insert", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "object", "typeName": "RealmModel", "asString": "RealmModel object", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "exceptionName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "exceptionComment": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "typeName": "RealmPrimaryKeyConstraintException", "qualifiedTypeName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "simpleTypeName": "RealmPrimaryKeyConstraintException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object RealmObjects to insert."}], "parameterName": "object", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmModel)", "flatSignature": "(RealmModel)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Inserts or updates a list of unmanaged RealmObjects. This is generally faster than\n {@link #copyToRealmOrUpdate(Iterable, ImportFlag...)} since it doesn't return the inserted elements, and performs minimum\n allocations and checks.\n After being inserted any changes to the original objects will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed {@link RealmObject} for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed {@link RealmObject} returned, use {@link #copyToRealm(Iterable, ImportFlag...)}, otherwise if\n you have a large number of object this method is generally faster.", "name": "insertOrUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1261, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects RealmObjects to insert."}], "parameterName": "objects", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "exceptionName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "exceptionComment": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "typeName": "RealmPrimaryKeyConstraintException", "qualifiedTypeName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "simpleTypeName": "RealmPrimaryKeyConstraintException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects RealmObjects to insert."}], "parameterName": "objects", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates a list of unmanaged RealmObjects. This is generally faster than\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates a list of unmanaged RealmObjects. This is generally faster than\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates a list of unmanaged RealmObjects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it doesn't return the inserted elements, and performs minimum\n allocations and checks.\n After being inserted any changes to the original objects will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it doesn't return the inserted elements, and performs minimum\n allocations and checks.\n After being inserted any changes to the original objects will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "since it doesn't return the inserted elements, and performs minimum\n allocations and checks."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for each element</li>\n <li>Copying an object will copy all field values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returned, use"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates a list of unmanaged RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates a list of unmanaged RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates a list of unmanaged RealmObjects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.insertOrUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.util.Collection<? extends io.realm.RealmModel>", "typeName": "Collection", "qualifiedTypeName": "java.util.Collection", "simpleTypeName": "Collection", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends io.realm.RealmModel", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "interfaceTypes": ["java.lang.Iterable"]}, "name": "objects", "typeName": "java.util.Collection<? extends io.realm.RealmModel>", "asString": "java.util.Collection<? extends io.realm.RealmModel> objects", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmPrimaryKeyConstraintException if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm."}], "exceptionName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "exceptionComment": "if two objects with the same primary key is\n inserted or if a primary key value already exists in the Realm.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "typeName": "RealmPrimaryKeyConstraintException", "qualifiedTypeName": "io.realm.exceptions.RealmPrimaryKeyConstraintException", "simpleTypeName": "RealmPrimaryKeyConstraintException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects RealmObjects to insert."}], "parameterName": "objects", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.util.Collection<? extends io.realm.RealmModel>)", "flatSignature": "(Collection<? extends RealmModel>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Inserts or updates an unmanaged RealmObject. This is generally faster than\n {@link #copyToRealmOrUpdate(RealmModel, ImportFlag...)} since it doesn't return the inserted elements, and performs minimum\n allocations and checks.\n After being inserted any changes to the original object will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed {@link RealmObject} for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed {@link RealmObject} returned, use {@link #copyToRealm(RealmModel, ImportFlag...)}, otherwise if\n you have a large number of object this method is generally faster.", "name": "insertOrUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1297, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object RealmObjects to insert."}], "parameterName": "object", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object RealmObjects to insert."}], "parameterName": "object", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates an unmanaged RealmObject. This is generally faster than\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates an unmanaged RealmObject. This is generally faster than\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates an unmanaged RealmObject."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it doesn't return the inserted elements, and performs minimum\n allocations and checks.\n After being inserted any changes to the original object will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " since it doesn't return the inserted elements, and performs minimum\n allocations and checks.\n After being inserted any changes to the original object will not be persisted.\n <p>\n Please note:\n <ul>\n <li>\n We don't check if the provided objects are already managed or not, so inserting a managed object might duplicate it.\n Duplication will only happen if the object doesn't have a primary key. Objects with primary keys will never get duplicated.\n </li>\n <li>We don't create (nor return) a managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "since it doesn't return the inserted elements, and performs minimum\n allocations and checks."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for each element</li>\n <li>Copying an object will copy all field values. Any unset field in the object and child objects will be set to their default value if not provided</li>\n </ul>\n <p>\n If you want the managed "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for each element</li>\n <li>Copying an object will copy all field values."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returned, use "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returned, use"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealm(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", otherwise if\n you have a large number of object this method is generally faster."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates an unmanaged RealmObject.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates an unmanaged RealmObject."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Inserts or updates an unmanaged RealmObject."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.insertOrUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "object", "typeName": "RealmModel", "asString": "RealmModel object", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the corresponding Realm is closed, called from an incorrect thread or not in a\n transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "object RealmObjects to insert.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to insert."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object RealmObjects to insert."}], "parameterName": "object", "parameterComment": "RealmObjects to insert.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmModel)", "flatSignature": "(RealmModel)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Updates a list of existing RealmObjects that is identified by their {@link io.realm.annotations.PrimaryKey} or\n creates a new copy if no existing object could be found. This is a deep copy or update i.e., all referenced\n objects will be either copied or updated.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the objects and child objects will be\n set to their default value if not provided.", "name": "copyToRealmOrUpdate", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1321, "column": 43, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects a list of objects to update or copy into Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of objects to update or copy into Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects a list of objects to update or copy into Realm."}], "parameterName": "objects", "parameterComment": "a list of objects to update or copy into Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a list of all the new or updated RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of all the new or updated RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of all the new or updated RealmObjects."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if RealmObject is {@code null} or doesn't have a Primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if RealmObject is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if RealmObject is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if RealmObject is {@code null} or doesn't have a Primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealm(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealm(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealm(Iterable, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates a list of existing RealmObjects that is identified by their ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates a list of existing RealmObjects that is identified by their "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates a list of existing RealmObjects that is identified by their"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n creates a new copy if no existing object could be found. This is a deep copy or update i.e., all referenced\n objects will be either copied or updated.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the objects and child objects will be\n set to their default value if not provided.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n creates a new copy if no existing object could be found. This is a deep copy or update i.e., all referenced\n objects will be either copied or updated.\n <p>\n Please note, copying an object will copy all field values. Any unset field in the objects and child objects will be\n set to their default value if not provided."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or\n creates a new copy if no existing object could be found."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates a list of existing RealmObjects that is identified by their ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates a list of existing RealmObjects that is identified by their "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Updates a list of existing RealmObjects that is identified by their"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.annotations.PrimaryKey", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.annotations.PrimaryKey"}], "label": "", "referencedClassName": "io.realm.annotations.PrimaryKey", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.PrimaryKey", "typeName": "PrimaryKey", "qualifiedTypeName": "io.realm.annotations.PrimaryKey", "simpleTypeName": "PrimaryKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n creates a new copy if no existing object could be found.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n creates a new copy if no existing object could be found."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or\n creates a new copy if no existing object could be found."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyToRealmOrUpdate", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": []}, "name": "objects", "typeName": "java.lang.Iterable<E>", "asString": "java.lang.Iterable<E> objects", "annotations": []}, {"type": {"_class": "Type", "asString": "io.realm.ImportFlag[]", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "flags", "typeName": "io.realm.ImportFlag[]", "asString": "io.realm.ImportFlag[] flags", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "java.lang.IllegalArgumentException if RealmObject is {@code null} or doesn't have a Primary key defined.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if RealmObject is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "java.lang.IllegalArgumentException if RealmObject is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or doesn't have a Primary key defined."}], "exceptionName": "java.lang.IllegalArgumentException", "exceptionComment": "if RealmObject is {@code null} or doesn't have a Primary key defined.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "objects a list of objects to update or copy into Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a list of objects to update or copy into Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "objects a list of objects to update or copy into Realm."}], "parameterName": "objects", "parameterComment": "a list of objects to update or copy into Realm.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any flag that modifies the behaviour of inserting the data into the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "flags any flag that modifies the behaviour of inserting the data into the Realm."}], "parameterName": "flags", "parameterComment": "any flag that modifies the behaviour of inserting the data into the Realm.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Iterable<E>, io.realm.ImportFlag...)", "flatSignature": "(Iterable<E>, ImportFlag...)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Makes an unmanaged in-memory copy of already persisted RealmObjects. This is a deep copy that will copy all\n referenced objects.\n <p>\n The copied objects are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n {@link #copyToRealmOrUpdate(RealmModel, ImportFlag...)}, but all fields will be overridden, not just those that\n were changed. This includes references to other objects, and can potentially override changes made by other\n threads. This behaviour can be modified using {@link ImportFlag}s.", "name": "copyFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1361, "column": 43, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObjects RealmObjects to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObjects RealmObjects to copy."}], "parameterName": "realmObjects", "parameterComment": "RealmObjects to copy.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an in-memory detached copy of managed RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of managed RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of managed RealmObjects."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects. This is a deep copy that will copy all\n referenced objects.\n <p>\n The copied objects are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects. This is a deep copy that will copy all\n referenced objects.\n <p>\n The copied objects are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that\n were changed. This includes references to other objects, and can potentially override changes made by other\n threads. This behaviour can be modified using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that\n were changed. This includes references to other objects, and can potentially override changes made by other\n threads. This behaviour can be modified using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that\n were changed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ImportFlag", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "label": "", "referencedClassName": "io.realm.ImportFlag", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": []}, "name": "realmObjects", "typeName": "java.lang.Iterable<E>", "asString": "java.lang.Iterable<E> realmObjects", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObjects RealmObjects to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObjects RealmObjects to copy."}], "parameterName": "realmObjects", "parameterComment": "RealmObjects to copy.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}], "signature": "(java.lang.Iterable<E>)", "flatSignature": "(Iterable<E>)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Makes an unmanaged in-memory copy of already persisted RealmObjects. This is a deep copy that will copy all\n referenced objects up to the defined depth.\n <p>\n The copied objects are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n {@link #copyToRealmOrUpdate(Iterable, ImportFlag...)}, but all fields will be overridden, not just those that were changed.\n This includes references to other objects even though they might be {@code null} due to {@code maxDepth} being\n reached. This can also potentially override changes made by other threads. This behaviour can be modified using\n {@link ImportFlag}s.", "name": "copyFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1387, "column": 43, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObjects RealmObjects to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObjects RealmObjects to copy."}], "parameterName": "realmObjects", "parameterComment": "RealmObjects to copy.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "maxDepth limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "limit of the deep copy. All references after this depth will be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Starting depth is\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth limit of the deep copy."}], "parameterName": "maxDepth", "parameterComment": "limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an in-memory detached copy of the RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of the RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of the RealmObjects."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects. This is a deep copy that will copy all\n referenced objects up to the defined depth.\n <p>\n The copied objects are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects. This is a deep copy that will copy all\n referenced objects up to the defined depth.\n <p>\n The copied objects are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(Iterable, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(Iterable, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed.\n This includes references to other objects even though they might be ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed.\n This includes references to other objects even though they might be "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " due to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " due to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "due to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " being\n reached. This can also potentially override changes made by other threads. This behaviour can be modified using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " being\n reached. This can also potentially override changes made by other threads. This behaviour can be modified using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "being\n reached."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ImportFlag", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "label": "", "referencedClassName": "io.realm.ImportFlag", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of already persisted RealmObjects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Iterable<E>", "typeName": "Iterable", "qualifiedTypeName": "java.lang.Iterable", "simpleTypeName": "Iterable", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": []}, "name": "realmObjects", "typeName": "java.lang.Iterable<E>", "asString": "java.lang.Iterable<E> realmObjects", "annotations": []}, {"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "maxDepth", "typeName": "int", "asString": "int maxDepth", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObjects RealmObjects to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObjects to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObjects RealmObjects to copy."}], "parameterName": "realmObjects", "parameterComment": "RealmObjects to copy.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "maxDepth limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "limit of the deep copy. All references after this depth will be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Starting depth is\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth limit of the deep copy."}], "parameterName": "maxDepth", "parameterComment": "limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}], "signature": "(java.lang.Iterable<E>, int)", "flatSignature": "(Iterable<E>, int)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.List<E>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Makes an unmanaged in-memory copy of an already persisted {@link RealmObject}. This is a deep copy that will copy\n all referenced objects.\n <p>\n The copied object(s) are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n {@link #copyToRealmOrUpdate(RealmModel, ImportFlag...)}, but all fields will be overridden, not just those that were changed.\n This includes references to other objects, and can potentially override changes made by other threads.\n This behaviour can be modified using {@link ImportFlag}s.", "name": "copyFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1427, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObject {@link RealmObject} to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObject "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "parameterName": "realmObject", "parameterComment": "{@link RealmObject} to copy.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an in-memory detached copy of the managed {@link RealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of the managed "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of the managed "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This is a deep copy that will copy\n all referenced objects.\n <p>\n The copied object(s) are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This is a deep copy that will copy\n all referenced objects.\n <p>\n The copied object(s) are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed.\n This includes references to other objects, and can potentially override changes made by other threads.\n This behaviour can be modified using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed.\n This includes references to other objects, and can potentially override changes made by other threads.\n This behaviour can be modified using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ImportFlag", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "label": "", "referencedClassName": "io.realm.ImportFlag", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}, "name": "realmObject", "typeName": "E", "asString": "E realmObject", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the RealmObject is no longer accessible or it is a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the RealmObject is no longer accessible or it is a {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObject {@link RealmObject} to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObject "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "parameterName": "realmObject", "parameterComment": "{@link RealmObject} to copy.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}], "signature": "(E)", "flatSignature": "(E)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Makes an unmanaged in-memory copy of an already persisted {@link RealmObject}. This is a deep copy that will copy\n all referenced objects up to the defined depth.\n <p>\n The copied object(s) are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n {@link #copyToRealmOrUpdate(RealmModel, ImportFlag...)}, but all fields will be overridden, not just those that were changed.\n This includes references to other objects even though they might be {@code null} due to {@code maxDepth} being\n reached. This can also potentially override changes made by other threads. This behaviour can be modified using\n {@link ImportFlag}s.", "name": "copyFromRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1453, "column": 37, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObject {@link RealmObject} to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObject "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "parameterName": "realmObject", "parameterComment": "{@link RealmObject} to copy.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "maxDepth limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "limit of the deep copy. All references after this depth will be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Starting depth is\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth limit of the deep copy."}], "parameterName": "maxDepth", "parameterComment": "limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "an in-memory detached copy of the managed {@link RealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of the managed "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "an in-memory detached copy of the managed "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This is a deep copy that will copy\n all referenced objects up to the defined depth.\n <p>\n The copied object(s) are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This is a deep copy that will copy\n all referenced objects up to the defined depth.\n <p>\n The copied object(s) are all detached from Realm and they will no longer be automatically updated. This means\n that the copied objects might contain data that are no longer consistent with other managed Realm objects.\n <p>\n *WARNING*: Any changes to copied objects can be merged back into Realm using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#copyToRealmOrUpdate(RealmModel, ImportFlag...)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "copyToRealmOrUpdate(RealmModel, ImportFlag...)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed.\n This includes references to other objects even though they might be ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed.\n This includes references to other objects even though they might be "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but all fields will be overridden, not just those that were changed."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "null"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " due to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " due to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "due to"}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " being\n reached. This can also potentially override changes made by other threads. This behaviour can be modified using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " being\n reached. This can also potentially override changes made by other threads. This behaviour can be modified using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "being\n reached."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ImportFlag", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ImportFlag"}], "label": "", "referencedClassName": "io.realm.ImportFlag", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.ImportFlag", "typeName": "ImportFlag", "qualifiedTypeName": "io.realm.ImportFlag", "simpleTypeName": "ImportFlag", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Makes an unmanaged in-memory copy of an already persisted"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObject"}], "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.copyFromRealm", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}, "name": "realmObject", "typeName": "E", "asString": "E realmObject", "annotations": []}, {"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "maxDepth", "typeName": "int", "asString": "int maxDepth", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "maxDepth < 0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the RealmObject is no longer accessible or it is a\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DynamicRealmObject", "label": "", "referencedClassName": "io.realm.DynamicRealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DynamicRealmObject", "typeName": "DynamicRealmObject", "qualifiedTypeName": "io.realm.DynamicRealmObject", "simpleTypeName": "DynamicRealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code maxDepth < 0}, the RealmObject is no longer accessible or it is a\n {@link DynamicRealmObject}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "realmObject {@link RealmObject} to copy.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "realmObject "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObject", "label": "", "referencedClassName": "io.realm.RealmObject", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmObject", "typeName": "RealmObject", "qualifiedTypeName": "io.realm.RealmObject", "simpleTypeName": "RealmObject", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to copy."}], "parameterName": "realmObject", "parameterComment": "{@link RealmObject} to copy.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "maxDepth limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "limit of the deep copy. All references after this depth will be "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Starting depth is\n "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "maxDepth limit of the deep copy."}], "parameterName": "maxDepth", "parameterComment": "limit of the deep copy. All references after this depth will be {@code null}. Starting depth is\n {@code 0}.", "isTypeParameter": false}], "typeParamTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "<E> type of object.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of object."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<E> type of object."}], "parameterName": "E", "parameterComment": "type of object.", "isTypeParameter": true}], "signature": "(E, int)", "flatSignature": "(E, int)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}}, {"commentText": "Returns a typed RealmQuery, which can be used to query for specific objects of this type", "name": "where", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1466, "column": 49, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the class of the object which is to be queried for.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of the object which is to be queried for."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the class of the object which is to be queried for."}], "parameterName": "clazz", "parameterComment": "the class of the object which is to be queried for.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a typed RealmQuery, which can be used to query for specific objects of this type.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a typed RealmQuery, which can be used to query for specific objects of this type."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a typed RealmQuery, which can be used to query for specific objects of this type."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the class of the object which is to be queried for.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of the object which is to be queried for."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the class of the object which is to be queried for."}], "parameterName": "clazz", "parameterComment": "the class of the object which is to be queried for.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a typed RealmQuery, which can be used to query for specific objects of this type", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a typed RealmQuery, which can be used to query for specific objects of this type"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a typed RealmQuery, which can be used to query for specific objects of this type"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a typed RealmQuery, which can be used to query for specific objects of this type", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a typed RealmQuery, which can be used to query for specific objects of this type"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a typed RealmQuery, which can be used to query for specific objects of this type"}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.where", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<E>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<E>", "asString": "java.lang.Class<E> clazz", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the class of the object which is to be queried for.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class of the object which is to be queried for."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the class of the object which is to be queried for."}], "parameterName": "clazz", "parameterComment": "the class of the object which is to be queried for.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<E>)", "flatSignature": "(Class<E>)", "typeParameters": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "TypeVariable", "asString": "E extends io.realm.RealmModel", "typeName": "E", "qualifiedTypeName": "E", "simpleTypeName": "E", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "bounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "annotations": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": []}}, {"commentText": "Adds a change listener to the Realm.\n <p>\n The listeners will be executed when changes are committed by this or another thread.\n <p>\n Realm instances are per thread singletons and cached, so listeners should be\n removed manually even if calling {@link #close()}. Otherwise there is a\n risk of memory leaks.", "name": "addChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1487, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener."}], "parameterName": "listener", "parameterComment": "the change listener.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to register a listener from a non-Looper or {@link IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to register a listener from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to register a listener from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to register a listener from a non-Looper or {@link IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeChangeListener(RealmChangeListener)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeChangeListener(RealmChangeListener)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeAllChangeListeners()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeAllChangeListeners()"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener."}], "parameterName": "listener", "parameterComment": "the change listener.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeChangeListener(RealmChangeListener)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeChangeListener(RealmChangeListener)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeChangeListener(RealmChangeListener)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#removeAllChangeListeners()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#removeAllChangeListeners()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeAllChangeListeners()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm.\n <p>\n The listeners will be executed when changes are committed by this or another thread.\n <p>\n Realm instances are per thread singletons and cached, so listeners should be\n removed manually even if calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm.\n <p>\n The listeners will be executed when changes are committed by this or another thread.\n <p>\n Realm instances are per thread singletons and cached, so listeners should be\n removed manually even if calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#close()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "close()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Otherwise there is a\n risk of memory leaks.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Otherwise there is a\n risk of memory leaks."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a change listener to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.addChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.Realm>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.Realm>", "asString": "io.realm.RealmChangeListener<io.realm.Realm> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to register a listener from a non-Looper or {@link IntentService} thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to register a listener from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to register a listener from a non-Looper or "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IntentService", "label": "", "referencedClassName": "android.app.IntentService", "referencedClass": {"_class": "ClassDoc", "asString": "android.app.IntentService", "typeName": "IntentService", "qualifiedTypeName": "android.app.IntentService", "simpleTypeName": "IntentService", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to register a listener from a non-Looper or {@link IntentService} thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener."}], "parameterName": "listener", "parameterComment": "the change listener.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.Realm>)", "flatSignature": "(RealmChangeListener<Realm>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the specified change listener.", "name": "removeChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1499, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the specified change listener."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.removeChangeListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.RealmChangeListener<io.realm.Realm>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": []}, "name": "listener", "typeName": "io.realm.RealmChangeListener<io.realm.Realm>", "asString": "io.realm.RealmChangeListener<io.realm.Realm> listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the change listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the change listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the change listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove a listener from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove a listener from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove a listener from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the change listener to be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the change listener to be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the change listener to be removed."}], "parameterName": "listener", "parameterComment": "the change listener to be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmChangeListener<io.realm.Realm>)", "flatSignature": "(RealmChangeListener<Realm>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes all user-defined change listeners.", "name": "removeAllChangeListeners", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1509, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmChangeListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmChangeListener"}], "label": "", "referencedClassName": "io.realm.RealmChangeListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmChangeListener<T>", "typeName": "RealmChangeListener", "qualifiedTypeName": "io.realm.RealmChangeListener", "simpleTypeName": "RealmChangeListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes all user-defined change listeners."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.removeAllChangeListeners", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if you try to remove listeners from a non-Looper Thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if you try to remove listeners from a non-Looper Thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if you try to remove listeners from a non-Looper Thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Executes a given transaction on the Realm. {@link #beginTransaction()} and {@link #commitTransaction()} will be\n called automatically. If any exception is thrown during the transaction {@link #cancelTransaction()} will be\n called instead of {@link #commitTransaction()}.\n <p>\n Calling this method from the UI thread will throw a {@link RealmException}. Doing so may result in a drop of frames\n or even ANRs. We recommend calling this method from a non-UI thread or using\n {@link #executeTransactionAsync(Transaction)} instead.", "name": "executeTransaction", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1527, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction the {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "the {@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmMigrationNeededException if the latest version contains incompatible schema changes.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the latest version contains incompatible schema changes."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigrationNeededException if the latest version contains incompatible schema changes."}], "exceptionName": "RealmMigrationNeededException", "exceptionComment": "if the latest version contains incompatible schema changes.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "RealmException", "exceptionComment": "if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction the {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "the {@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the Realm. ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the Realm. "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#beginTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#beginTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#beginTransaction()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "beginTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#commitTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "commitTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n called automatically. If any exception is thrown during the transaction ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n called automatically. If any exception is thrown during the transaction "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be\n called automatically."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#cancelTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#cancelTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#cancelTransaction()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "cancelTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n called instead of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be\n called instead of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be\n called instead of"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#commitTransaction()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#commitTransaction()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "commitTransaction()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Calling this method from the UI thread will throw a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Calling this method from the UI thread will throw a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException"}], "label": "", "referencedClassName": "io.realm.exceptions.RealmException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Doing so may result in a drop of frames\n or even ANRs. We recommend calling this method from a non-UI thread or using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Doing so may result in a drop of frames\n or even ANRs. We recommend calling this method from a non-UI thread or using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instead."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instead."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Executes a given transaction on the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.executeTransaction", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmMigrationNeededException if the latest version contains incompatible schema changes.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the latest version contains incompatible schema changes."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmMigrationNeededException if the latest version contains incompatible schema changes."}], "exceptionName": "RealmMigrationNeededException", "exceptionComment": "if the latest version contains incompatible schema changes.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if called from the UI thread, unless an explicit opt-in has been declared in "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#allowWritesOnUiThread(boolean)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "allowWritesOnUiThread(boolean)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "RealmException", "exceptionComment": "if called from the UI thread, unless an explicit opt-in has been declared in {@link RealmConfiguration.Builder#allowWritesOnUiThread(boolean)}.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction the {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "the {@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction)", "flatSignature": "(Realm.Transaction)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransaction(Transaction)} but runs asynchronously on a worker thread.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1557, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransaction(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "but runs asynchronously on a worker thread."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransaction(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransaction(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " but runs asynchronously on a worker thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "but runs asynchronously on a worker thread."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the Realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the Realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction)", "flatSignature": "(Realm.Transaction)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransactionAsync(Transaction)}, but also accepts an OnSuccess callback.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1570, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess callback."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.OnSuccess", "typeName": "Realm.Transaction.OnSuccess", "qualifiedTypeName": "io.realm.Realm.Transaction.OnSuccess", "simpleTypeName": "OnSuccess", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onSuccess", "typeName": "Realm.Transaction.OnSuccess", "asString": "Realm.Transaction.OnSuccess onSuccess", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction, io.realm.Realm.Transaction.OnSuccess)", "flatSignature": "(Realm.Transaction, Realm.Transaction.OnSuccess)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransactionAsync(Transaction)}, but also accepts an OnError callback.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1588, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnError callback."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.OnError", "typeName": "Realm.Transaction.OnError", "qualifiedTypeName": "io.realm.Realm.Transaction.OnError", "simpleTypeName": "OnError", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onError", "typeName": "Realm.Transaction.OnError", "asString": "Realm.Transaction.OnError onError", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction, io.realm.Realm.Transaction.OnError)", "flatSignature": "(Realm.Transaction, Realm.Transaction.OnError)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Similar to {@link #executeTransactionAsync(Transaction)}, but also accepts an OnSuccess and OnError callbacks.", "name": "executeTransactionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1607, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link RealmAsyncTask} representing a cancellable task.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmAsyncTask", "label": "", "referencedClassName": "io.realm.RealmAsyncTask", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing a cancellable task."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Similar to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#executeTransactionAsync(Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#executeTransactionAsync(Transaction)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync(Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but also accepts an OnSuccess and OnError callbacks."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.executeTransactionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.OnSuccess", "typeName": "Realm.Transaction.OnSuccess", "qualifiedTypeName": "io.realm.Realm.Transaction.OnSuccess", "simpleTypeName": "OnSuccess", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onSuccess", "typeName": "Realm.Transaction.OnSuccess", "asString": "Realm.Transaction.OnSuccess onSuccess", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}, {"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction.OnError", "typeName": "Realm.Transaction.OnError", "qualifiedTypeName": "io.realm.Realm.Transaction.OnError", "simpleTypeName": "OnError", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "onError", "typeName": "Realm.Transaction.OnError", "asString": "Realm.Transaction.OnError onError", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "transaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or if the realm is opened from\n another thread."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the {@code transaction} is {@code null}, or if the realm is opened from\n another thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction {@link io.realm.Realm.Transaction} to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm.Transaction", "label": "", "referencedClassName": "io.realm.Realm.Transaction", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to execute."}], "parameterName": "transaction", "parameterComment": "{@link io.realm.Realm.Transaction} to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onSuccess callback invoked when the transaction succeeds.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction succeeds."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onSuccess callback invoked when the transaction succeeds."}], "parameterName": "onSuccess", "parameterComment": "callback invoked when the transaction succeeds.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "onError callback invoked when the transaction fails.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback invoked when the transaction fails."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "onError callback invoked when the transaction fails."}], "parameterName": "onError", "parameterComment": "callback invoked when the transaction fails.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction, io.realm.Realm.Transaction.OnSuccess, io.realm.Realm.Transaction.OnError)", "flatSignature": "(Realm.Transaction, Realm.Transaction.OnSuccess, Realm.Transaction.OnError)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Deletes all objects of the specified class from the Realm.", "name": "delete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1731, "column": 17, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the class which objects should be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class which objects should be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the class which objects should be removed."}], "parameterName": "clazz", "parameterComment": "the class which objects should be removed.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm is closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the class which objects should be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class which objects should be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the class which objects should be removed."}], "parameterName": "clazz", "parameterComment": "the class which objects should be removed.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes all objects of the specified class from the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.delete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "java.lang.Class<? extends io.realm.RealmModel>", "typeName": "Class", "qualifiedTypeName": "java.lang.Class", "simpleTypeName": "Class", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "WildcardType", "asString": "? extends io.realm.RealmModel", "typeName": "?", "qualifiedTypeName": "?", "simpleTypeName": "?", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "extendsBounds": [{"_class": "ClassDoc", "asString": "io.realm.RealmModel", "typeName": "RealmModel", "qualifiedTypeName": "io.realm.RealmModel", "simpleTypeName": "RealmModel", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "superBounds": []}], "superclassType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "interfaceTypes": ["java.io.Serializable", "java.lang.reflect.GenericDeclaration", "java.lang.reflect.Type", "java.lang.reflect.AnnotatedElement"]}, "name": "clazz", "typeName": "java.lang.Class<? extends io.realm.RealmModel>", "asString": "java.lang.Class<? extends io.realm.RealmModel> clazz", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm is closed or called from an incorrect thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if the Realm is closed or called from an incorrect thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if the Realm is closed or called from an incorrect thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "clazz the class which objects should be removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the class which objects should be removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "clazz the class which objects should be removed."}], "parameterName": "clazz", "parameterComment": "the class which objects should be removed.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Class<? extends io.realm.RealmModel>)", "flatSignature": "(Class<? extends RealmModel>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Manually triggers the migration associated with a given RealmConfiguration. If Realm is already at the latest\n version, nothing will happen.", "name": "migrateRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1807, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration}", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "FileNotFoundException if the Realm file doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm file doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FileNotFoundException if the Realm file doesn't exist."}], "exceptionName": "FileNotFoundException", "exceptionComment": "if the Realm file doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.FileNotFoundException", "typeName": "FileNotFoundException", "qualifiedTypeName": "java.io.FileNotFoundException", "simpleTypeName": "FileNotFoundException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration}", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers the migration associated with a given RealmConfiguration. If Realm is already at the latest\n version, nothing will happen.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers the migration associated with a given RealmConfiguration. If Realm is already at the latest\n version, nothing will happen."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers the migration associated with a given RealmConfiguration."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers the migration associated with a given RealmConfiguration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers the migration associated with a given RealmConfiguration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers the migration associated with a given RealmConfiguration."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.migrateRealm", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.io.FileNotFoundException", "typeName": "FileNotFoundException", "qualifiedTypeName": "java.io.FileNotFoundException", "simpleTypeName": "FileNotFoundException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "FileNotFoundException if the Realm file doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm file doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FileNotFoundException if the Realm file doesn't exist."}], "exceptionName": "FileNotFoundException", "exceptionComment": "if the Realm file doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.FileNotFoundException", "typeName": "FileNotFoundException", "qualifiedTypeName": "java.io.FileNotFoundException", "simpleTypeName": "FileNotFoundException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration {@link RealmConfiguration}", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "parameterName": "configuration", "parameterComment": "{@link RealmConfiguration}", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Manually triggers a migration on a RealmMigration.", "name": "migrateRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1819, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the{@link RealmConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the"}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the"}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "configuration", "parameterComment": "the{@link RealmConfiguration}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "migration the {@link RealmMigration} to run on the Realm. This will override any migration set on the\n configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to run on the Realm. This will override any migration set on the\n configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "migration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to run on the Realm."}], "parameterName": "migration", "parameterComment": "the {@link RealmMigration} to run on the Realm. This will override any migration set on the\n configuration.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "FileNotFoundException if the Realm file doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm file doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FileNotFoundException if the Realm file doesn't exist."}], "exceptionName": "FileNotFoundException", "exceptionComment": "if the Realm file doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.FileNotFoundException", "typeName": "FileNotFoundException", "qualifiedTypeName": "java.io.FileNotFoundException", "simpleTypeName": "FileNotFoundException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the{@link RealmConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the"}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the"}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "configuration", "parameterComment": "the{@link RealmConfiguration}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "migration the {@link RealmMigration} to run on the Realm. This will override any migration set on the\n configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to run on the Realm. This will override any migration set on the\n configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "migration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to run on the Realm."}], "parameterName": "migration", "parameterComment": "the {@link RealmMigration} to run on the Realm. This will override any migration set on the\n configuration.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers a migration on a RealmMigration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers a migration on a RealmMigration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers a migration on a RealmMigration."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers a migration on a RealmMigration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers a migration on a RealmMigration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Manually triggers a migration on a RealmMigration."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.migrateRealm", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.io.FileNotFoundException", "typeName": "FileNotFoundException", "qualifiedTypeName": "java.io.FileNotFoundException", "simpleTypeName": "FileNotFoundException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "migration", "typeName": "RealmMigration", "asString": "RealmMigration migration", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "FileNotFoundException if the Realm file doesn't exist.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the Realm file doesn't exist."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FileNotFoundException if the Realm file doesn't exist."}], "exceptionName": "FileNotFoundException", "exceptionComment": "if the Realm file doesn't exist.", "exceptionType": {"_class": "ClassDoc", "asString": "java.io.FileNotFoundException", "typeName": "FileNotFoundException", "qualifiedTypeName": "java.io.FileNotFoundException", "simpleTypeName": "FileNotFoundException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the{@link RealmConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the"}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the"}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "configuration", "parameterComment": "the{@link RealmConfiguration}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "migration the {@link RealmMigration} to run on the Realm. This will override any migration set on the\n configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to run on the Realm. This will override any migration set on the\n configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "migration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmMigration", "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to run on the Realm."}], "parameterName": "migration", "parameterComment": "the {@link RealmMigration} to run on the Realm. This will override any migration set on the\n configuration.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration, io.realm.RealmMigration)", "flatSignature": "(RealmConfiguration, RealmMigration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Deletes the Realm file along with the related temporary files specified by the given {@link RealmConfiguration}\n from the filesystem. Temporary file with \".lock\" extension won't be deleted.\n <p>\n All Realm instances must be closed before calling this method.\n <p>\n WARNING: For synchronized Realm, there is a chance that an internal Realm instance on the background thread is\n not closed even all the user controlled Realm instances are closed. This will result an\n {@code IllegalStateException}. See issue https://github.com/realm/realm-java/issues/5416 .", "name": "deleteRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1839, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration a {@link RealmConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "configuration", "parameterComment": "a {@link RealmConfiguration}.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code false} if the Realm file could not be deleted. Temporary files deletion failure won't impact\n the return value. All of the failing file deletions will be logged.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the Realm file could not be deleted. Temporary files deletion failure won't impact\n the return value. All of the failing file deletions will be logged."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the Realm file could not be deleted."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if there are Realm instances opened on other threads or other processes.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if there are Realm instances opened on other threads or other processes."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if there are Realm instances opened on other threads or other processes."}], "exceptionName": "IllegalStateException", "exceptionComment": "if there are Realm instances opened on other threads or other processes.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the Realm file along with the related temporary files specified by the given ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the Realm file along with the related temporary files specified by the given "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the Realm file along with the related temporary files specified by the given"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n from the filesystem. Temporary file with \".lock\" extension won't be deleted.\n <p>\n All Realm instances must be closed before calling this method.\n <p>\n WARNING: For synchronized Realm, there is a chance that an internal Realm instance on the background thread is\n not closed even all the user controlled Realm instances are closed. This will result an\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n from the filesystem. Temporary file with \".lock\" extension won't be deleted.\n <p>\n All Realm instances must be closed before calling this method.\n <p>\n WARNING: For synchronized Realm, there is a chance that an internal Realm instance on the background thread is\n not closed even all the user controlled Realm instances are closed. This will result an\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from the filesystem."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". See issue https://github.com/realm/realm-java/issues/5416 .", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". See issue https://github.com/realm/realm-java/issues/5416 ."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the Realm file along with the related temporary files specified by the given ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the Realm file along with the related temporary files specified by the given "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes the Realm file along with the related temporary files specified by the given"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n from the filesystem.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n from the filesystem."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "from the filesystem."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.deleteRealm", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if there are Realm instances opened on other threads or other processes.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if there are Realm instances opened on other threads or other processes."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if there are Realm instances opened on other threads or other processes."}], "exceptionName": "IllegalStateException", "exceptionComment": "if there are Realm instances opened on other threads or other processes.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration a {@link RealmConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "configuration", "parameterComment": "a {@link RealmConfiguration}.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Compacts a Realm file. A Realm file usually contain free/unused space.\n This method removes this free space and the file size is thereby reduced.\n Objects within the Realm files are untouched.\n <p>\n The file must be closed before this method is called, otherwise {@code false} will be returned.<br>\n The file system should have free space for at least a copy of the Realm file.<br>\n The Realm file is left untouched if any file operation fails.<br>", "name": "compactRealm", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1855, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration a {@link RealmConfiguration} pointing to a Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " pointing to a Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " pointing to a Realm file."}], "parameterName": "configuration", "parameterComment": "a {@link RealmConfiguration} pointing to a Realm file.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if successful, {@code false} if any file operation failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if successful, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if any file operation failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if successful, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if any file operation failed."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration a {@link RealmConfiguration} pointing to a Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " pointing to a Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " pointing to a Realm file."}], "parameterName": "configuration", "parameterComment": "a {@link RealmConfiguration} pointing to a Realm file.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Compacts a Realm file. A Realm file usually contain free/unused space.\n This method removes this free space and the file size is thereby reduced.\n Objects within the Realm files are untouched.\n <p>\n The file must be closed before this method is called, otherwise ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Compacts a Realm file. A Realm file usually contain free/unused space.\n This method removes this free space and the file size is thereby reduced.\n Objects within the Realm files are untouched.\n <p>\n The file must be closed before this method is called, otherwise "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Compacts a Realm file."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "false"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "false"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be returned.<br>\n The file system should have free space for at least a copy of the Realm file.<br>\n The Realm file is left untouched if any file operation fails.<br>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be returned.<br>\n The file system should have free space for at least a copy of the Realm file.<br>\n The Realm file is left untouched if any file operation fails.<br>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be returned.<br>\n The file system should have free space for at least a copy of the Realm file.<br>\n The Realm file is left untouched if any file operation fails.<br>"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Compacts a Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Compacts a Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Compacts a Realm file."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.compactRealm", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration a {@link RealmConfiguration} pointing to a Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " pointing to a Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " pointing to a Realm file."}], "parameterName": "configuration", "parameterComment": "a {@link RealmConfiguration} pointing to a Realm file.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "{@inheritDoc}", "name": "freeze", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1863, "column": 18, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a frozen copy of this Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a frozen copy of this Realm."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this method is called from inside a write transaction.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this method is called from inside a write transaction."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this method is called from inside a write transaction."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this method is called from inside a write transaction.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm. This Realm can be read and queried from any thread without throwing\n an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm. This Realm can be read and queried from any thread without throwing\n an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". A frozen Realm has its own lifecycle and can be closed by calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". A frozen Realm has its own lifecycle and can be closed by calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#close()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#close()"}], "label": "", "referencedClassName": "io.realm.BaseRealm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}, "referencedMemberName": "close()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ",\n but fully closing the Realm that spawned the frozen copy will also close the frozen Realm.\n <p>\n Frozen data can be queried as normal, but trying to mutate it in any way or attempting to register any listener will\n throw an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ",\n but fully closing the Realm that spawned the frozen copy will also close the frozen Realm.\n <p>\n Frozen data can be queried as normal, but trying to mutate it in any way or attempting to register any listener will\n throw an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ",\n but fully closing the Realm that spawned the frozen copy will also close the frozen Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of Realms with different versions alive can have a negative impact on the filesize\n of the Realm. In order to avoid such a situation, it is possible to set ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note: Keeping a large number of Realms with different versions alive can have a negative impact on the filesize\n of the Realm. In order to avoid such a situation, it is possible to set "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder#maxNumberOfActiveVersions(long)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "maxNumberOfActiveVersions(long)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a frozen snapshot of the current Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.freeze", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "io.realm.BaseRealm", "typeName": "BaseRealm", "qualifiedTypeName": "io.realm.BaseRealm", "simpleTypeName": "BaseRealm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "abstract"}}, {"commentText": "Returns the default Realm module. This module contains all Realm classes in the current project, but not those\n from library or project dependencies. Realm classes in these should be exposed using their own module.", "name": "getDefaultModule", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1880, "column": 26, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the default Realm module or {@code null} if no default module exists.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the default Realm module or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no default module exists."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the default Realm module or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no default module exists."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to create an instance of the module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to create an instance of the module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to create an instance of the module."}], "exceptionName": "RealmException", "exceptionComment": "if unable to create an instance of the module.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmConfiguration.Builder#modules(Object, Object...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration.Builder#modules(Object, Object...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration.Builder#modules(Object, Object...)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "modules(Object, Object...)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.RealmConfiguration.Builder#modules(Object, Object...)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration.Builder#modules(Object, Object...)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmConfiguration.Builder#modules(Object, Object...)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "modules(Object, Object...)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default Realm module. This module contains all Realm classes in the current project, but not those\n from library or project dependencies. Realm classes in these should be exposed using their own module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default Realm module. This module contains all Realm classes in the current project, but not those\n from library or project dependencies. Realm classes in these should be exposed using their own module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default Realm module."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default Realm module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default Realm module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the default Realm module."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getDefaultModule", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "RealmException if unable to create an instance of the module.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if unable to create an instance of the module."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmException if unable to create an instance of the module."}], "exceptionName": "RealmException", "exceptionComment": "if unable to create an instance of the module.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmException", "typeName": "RealmException", "qualifiedTypeName": "io.realm.exceptions.RealmException", "simpleTypeName": "RealmException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration. This includes both dynamic and normal Realms.", "name": "getGlobalInstanceCount", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1907, "column": 23, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} for the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} for the Realm.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "number of open Realm instances across all threads.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number of open Realm instances across all threads."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number of open Realm instances across all threads."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} for the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} for the Realm.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration. This includes both dynamic and normal Realms.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration. This includes both dynamic and normal Realms."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances across all threads in current process that are using this\n configuration."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getGlobalInstanceCount", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} for the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} for the Realm.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the current number of open Realm instances on the thread calling this method. This include both\n dynamic and normal Realms.", "name": "getLocalInstanceCount", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1925, "column": 23, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} for the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} for the Realm.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "number of open Realm instances on the caller thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number of open Realm instances on the caller thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number of open Realm instances on the caller thread."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} for the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} for the Realm.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances on the thread calling this method. This include both\n dynamic and normal Realms.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances on the thread calling this method. This include both\n dynamic and normal Realms."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances on the thread calling this method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances on the thread calling this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances on the thread calling this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current number of open Realm instances on the thread calling this method."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getLocalInstanceCount", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "configuration", "typeName": "RealmConfiguration", "asString": "RealmConfiguration configuration", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "configuration the {@link io.realm.RealmConfiguration} for the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "configuration the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for the Realm."}], "parameterName": "configuration", "parameterComment": "the {@link io.realm.RealmConfiguration} for the Realm.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.RealmConfiguration)", "flatSignature": "(RealmConfiguration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Get the application context used when initializing Realm with {@link Realm#init(Context)} or\n {@link Realm#init(Context, String)}.", "name": "getApplicationContext", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 1937, "column": 27, "file": "./realm/realm-library/src/main/java/io/realm/Realm.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the application context used when initializing Realm with {@link Realm#init(Context)} or\n {@link Realm#init(Context, String)}, or null if Realm has not been initialized yet.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the application context used when initializing Realm with "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context)", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context, String)", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context, String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or null if Realm has not been initialized yet."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the application context used when initializing Realm with "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context)", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context, String)", "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context, String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", or null if Realm has not been initialized yet."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the application context used when initializing Realm with ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the application context used when initializing Realm with "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the application context used when initializing Realm with"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context, String)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context, String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the application context used when initializing Realm with ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the application context used when initializing Realm with "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the application context used when initializing Realm with"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#init(Context, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#init(Context, String)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "init(Context, String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.Realm.getApplicationContext", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "android.content.Context", "typeName": "Context", "qualifiedTypeName": "android.content.Context", "simpleTypeName": "Context", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "constructors": [], "innerClasses": [{"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}, {"_class": "ClassDoc", "asString": "io.realm.Realm.Callback", "typeName": "Realm.Callback", "qualifiedTypeName": "io.realm.Realm.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract static"}]}