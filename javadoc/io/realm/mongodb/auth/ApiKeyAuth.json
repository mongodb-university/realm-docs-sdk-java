{"commentText": "This class exposes functionality for a user to manage API keys under their control.", "name": "ApiKeyAuth", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 44, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This class exposes functionality for a user to manage API keys under their control.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This class exposes functionality for a user to manage API keys under their control."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This class exposes functionality for a user to manage API keys under their control."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This class exposes functionality for a user to manage API keys under their control.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This class exposes functionality for a user to manage API keys under their control."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This class exposes functionality for a user to manage API keys under their control."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.annotations.Beta", "typeName": "Beta", "qualifiedTypeName": "io.realm.annotations.Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Returns the {@link User} that this instance in associated with.", "name": "getUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 69, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The {@link User} that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.getUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link App} that this instance in associated with.", "name": "getApp", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 78, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The {@link App} that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that this instance in associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that this instance in associated with."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.getApp", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Creates a user API key that can be used to authenticate as the user.\n <p>\n The value of the key must be persisted at this time as this is the only time it is visible.\n <p>\n The key is enabled when created. It can be disabled by calling {@link #disable(ObjectId)}.", "name": "create", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 93, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name the name of the key", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the key"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name the name of the key"}], "parameterName": "name", "parameterComment": "the name of the key", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to create the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to create the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to create the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to create the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the new API key for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new API key for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new API key for the user."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a user API key that can be used to authenticate as the user.\n <p>\n The value of the key must be persisted at this time as this is the only time it is visible.\n <p>\n The key is enabled when created. It can be disabled by calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a user API key that can be used to authenticate as the user.\n <p>\n The value of the key must be persisted at this time as this is the only time it is visible.\n <p>\n The key is enabled when created. It can be disabled by calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a user API key that can be used to authenticate as the user."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#disable(ObjectId)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#disable(ObjectId)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#disable(ObjectId)"}], "label": "", "referencedClassName": "io.realm.mongodb.auth.ApiKeyAuth", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "disable(ObjectId)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a user API key that can be used to authenticate as the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a user API key that can be used to authenticate as the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates a user API key that can be used to authenticate as the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.create", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to create the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to create the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to create the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to create the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name the name of the key", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the key"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name the name of the key"}], "parameterName": "name", "parameterComment": "the name of the key", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKey", "typeName": "ApiKey", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKey", "simpleTypeName": "ApiKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Asynchronously creates a user API key that can be used to authenticate as the user.\n <p>\n The value of the key must be persisted at this time as this is the only time it is visible.\n <p>\n The key is enabled when created. It can be disabled by calling {@link #disable(ObjectId)}.", "name": "createAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 119, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name the name of the key", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the key"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name the name of the key"}], "parameterName": "name", "parameterComment": "the name of the key", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when key creation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name the name of the key", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the key"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name the name of the key"}], "parameterName": "name", "parameterComment": "the name of the key", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when key creation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Asynchronously creates a user API key that can be used to authenticate as the user.\n <p>\n The value of the key must be persisted at this time as this is the only time it is visible.\n <p>\n The key is enabled when created. It can be disabled by calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Asynchronously creates a user API key that can be used to authenticate as the user.\n <p>\n The value of the key must be persisted at this time as this is the only time it is visible.\n <p>\n The key is enabled when created. It can be disabled by calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Asynchronously creates a user API key that can be used to authenticate as the user."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#disable(ObjectId)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#disable(ObjectId)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#disable(ObjectId)"}], "label": "", "referencedClassName": "io.realm.mongodb.auth.ApiKeyAuth", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "referencedMemberName": "disable(ObjectId)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Asynchronously creates a user API key that can be used to authenticate as the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Asynchronously creates a user API key that can be used to authenticate as the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Asynchronously creates a user API key that can be used to authenticate as the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.createAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "name", "typeName": "String", "asString": "String name", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKey", "typeName": "ApiKey", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKey", "simpleTypeName": "ApiKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey>", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "name the name of the key", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the name of the key"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "name the name of the key"}], "parameterName": "name", "parameterComment": "the name of the key", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when key creation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when key creation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey>)", "flatSignature": "(String, App.Callback<ApiKey>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Fetches a specific user API key associated with the user.", "name": "fetch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 135, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to fetch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to fetch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to fetch."}], "parameterName": "id", "parameterComment": "the id of the key to fetch.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to fetch the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to fetch the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to fetch the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to fetch the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to fetch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to fetch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to fetch."}], "parameterName": "id", "parameterComment": "the id of the key to fetch.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.fetch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to fetch the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to fetch the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to fetch the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to fetch the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to fetch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to fetch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to fetch."}], "parameterName": "id", "parameterComment": "the id of the key to fetch.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId)", "flatSignature": "(ObjectId)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKey", "typeName": "ApiKey", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKey", "simpleTypeName": "ApiKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Fetches a specific user API key associated with the user.", "name": "fetchAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 156, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to fetch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to fetch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to fetch."}], "parameterName": "id", "parameterComment": "the id of the key to fetch.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was fetched or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to fetch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to fetch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to fetch."}], "parameterName": "id", "parameterComment": "the id of the key to fetch.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was fetched or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches a specific user API key associated with the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.fetchAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKey", "typeName": "ApiKey", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKey", "simpleTypeName": "ApiKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey>", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to fetch.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to fetch."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to fetch."}], "parameterName": "id", "parameterComment": "the id of the key to fetch.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was fetched or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId, io.realm.mongodb.App.Callback<io.realm.mongodb.auth.ApiKey>)", "flatSignature": "(ObjectId, App.Callback<ApiKey>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Fetches all API keys associated with the user.", "name": "fetchAll", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 171, "column": 25, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to fetch the API keys.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to fetch the API keys."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to fetch the API keys."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to fetch the API keys.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.fetchAll", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to fetch the API keys.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to fetch the API keys."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to fetch the API keys."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to fetch the API keys.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.List<io.realm.mongodb.auth.ApiKey>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKey", "typeName": "ApiKey", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKey", "simpleTypeName": "ApiKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Fetches all API keys associated with the user.", "name": "fetchAll", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 196, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the keys were fetched or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the keys were fetched or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Fetches all API keys associated with the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.fetchAll", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.util.List<io.realm.mongodb.auth.ApiKey>>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ParameterizedType", "asString": "java.util.List<io.realm.mongodb.auth.ApiKey>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKey", "typeName": "ApiKey", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKey", "simpleTypeName": "ApiKey", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": ["java.util.Collection"]}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.util.List<io.realm.mongodb.auth.ApiKey>>", "asString": "io.realm.mongodb.App.Callback<java.util.List<io.realm.mongodb.auth.ApiKey>> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the keys were fetched or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the keys were fetched or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.App.Callback<java.util.List<io.realm.mongodb.auth.ApiKey>>)", "flatSignature": "(App.Callback<List<ApiKey>>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Deletes a specific API key created by the user.", "name": "delete", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 212, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to delete.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to delete."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to delete."}], "parameterName": "id", "parameterComment": "the id of the key to delete.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to delete the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to delete the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to delete the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to delete the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to delete.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to delete."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to delete."}], "parameterName": "id", "parameterComment": "the id of the key to delete.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.delete", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to delete the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to delete the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to delete the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to delete the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to delete.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to delete."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to delete."}], "parameterName": "id", "parameterComment": "the id of the key to delete.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId)", "flatSignature": "(ObjectId)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Deletes a specific API key created by the user.", "name": "deleteAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 227, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to delete.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to delete."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to delete."}], "parameterName": "id", "parameterComment": "the id of the key to delete.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the was deleted or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to delete.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to delete."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to delete."}], "parameterName": "id", "parameterComment": "the id of the key to delete.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the was deleted or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Deletes a specific API key created by the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.deleteAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to delete.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to delete."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to delete."}], "parameterName": "id", "parameterComment": "the id of the key to delete.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the was deleted or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the was deleted or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(ObjectId, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Disables a specific API key created by the user.", "name": "disable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 244, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to disable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to disable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to disable."}], "parameterName": "id", "parameterComment": "the id of the key to disable.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to disable the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to disable the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to disable the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to disable the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to disable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to disable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to disable."}], "parameterName": "id", "parameterComment": "the id of the key to disable.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.disable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to disable the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to disable the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to disable the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to disable the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to disable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to disable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to disable."}], "parameterName": "id", "parameterComment": "the id of the key to disable.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId)", "flatSignature": "(ObjectId)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Disables a specific API key created by the user.", "name": "disableAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 259, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to disable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to disable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to disable."}], "parameterName": "id", "parameterComment": "the id of the key to disable.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was disabled or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to disable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to disable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to disable."}], "parameterName": "id", "parameterComment": "the id of the key to disable.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was disabled or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Disables a specific API key created by the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.disableAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to disable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to disable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to disable."}], "parameterName": "id", "parameterComment": "the id of the key to disable.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was disabled or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was disabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(ObjectId, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Enables a specific API key created by the user.", "name": "enable", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 276, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to enable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to enable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to enable."}], "parameterName": "id", "parameterComment": "the id of the key to enable.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to enable the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to enable the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to enable the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to enable the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to enable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to enable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to enable."}], "parameterName": "id", "parameterComment": "the id of the key to enable.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.enable", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to enable the API key.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to enable the API key."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to enable the API key."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to enable the API key.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to enable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to enable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to enable."}], "parameterName": "id", "parameterComment": "the id of the key to enable.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId)", "flatSignature": "(ObjectId)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Enables a specific API key created by the user.", "name": "enableAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 291, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to enable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to enable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to enable."}], "parameterName": "id", "parameterComment": "the id of the key to enable.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was enabled or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to enable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to enable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to enable."}], "parameterName": "id", "parameterComment": "the id of the key to enable.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was enabled or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Enables a specific API key created by the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.enableAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "ObjectId", "typeName": "ObjectId", "qualifiedTypeName": "ObjectId", "simpleTypeName": "ObjectId", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "id", "typeName": "ObjectId", "asString": "ObjectId id", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "id the id of the key to enable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the key to enable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "id the id of the key to enable."}], "parameterName": "id", "parameterComment": "the id of the key to enable.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback used when the key was enabled or the call failed."}], "parameterName": "callback", "parameterComment": "callback used when the key was enabled or the call failed. The callback\n will always happen on the same thread as this method was called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(ObjectId, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(ObjectId, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "", "name": "equals", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 310, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.equals", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "o", "typeName": "Object", "asString": "Object o", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "hashCode", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 320, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.hashCode", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "toString", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 325, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.toString", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "call", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 331, "column": 29, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth.call", "modifierSpecifier": 1028, "modifiers": "protected abstract", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "functionType", "typeName": "int", "asString": "int functionType", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "arg", "typeName": "String", "asString": "String arg", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}, {"type": {"_class": "ClassDoc", "asString": "io.realm.internal.objectstore.OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "typeName": "OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "qualifiedTypeName": "io.realm.internal.objectstore.OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "simpleTypeName": "NetworkTransportJNIResultCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "callback", "typeName": "OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "asString": "OsJavaNetworkTransport.NetworkTransportJNIResultCallback callback", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(int, java.lang.String, io.realm.internal.objectstore.OsJavaNetworkTransport.NetworkTransportJNIResultCallback)", "flatSignature": "(int, String, OsJavaNetworkTransport.NetworkTransportJNIResultCallback)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}], "constructors": [{"commentText": "Create an instance of this class for a specific user.", "name": "ApiKeyAuth", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 60, "column": 15, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/ApiKeyAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user user that is controlling the API keys.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user that is controlling the API keys."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user user that is controlling the API keys."}], "parameterName": "user", "parameterComment": "user that is controlling the API keys.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Create an instance of this class for a specific user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Create an instance of this class for a specific user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Create an instance of this class for a specific user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Create an instance of this class for a specific user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Create an instance of this class for a specific user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Create an instance of this class for a specific user."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.ApiKeyAuth", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user user that is controlling the API keys.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user that is controlling the API keys."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user user that is controlling the API keys."}], "parameterName": "user", "parameterComment": "user that is controlling the API keys.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.User)", "flatSignature": "(User)", "typeParameters": []}], "innerClasses": []}