{"commentText": "Class encapsulating functionality provided when {@link User}'s are logged in through the\n {@link Credentials.Provider#EMAIL_PASSWORD} provider.", "name": "EmailPasswordAuth", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 41, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class encapsulating functionality provided when ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class encapsulating functionality provided when "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class encapsulating functionality provided when"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "'s are logged in through the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "'s are logged in through the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "'s are logged in through the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "Credentials.Provider", "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "provider."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class encapsulating functionality provided when ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class encapsulating functionality provided when "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Class encapsulating functionality provided when"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "'s are logged in through the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "'s are logged in through the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "'s are logged in through the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "Credentials.Provider", "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "provider."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth", "modifierSpecifier": 1025, "modifiers": "public abstract", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.annotations.Beta", "typeName": "Beta", "qualifiedTypeName": "io.realm.annotations.Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [{"commentText": "", "name": "app", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 51, "column": 25, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.app", "modifierSpecifier": 20, "modifiers": "protected final", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": true, "isSynthetic": false, "type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}], "enumConstants": [], "methods": [{"commentText": "Registers a new user with the given email and password.", "name": "registerUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 70, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email to register with. This will be the username used during log in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email to register with. This will be the username used during log in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email to register with."}], "parameterName": "email", "parameterComment": "the email to register with. This will be the username used during log in.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "password the password to associate with the email. The password must be between\n 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the password to associate with the email. The password must be between\n 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "password the password to associate with the email."}], "parameterName": "password", "parameterComment": "the password to associate with the email. The password must be between\n 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to register the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to register the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to register the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to register the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email to register with. This will be the username used during log in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email to register with. This will be the username used during log in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email to register with."}], "parameterName": "email", "parameterComment": "the email to register with. This will be the username used during log in.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "password the password to associate with the email. The password must be between\n 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the password to associate with the email. The password must be between\n 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "password the password to associate with the email."}], "parameterName": "password", "parameterComment": "the password to associate with the email. The password must be between\n 6 and 128 characters long.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.registerUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "password", "typeName": "String", "asString": "String password", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to register the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to register the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to register the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to register the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email to register with. This will be the username used during log in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email to register with. This will be the username used during log in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email to register with."}], "parameterName": "email", "parameterComment": "the email to register with. This will be the username used during log in.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "password the password to associate with the email. The password must be between\n 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the password to associate with the email. The password must be between\n 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "password the password to associate with the email."}], "parameterName": "password", "parameterComment": "the password to associate with the email. The password must be between\n 6 and 128 characters long.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String)", "flatSignature": "(String, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Registers a new user with the given email and password.", "name": "registerUserAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 90, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email to register with. This will be the username used during log in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email to register with. This will be the username used during log in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email to register with."}], "parameterName": "email", "parameterComment": "the email to register with. This will be the username used during log in.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "password the password to associated with the email. The password must be between\n 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the password to associated with the email. The password must be between\n 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "password the password to associated with the email."}], "parameterName": "password", "parameterComment": "the password to associated with the email. The password must be between\n 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when registration has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to register the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to register the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to register the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to register the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email to register with. This will be the username used during log in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email to register with. This will be the username used during log in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email to register with."}], "parameterName": "email", "parameterComment": "the email to register with. This will be the username used during log in.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "password the password to associated with the email. The password must be between\n 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the password to associated with the email. The password must be between\n 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "password the password to associated with the email."}], "parameterName": "password", "parameterComment": "the password to associated with the email. The password must be between\n 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when registration has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Registers a new user with the given email and password."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.registerUserAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "password", "typeName": "String", "asString": "String password", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to register the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to register the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to register the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to register the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email to register with. This will be the username used during log in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email to register with. This will be the username used during log in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email to register with."}], "parameterName": "email", "parameterComment": "the email to register with. This will be the username used during log in.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "password the password to associated with the email. The password must be between\n 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the password to associated with the email. The password must be between\n 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "password the password to associated with the email."}], "parameterName": "password", "parameterComment": "the password to associated with the email. The password must be between\n 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when registration has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when registration has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, String, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Confirms a user with the given token and token id.", "name": "confirmUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 108, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the confirmation token."}], "parameterName": "token", "parameterComment": "the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the confirmation token."}], "parameterName": "tokenId", "parameterComment": "the id of the confirmation token.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the confirmation token."}], "parameterName": "token", "parameterComment": "the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the confirmation token."}], "parameterName": "tokenId", "parameterComment": "the id of the confirmation token.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.confirmUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "token", "typeName": "String", "asString": "String token", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "tokenId", "typeName": "String", "asString": "String tokenId", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the confirmation token."}], "parameterName": "token", "parameterComment": "the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the confirmation token."}], "parameterName": "tokenId", "parameterComment": "the id of the confirmation token.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String)", "flatSignature": "(String, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Confirms a user with the given token and token id.", "name": "confirmUserAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 125, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the confirmation token."}], "parameterName": "token", "parameterComment": "the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the confirmation token."}], "parameterName": "tokenId", "parameterComment": "the id of the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when confirmation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the confirmation token."}], "parameterName": "token", "parameterComment": "the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the confirmation token."}], "parameterName": "tokenId", "parameterComment": "the id of the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when confirmation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Confirms a user with the given token and token id."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.confirmUserAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "token", "typeName": "String", "asString": "String token", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "tokenId", "typeName": "String", "asString": "String tokenId", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the confirmation token."}], "parameterName": "token", "parameterComment": "the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the confirmation token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the confirmation token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the confirmation token."}], "parameterName": "tokenId", "parameterComment": "the id of the confirmation token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when confirmation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when confirmation has completed or failed. The callback will always\n happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, String, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Resend the confirmation for a user to the given email.", "name": "resendConfirmationEmail", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 142, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.resendConfirmationEmail", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Resend the confirmation for a user to the given email.", "name": "resendConfirmationEmailAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 157, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when resending the email has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when resending the email has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resend the confirmation for a user to the given email."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.resendConfirmationEmailAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when resending the email has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when resending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Retries the custom confirmation on a user for a given email.", "name": "retryCustomConfirmation", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 174, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.retryCustomConfirmation", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Retries the custom confirmation on a user for a given email.", "name": "retryCustomConfirmationAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 189, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when retrying the custom confirmation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when retrying the custom confirmation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Retries the custom confirmation on a user for a given email."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.retryCustomConfirmationAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when retrying the custom confirmation has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when retrying the custom confirmation has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sends a user a password reset email for the given email.", "name": "sendResetPasswordEmail", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 206, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.sendResetPasswordEmail", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Sends a user a password reset email for the given email.", "name": "sendResetPasswordEmailAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 221, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when sending the email has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when sending the email has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sends a user a password reset email for the given email."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.sendResetPasswordEmailAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when sending the email has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when sending the email has completed or failed. The callback will\n always happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Call the reset password function configured to the\n {@link Credentials.Provider#EMAIL_PASSWORD} provider.", "name": "callResetPasswordFunction", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 242, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password of the user."}], "parameterName": "newPassword", "parameterComment": "the new password of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "toString()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args any additional arguments provided to the reset function."}], "parameterName": "args", "parameterComment": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password of the user."}], "parameterName": "newPassword", "parameterComment": "the new password of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "toString()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args any additional arguments provided to the reset function."}], "parameterName": "args", "parameterComment": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "Credentials.Provider", "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "provider."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "Credentials.Provider", "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "provider."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.callResetPasswordFunction", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "newPassword", "typeName": "String", "asString": "String newPassword", "annotations": []}, {"type": {"_class": "Type", "asString": "java.lang.Object[]", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "args", "typeName": "java.lang.Object[]", "asString": "java.lang.Object[] args", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password of the user."}], "parameterName": "newPassword", "parameterComment": "the new password of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "toString()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args any additional arguments provided to the reset function."}], "parameterName": "args", "parameterComment": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String, java.lang.Object...)", "flatSignature": "(String, String, Object...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Call the reset password function configured to the\n {@link Credentials.Provider#EMAIL_PASSWORD} provider.", "name": "callResetPasswordFunctionAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 263, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password of the user."}], "parameterName": "newPassword", "parameterComment": "the new password of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "toString()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args any additional arguments provided to the reset function."}], "parameterName": "args", "parameterComment": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when the reset has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password of the user."}], "parameterName": "newPassword", "parameterComment": "the new password of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "toString()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args any additional arguments provided to the reset function."}], "parameterName": "args", "parameterComment": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when the reset has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "Credentials.Provider", "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "provider."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Call the reset password function configured to the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "Credentials.Provider", "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "provider."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.callResetPasswordFunctionAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "email", "typeName": "String", "asString": "String email", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "newPassword", "typeName": "String", "asString": "String newPassword", "annotations": []}, {"type": {"_class": "Type", "asString": "java.lang.Object[]", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "args", "typeName": "java.lang.Object[]", "asString": "java.lang.Object[] args", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "email the email of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the email of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "email the email of the user."}], "parameterName": "email", "parameterComment": "the email of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password of the user."}], "parameterName": "newPassword", "parameterComment": "the new password of the user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "args any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "toString()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "args any additional arguments provided to the reset function."}], "parameterName": "args", "parameterComment": "any additional arguments provided to the reset function. All arguments must\n be able to be converted to JSON compatible values using {@code toString()}.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when the reset has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String, java.lang.Object[], io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, String, Object[], App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Resets the password of a user with the given token, token id, and new password.", "name": "resetPassword", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 283, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the reset password token."}], "parameterName": "token", "parameterComment": "the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the reset password token."}], "parameterName": "tokenId", "parameterComment": "the id of the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The password\n must be between 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "newPassword", "parameterComment": "the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the reset password token."}], "parameterName": "token", "parameterComment": "the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the reset password token."}], "parameterName": "tokenId", "parameterComment": "the id of the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The password\n must be between 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "newPassword", "parameterComment": "the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the password of a user with the given token, token id, and new password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the password of a user with the given token, token id, and new password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the password of a user with the given token, token id, and new password."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the password of a user with the given token, token id, and new password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the password of a user with the given token, token id, and new password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the password of a user with the given token, token id, and new password."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.resetPassword", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "token", "typeName": "String", "asString": "String token", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "tokenId", "typeName": "String", "asString": "String tokenId", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "newPassword", "typeName": "String", "asString": "String newPassword", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the server failed to confirm the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the server failed to confirm the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the server failed to confirm the user."}], "exceptionName": "AppException", "exceptionComment": "if the server failed to confirm the user.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the reset password token."}], "parameterName": "token", "parameterComment": "the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the reset password token."}], "parameterName": "tokenId", "parameterComment": "the id of the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The password\n must be between 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "newPassword", "parameterComment": "the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String, java.lang.String)", "flatSignature": "(String, String, String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Resets the newPassword of a user with the given token, token id, and new password.", "name": "resetPasswordAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 305, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the reset password token."}], "parameterName": "token", "parameterComment": "the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the reset password token."}], "parameterName": "tokenId", "parameterComment": "the id of the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The password\n must be between 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "newPassword", "parameterComment": "the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when the reset has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the reset password token."}], "parameterName": "token", "parameterComment": "the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the reset password token."}], "parameterName": "tokenId", "parameterComment": "the id of the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The password\n must be between 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "newPassword", "parameterComment": "the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when the reset has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the newPassword of a user with the given token, token id, and new password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the newPassword of a user with the given token, token id, and new password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the newPassword of a user with the given token, token id, and new password."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the newPassword of a user with the given token, token id, and new password.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the newPassword of a user with the given token, token id, and new password."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Resets the newPassword of a user with the given token, token id, and new password."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.resetPasswordAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "token", "typeName": "String", "asString": "String token", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "tokenId", "typeName": "String", "asString": "String tokenId", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "newPassword", "typeName": "String", "asString": "String newPassword", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<java.lang.Void>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.Void", "typeName": "Void", "qualifiedTypeName": "java.lang.Void", "simpleTypeName": "Void", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<java.lang.Void>", "asString": "io.realm.mongodb.App.Callback<java.lang.Void> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "token the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "token the reset password token."}], "parameterName": "token", "parameterComment": "the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "tokenId the id of the reset password token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the id of the reset password token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "tokenId the id of the reset password token."}], "parameterName": "tokenId", "parameterComment": "the id of the reset password token.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "newPassword the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". The password\n must be between 6 and 128 characters long."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "newPassword the new password for the user identified by the "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "token"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "parameterName": "newPassword", "parameterComment": "the new password for the user identified by the {@code token}. The password\n must be between 6 and 128 characters long.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when the reset has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when the reset has completed or failed. The callback will always\n happen on the same thread as this this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String, java.lang.String, java.lang.String, io.realm.mongodb.App.Callback<java.lang.Void>)", "flatSignature": "(String, String, String, App.Callback<Void>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "", "name": "call", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 316, "column": 29, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth.call", "modifierSpecifier": 1028, "modifiers": "protected abstract", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "functionType", "typeName": "int", "asString": "int functionType", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.internal.objectstore.OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "typeName": "OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "qualifiedTypeName": "io.realm.internal.objectstore.OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "simpleTypeName": "NetworkTransportJNIResultCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "callback", "typeName": "OsJavaNetworkTransport.NetworkTransportJNIResultCallback", "asString": "OsJavaNetworkTransport.NetworkTransportJNIResultCallback callback", "annotations": []}, {"type": {"_class": "Type", "asString": "java.lang.String[]", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "args", "typeName": "java.lang.String[]", "asString": "java.lang.String[] args", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(int, io.realm.internal.objectstore.OsJavaNetworkTransport.NetworkTransportJNIResultCallback, java.lang.String...)", "flatSignature": "(int, OsJavaNetworkTransport.NetworkTransportJNIResultCallback, String...)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}], "constructors": [{"commentText": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application.", "name": "EmailPasswordAuth", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 57, "column": 15, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/auth/EmailPasswordAuth.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an authentication provider exposing functionality to using an email and password\n for login into a Realm Application."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.auth"}, "qualifiedName": "io.realm.mongodb.auth.EmailPasswordAuth", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "app", "typeName": "App", "asString": "App app", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.mongodb.App)", "flatSignature": "(App)", "typeParameters": []}], "innerClasses": []}