{"commentText": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server.\n <p>\n A Session is created by opening a Realm instance using a {@link SyncConfiguration}. Once a session has been created,\n it will continue to exist until the app is closed or all threads using this {@link SyncConfiguration} closes their respective {@link Realm}s.\n <p>\n A session is controlled by Realm, but can provide additional information in case of errors.\n These errors are passed along in the {@link SyncSession.ErrorHandler}.\n <p>\n When creating a session, Realm will establish a connection to the server. This connection is\n controlled by Realm and might be shared between multiple sessions. It is possible to get insight\n into the connection using {@link #addConnectionChangeListener(ConnectionListener)} and {@link #isConnected()}.\n <p>\n The session itself has a different lifecycle than the underlying connection. The state of the session\n can be found using {@link #getState()}.\n <p>\n The {@link SyncSession} object is thread safe.", "name": "SyncSession", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 64, "column": 8, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server.\n <p>\n A Session is created by opening a Realm instance using a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server.\n <p>\n A Session is created by opening a Realm instance using a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Once a session has been created,\n it will continue to exist until the app is closed or all threads using this ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Once a session has been created,\n it will continue to exist until the app is closed or all threads using this "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " closes their respective ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " closes their respective "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "closes their respective"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.\n <p>\n A session is controlled by Realm, but can provide additional information in case of errors.\n These errors are passed along in the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.\n <p>\n A session is controlled by Realm, but can provide additional information in case of errors.\n These errors are passed along in the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncSession.ErrorHandler", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.ErrorHandler"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.ErrorHandler"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "typeName": "SyncSession.ErrorHandler", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "simpleTypeName": "ErrorHandler", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n When creating a session, Realm will establish a connection to the server. This connection is\n controlled by Realm and might be shared between multiple sessions. It is possible to get insight\n into the connection using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n When creating a session, Realm will establish a connection to the server. This connection is\n controlled by Realm and might be shared between multiple sessions. It is possible to get insight\n into the connection using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#addConnectionChangeListener(ConnectionListener)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addConnectionChangeListener(ConnectionListener)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#addConnectionChangeListener(ConnectionListener)"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "addConnectionChangeListener(ConnectionListener)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#isConnected()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isConnected()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#isConnected()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "isConnected()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n The session itself has a different lifecycle than the underlying connection. The state of the session\n can be found using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n The session itself has a different lifecycle than the underlying connection. The state of the session\n can be found using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getState()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getState()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncSession", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " object is thread safe.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " object is thread safe."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "object is thread safe."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A session controls how data is synchronized between a single Realm on the device and the server\n Realm on the Realm Object Server."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.internal.Keep", "typeName": "Keep", "qualifiedTypeName": "io.realm.internal.Keep", "simpleTypeName": "Keep", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "io.realm.annotations.Beta", "typeName": "Beta", "qualifiedTypeName": "io.realm.annotations.Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Returns the {@link SyncConfiguration} that is responsible for controlling the session.", "name": "getConfiguration", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 171, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "SyncConfiguration that defines and controls this session.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration that defines and controls this session."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration that defines and controls this session."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is responsible for controlling the session.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is responsible for controlling the session."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that is responsible for controlling the session."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is responsible for controlling the session.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is responsible for controlling the session."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that is responsible for controlling the session."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.getConfiguration", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link User} defined by the {@link SyncConfiguration} that is used to connect to\n MongoDB Realm.", "name": "getUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 181, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@link User} used to authenticate the session on MongoDB Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to authenticate the session on MongoDB Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to authenticate the session on MongoDB Realm."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined by the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined by the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "defined by the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is used to connect to\n MongoDB Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is used to connect to\n MongoDB Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that is used to connect to\n MongoDB Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined by the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " defined by the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "defined by the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is used to connect to\n MongoDB Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " that is used to connect to\n MongoDB Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "that is used to connect to\n MongoDB Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.getUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link URI} describing the remote Realm which this session connects to and synchronizes changes with.", "name": "getServerUrl", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 190, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@link URI} describing the remote Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "URI", "label": "", "referencedClassName": "java.net.URI", "referencedClass": {"_class": "ClassDoc", "asString": "java.net.URI", "typeName": "URI", "qualifiedTypeName": "java.net.URI", "simpleTypeName": "URI", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " describing the remote Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "URI", "label": "", "referencedClassName": "java.net.URI", "referencedClass": {"_class": "ClassDoc", "asString": "java.net.URI", "typeName": "URI", "qualifiedTypeName": "java.net.URI", "simpleTypeName": "URI", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " describing the remote Realm."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "URI", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "URI"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "URI"}], "label": "", "referencedClassName": "java.net.URI", "referencedClass": {"_class": "ClassDoc", "asString": "java.net.URI", "typeName": "URI", "qualifiedTypeName": "java.net.URI", "simpleTypeName": "URI", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " describing the remote Realm which this session connects to and synchronizes changes with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " describing the remote Realm which this session connects to and synchronizes changes with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "describing the remote Realm which this session connects to and synchronizes changes with."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "URI", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "URI"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "URI"}], "label": "", "referencedClassName": "java.net.URI", "referencedClass": {"_class": "ClassDoc", "asString": "java.net.URI", "typeName": "URI", "qualifiedTypeName": "java.net.URI", "simpleTypeName": "URI", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " describing the remote Realm which this session connects to and synchronizes changes with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " describing the remote Realm which this session connects to and synchronizes changes with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "describing the remote Realm which this session connects to and synchronizes changes with."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.getServerUrl", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.net.URI", "typeName": "URI", "qualifiedTypeName": "java.net.URI", "simpleTypeName": "URI", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Get the current session's state, as defined in {@link SyncSession.State}.\n <p>\n Note that the state may change after this method returns.", "name": "getState", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 225, "column": 18, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the state of the session.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the state of the session."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the state of the session."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "SyncSession.State", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "SyncSession.State", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current session's state, as defined in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current session's state, as defined in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current session's state, as defined in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncSession.State", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note that the state may change after this method returns.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Note that the state may change after this method returns."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current session's state, as defined in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current session's state, as defined in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current session's state, as defined in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "SyncSession.State", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "SyncSession.State"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.getState", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Get the current state of the connection used by the session as defined in {@link ConnectionState}.", "name": "getConnectionState", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 240, "column": 28, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the state of connection used by the session.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the state of connection used by the session."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the state of connection used by the session."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current state of the connection used by the session as defined in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current state of the connection used by the session as defined in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current state of the connection used by the session as defined in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current state of the connection used by the session as defined in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current state of the connection used by the session as defined in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Get the current state of the connection used by the session as defined in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.getConnectionState", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Checks if the session is connected to the server and can synchronize data.\n\n This is a best guess effort. To conserve battery the underlying implementation uses heartbeats\n to  detect if the connection is still available. So if no data is actively being synced\n and some time has elapsed since the last heartbeat, the connection could have been dropped but\n this method will still return {@code true}.", "name": "isConnected", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 260, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the session is connected and ready to synchronize data, {@code false}\n if not or if it is in the process of connecting.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the session is connected and ready to synchronize data, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n if not or if it is in the process of connecting."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the session is connected and ready to synchronize data, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n if not or if it is in the process of connecting."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the session is connected to the server and can synchronize data.\n\n This is a best guess effort. To conserve battery the underlying implementation uses heartbeats\n to  detect if the connection is still available. So if no data is actively being synced\n and some time has elapsed since the last heartbeat, the connection could have been dropped but\n this method will still return ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the session is connected to the server and can synchronize data.\n\n This is a best guess effort. To conserve battery the underlying implementation uses heartbeats\n to  detect if the connection is still available. So if no data is actively being synced\n and some time has elapsed since the last heartbeat, the connection could have been dropped but\n this method will still return "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the session is connected to the server and can synchronize data."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "true"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the session is connected to the server and can synchronize data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the session is connected to the server and can synchronize data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Checks if the session is connected to the server and can synchronize data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.isConnected", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server.\n <p>\n The {@link ProgressListener} will be triggered immediately when registered, and periodically\n afterwards.", "name": "addDownloadProgressListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 312, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "mode type of mode used. See {@link ProgressMode} for more information.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of mode used. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressMode", "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressMode", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for more information."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mode type of mode used."}], "parameterName": "mode", "parameterComment": "type of mode used. See {@link ProgressMode} for more information.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "mode type of mode used. See {@link ProgressMode} for more information.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of mode used. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressMode", "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressMode", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for more information."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mode type of mode used."}], "parameterName": "mode", "parameterComment": "type of mode used. See {@link ProgressMode} for more information.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server.\n <p>\n The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server.\n <p>\n The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ProgressListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ProgressListener"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressListener", "typeName": "ProgressListener", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressListener", "simpleTypeName": "ProgressListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be triggered immediately when registered, and periodically\n afterwards.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be triggered immediately when registered, and periodically\n afterwards."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be triggered immediately when registered, and periodically\n afterwards."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be downloaded from the Realm Object\n Server."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.addDownloadProgressListener", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "mode", "typeName": "ProgressMode", "asString": "ProgressMode mode", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressListener", "typeName": "ProgressListener", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressListener", "simpleTypeName": "ProgressListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "ProgressListener", "asString": "ProgressListener listener", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "mode type of mode used. See {@link ProgressMode} for more information.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of mode used. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressMode", "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressMode", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for more information."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mode type of mode used."}], "parameterName": "mode", "parameterComment": "type of mode used. See {@link ProgressMode} for more information.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.ProgressMode, io.realm.mongodb.sync.ProgressListener)", "flatSignature": "(ProgressMode, ProgressListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server.\n <p>\n The {@link ProgressListener} will be triggered immediately when registered, and periodically\n afterwards.", "name": "addUploadProgressListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 326, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "mode type of mode used. See {@link ProgressMode} for more information.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of mode used. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressMode", "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressMode", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for more information."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mode type of mode used."}], "parameterName": "mode", "parameterComment": "type of mode used. See {@link ProgressMode} for more information.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "mode type of mode used. See {@link ProgressMode} for more information.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of mode used. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressMode", "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressMode", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for more information."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mode type of mode used."}], "parameterName": "mode", "parameterComment": "type of mode used. See {@link ProgressMode} for more information.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server.\n <p>\n The ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server.\n <p>\n The "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ProgressListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ProgressListener"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressListener", "typeName": "ProgressListener", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressListener", "simpleTypeName": "ProgressListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be triggered immediately when registered, and periodically\n afterwards.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will be triggered immediately when registered, and periodically\n afterwards."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be triggered immediately when registered, and periodically\n afterwards."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a progress listener tracking changes that need to be uploaded from the device to the\n Realm Object Server."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.addUploadProgressListener", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "mode", "typeName": "ProgressMode", "asString": "ProgressMode mode", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressListener", "typeName": "ProgressListener", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressListener", "simpleTypeName": "ProgressListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "ProgressListener", "asString": "ProgressListener listener", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "mode type of mode used. See {@link ProgressMode} for more information.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "type of mode used. See "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ProgressMode", "label": "", "referencedClassName": "io.realm.mongodb.sync.ProgressMode", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressMode", "typeName": "ProgressMode", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressMode", "simpleTypeName": "ProgressMode", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for more information."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "mode type of mode used."}], "parameterName": "mode", "parameterComment": "type of mode used. See {@link ProgressMode} for more information.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.ProgressMode, io.realm.mongodb.sync.ProgressListener)", "flatSignature": "(ProgressMode, ProgressListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes a progress listener. If the listener wasn't registered, this method will do nothing.", "name": "removeProgressListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 335, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove."}], "parameterName": "listener", "parameterComment": "listener to remove.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove."}], "parameterName": "listener", "parameterComment": "listener to remove.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a progress listener. If the listener wasn't registered, this method will do nothing.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a progress listener. If the listener wasn't registered, this method will do nothing."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a progress listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a progress listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a progress listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a progress listener."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.removeProgressListener", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ProgressListener", "typeName": "ProgressListener", "qualifiedTypeName": "io.realm.mongodb.sync.ProgressListener", "simpleTypeName": "ProgressListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "ProgressListener", "asString": "ProgressListener listener", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove."}], "parameterName": "listener", "parameterComment": "listener to remove.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.ProgressListener)", "flatSignature": "(ProgressListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Adds a listener tracking changes to the connection backing this session. See {@link ConnectionState}\n for further details.", "name": "addConnectionChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 390, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a listener tracking changes to the connection backing this session. See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a listener tracking changes to the connection backing this session. See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a listener tracking changes to the connection backing this session."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ConnectionState", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionState"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionState", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionState", "typeName": "ConnectionState", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionState", "simpleTypeName": "ConnectionState", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n for further details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n for further details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for further details."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a listener tracking changes to the connection backing this session.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a listener tracking changes to the connection backing this session."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Adds a listener tracking changes to the connection backing this session."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.addConnectionChangeListener", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionListener", "typeName": "ConnectionListener", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionListener", "simpleTypeName": "ConnectionListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "ConnectionListener", "asString": "ConnectionListener listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener the listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener the listener to register."}], "parameterName": "listener", "parameterComment": "the listener to register.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.ConnectionListener)", "flatSignature": "(ConnectionListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes a previously registered {@link ConnectionListener}.", "name": "removeConnectionChangeListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 404, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove"}], "parameterName": "listener", "parameterComment": "listener to remove", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove"}], "parameterName": "listener", "parameterComment": "listener to remove", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a previously registered ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a previously registered "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a previously registered"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ConnectionListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionListener"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionListener", "typeName": "ConnectionListener", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionListener", "simpleTypeName": "ConnectionListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a previously registered ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a previously registered "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a previously registered"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "ConnectionListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "ConnectionListener"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.ConnectionListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionListener", "typeName": "ConnectionListener", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionListener", "simpleTypeName": "ConnectionListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.removeConnectionChangeListener", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.ConnectionListener", "typeName": "ConnectionListener", "qualifiedTypeName": "io.realm.mongodb.sync.ConnectionListener", "simpleTypeName": "ConnectionListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "ConnectionListener", "asString": "ConnectionListener listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the listener is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the listener is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the listener is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove"}], "parameterName": "listener", "parameterComment": "listener to remove", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.sync.ConnectionListener)", "flatSignature": "(ConnectionListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm.\n This will involve network access, so calling this method should only be done from a non-UI thread.\n <p>\n If the device is offline, this method might never return.\n <p>\n This method cannot be called before the session has been started.", "name": "downloadAllServerChanges", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 450, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the thread was interrupted while downloading was in progress.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the thread was interrupted while downloading was in progress."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the thread was interrupted while downloading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the thread was interrupted while downloading was in progress.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm.\n This will involve network access, so calling this method should only be done from a non-UI thread.\n <p>\n If the device is offline, this method might never return.\n <p>\n This method cannot be called before the session has been started.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm.\n This will involve network access, so calling this method should only be done from a non-UI thread.\n <p>\n If the device is offline, this method might never return.\n <p>\n This method cannot be called before the session has been started."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.downloadAllServerChanges", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the thread was interrupted while downloading was in progress.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the thread was interrupted while downloading was in progress."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the thread was interrupted while downloading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the thread was interrupted while downloading was in progress.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit. This will involve network access, so calling this method should only be done\n from a non-UI thread.\n <p>\n This method cannot be called before the Realm has been opened.", "name": "downloadAllServerChanges", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 477, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress.\n The download will continue in the background even after this exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress.\n The download will continue in the background even after this exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress.\n The download will continue in the background even after this exception is thrown.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the data was downloaded before the timeout. {@code false} if the operation timed out or otherwise failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the data was downloaded before the timeout. "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the operation timed out or otherwise failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the data was downloaded before the timeout."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit. This will involve network access, so calling this method should only be done\n from a non-UI thread.\n <p>\n This method cannot be called before the Realm has been opened.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit. This will involve network access, so calling this method should only be done\n from a non-UI thread.\n <p>\n This method cannot be called before the Realm has been opened."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known remote changes have been downloaded and applied to the Realm\n or the specified timeout is hit."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.downloadAllServerChanges", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "timeout", "typeName": "long", "asString": "long timeout", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.util.concurrent.TimeUnit", "typeName": "TimeUnit", "qualifiedTypeName": "java.util.concurrent.TimeUnit", "simpleTypeName": "TimeUnit", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "unit", "typeName": "TimeUnit", "asString": "TimeUnit unit", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress.\n The download will continue in the background even after this exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress.\n The download will continue in the background even after this exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the download took longer than the specified timeout or the thread was interrupted while downloading was in progress.\n The download will continue in the background even after this exception is thrown.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "(long, java.util.concurrent.TimeUnit)", "flatSignature": "(long, TimeUnit)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Calling this method will block until all known local changes have been uploaded to the server.\n This will involve network access, so calling this method should only be done from a non-UI thread.\n <p>\n If the device is offline, this method might never return.\n <p>\n This method cannot be called before the Realm has been opened.", "name": "uploadAllLocalChanges", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 503, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the thread was interrupted while downloading was in progress.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the thread was interrupted while downloading was in progress."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the thread was interrupted while downloading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the thread was interrupted while downloading was in progress.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server.\n This will involve network access, so calling this method should only be done from a non-UI thread.\n <p>\n If the device is offline, this method might never return.\n <p>\n This method cannot be called before the Realm has been opened.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server.\n This will involve network access, so calling this method should only be done from a non-UI thread.\n <p>\n If the device is offline, this method might never return.\n <p>\n This method cannot be called before the Realm has been opened."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.uploadAllLocalChanges", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the thread was interrupted while downloading was in progress.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the thread was interrupted while downloading was in progress."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the thread was interrupted while downloading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the thread was interrupted while downloading was in progress.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit. This will involve network access, so calling this method should only be done from a non-UI\n thread.\n <p>\n This method cannot be called before the Realm has been opened.", "name": "uploadAllLocalChanges", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 530, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress.\n The upload will continue in the background even after this exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress.\n The upload will continue in the background even after this exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress.\n The upload will continue in the background even after this exception is thrown.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if the data was uploaded before the timeout. {@code false} if the operation timed out or otherwise failed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the data was uploaded before the timeout. "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the operation timed out or otherwise failed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if the data was uploaded before the timeout."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit. This will involve network access, so calling this method should only be done from a non-UI\n thread.\n <p>\n This method cannot be called before the Realm has been opened.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit. This will involve network access, so calling this method should only be done from a non-UI\n thread.\n <p>\n This method cannot be called before the Realm has been opened."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Calling this method will block until all known local changes have been uploaded to the server or the specified\n timeout is hit."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.uploadAllLocalChanges", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "timeout", "typeName": "long", "asString": "long timeout", "annotations": []}, {"type": {"_class": "ClassDoc", "asString": "java.util.concurrent.TimeUnit", "typeName": "TimeUnit", "qualifiedTypeName": "java.util.concurrent.TimeUnit", "simpleTypeName": "TimeUnit", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "unit", "typeName": "TimeUnit", "asString": "TimeUnit unit", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called on the Android main thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called on the Android main thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called on the Android main thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called on the Android main thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "InterruptedException if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress.\n The upload will continue in the background even after this exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress.\n The upload will continue in the background even after this exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "InterruptedException if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress."}], "exceptionName": "InterruptedException", "exceptionComment": "if the upload took longer than the specified timeout or the thread was interrupted while uploading was in progress.\n The upload will continue in the background even after this exception is thrown.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.InterruptedException", "typeName": "InterruptedException", "qualifiedTypeName": "java.lang.InterruptedException", "simpleTypeName": "InterruptedException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "timeout"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is less than or equal to "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "0"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "unit"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code timeout} is less than or equal to {@code 0} or {@code unit} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "(long, java.util.concurrent.TimeUnit)", "flatSignature": "(long, TimeUnit)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Attempts to start the session and enable synchronization with the Realm Object Server.\n <p>\n This happens automatically when opening the Realm instance, so doing it manually should only\n be needed if the session was stopped using {@link #stop()}.\n <p>\n If the session was already started, calling this method will do nothing.\n <p>\n A session is considered started if {@link #getState()} returns {@link State#ACTIVE}.\n If the session is {@link State#DYING}, the session\n will be moved back to {@link State#ACTIVE}.", "name": "start", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 560, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#getState()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getState()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#stop()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#stop()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#stop()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "stop()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#getState()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getState()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#stop()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#stop()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#stop()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "stop()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Attempts to start the session and enable synchronization with the Realm Object Server.\n <p>\n This happens automatically when opening the Realm instance, so doing it manually should only\n be needed if the session was stopped using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Attempts to start the session and enable synchronization with the Realm Object Server.\n <p>\n This happens automatically when opening the Realm instance, so doing it manually should only\n be needed if the session was stopped using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Attempts to start the session and enable synchronization with the Realm Object Server."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#stop()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#stop()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#stop()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "stop()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n If the session was already started, calling this method will do nothing.\n <p>\n A session is considered started if ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n If the session was already started, calling this method will do nothing.\n <p>\n A session is considered started if "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#getState()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#getState()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getState()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " returns ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " returns "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "returns"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State#ACTIVE", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State#ACTIVE"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State#ACTIVE"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "ACTIVE"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n If the session is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n If the session is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State#DYING", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State#DYING"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State#DYING"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "DYING"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the session\n will be moved back to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the session\n will be moved back to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", the session\n will be moved back to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State#ACTIVE", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State#ACTIVE"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State#ACTIVE"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "ACTIVE"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Attempts to start the session and enable synchronization with the Realm Object Server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Attempts to start the session and enable synchronization with the Realm Object Server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Attempts to start the session and enable synchronization with the Realm Object Server."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.start", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it.\n <p>\n Synchronization can be re-enabled by calling {@link #start()} again.\n <p>\n If the session is already stopped, calling this method will do nothing.", "name": "stop", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 572, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it.\n <p>\n Synchronization can be re-enabled by calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it.\n <p>\n Synchronization can be re-enabled by calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#start()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#start()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#start()"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncSession", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "start()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " again.\n <p>\n If the session is already stopped, calling this method will do nothing.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " again.\n <p>\n If the session is already stopped, calling this method will do nothing."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "again."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Stops any synchronization with the Realm Object Server until the Realm is re-opened again\n after fully closing it."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession", "typeName": "SyncSession", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession", "simpleTypeName": "SyncSession", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb.sync"}, "qualifiedName": "io.realm.mongodb.sync.SyncSession.stop", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}], "constructors": [], "innerClasses": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.State", "typeName": "SyncSession.State", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "typeName": "SyncSession.ErrorHandler", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.ErrorHandler", "simpleTypeName": "ErrorHandler", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}, {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncSession.ClientResetHandler", "typeName": "SyncSession.ClientResetHandler", "qualifiedTypeName": "io.realm.mongodb.sync.SyncSession.ClientResetHandler", "simpleTypeName": "ClientResetHandler", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}]}