{"commentText": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality.\n <p>\n The user is used to configure Synchronized Realms and gives access to calling Realm App <i>Functions</i>\n through {@link Functions} and accessing remote Realm App <i>Mongo Databases</i> through a\n {@link MongoClient}.", "name": "User", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 57, "column": 8, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "App#login(Credentials)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#login(Credentials)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#login(Credentials)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "login(Credentials)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.mongodb.sync.SyncConfiguration.Builder#Builder(User, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration.Builder#Builder(User, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration.Builder#Builder(User, String)"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "Builder(User, String)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "App#login(Credentials)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#login(Credentials)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#login(Credentials)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "login(Credentials)"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.mongodb.sync.SyncConfiguration.Builder#Builder(User, String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration.Builder#Builder(User, String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration.Builder#Builder(User, String)"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration.Builder", "typeName": "SyncConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "Builder(User, String)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality.\n <p>\n The user is used to configure Synchronized Realms and gives access to calling Realm App <i>Functions</i>\n through ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality.\n <p>\n The user is used to configure Synchronized Realms and gives access to calling Realm App <i>Functions</i>\n through "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " and accessing remote Realm App <i>Mongo Databases</i> through a\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " and accessing remote Realm App <i>Mongo Databases</i> through a\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and accessing remote Realm App <i>Mongo Databases</i> through a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "MongoClient", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoClient"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoClient"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoClient", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoClient", "typeName": "MongoClient", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoClient", "simpleTypeName": "MongoClient", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "A <i>user</i> holds the user's meta data and tokens for accessing Realm App functionality."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.annotations.Beta", "typeName": "Beta", "qualifiedTypeName": "io.realm.annotations.Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Returns the server id of the user.", "name": "getId", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 129, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the server id of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the server id of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the server id of the user."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the server id of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the server id of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the server id of the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the server id of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the server id of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the server id of the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getId", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the profile for this user.", "name": "getProfile", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 138, "column": 24, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the profile for this user", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the profile for this user"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the profile for this user"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the profile for this user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the profile for this user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the profile for this user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the profile for this user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the profile for this user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the profile for this user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getProfile", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.UserProfile", "typeName": "UserProfile", "qualifiedTypeName": "io.realm.mongodb.UserProfile", "simpleTypeName": "UserProfile", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a new list of the user's identities.", "name": "getIdentities", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 148, "column": 31, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the list of identities.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the list of identities."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the list of identities."}]}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "UserIdentity", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UserIdentity"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UserIdentity"}], "label": "", "referencedClassName": "io.realm.mongodb.UserIdentity", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.UserIdentity", "typeName": "UserIdentity", "qualifiedTypeName": "io.realm.mongodb.UserIdentity", "simpleTypeName": "UserIdentity", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "UserIdentity", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UserIdentity"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "UserIdentity"}], "label": "", "referencedClassName": "io.realm.mongodb.UserIdentity", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.UserIdentity", "typeName": "UserIdentity", "qualifiedTypeName": "io.realm.mongodb.UserIdentity", "simpleTypeName": "UserIdentity", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a new list of the user's identities.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a new list of the user's identities."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a new list of the user's identities."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a new list of the user's identities.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a new list of the user's identities."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a new list of the user's identities."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getIdentities", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.List<io.realm.mongodb.UserIdentity>", "typeName": "List", "qualifiedTypeName": "java.util.List", "simpleTypeName": "List", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.UserIdentity", "typeName": "UserIdentity", "qualifiedTypeName": "io.realm.mongodb.UserIdentity", "simpleTypeName": "UserIdentity", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": ["java.util.Collection"]}}, {"commentText": "Returns the provider type used to log the user", "name": "getProviderType", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 163, "column": 33, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the provider type of the user", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the provider type of the user"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the provider type of the user"}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the provider type used to log the user", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the provider type used to log the user"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the provider type used to log the user"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the provider type used to log the user", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the provider type used to log the user"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the provider type used to log the user"}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getProviderType", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials.Provider", "typeName": "Credentials.Provider", "qualifiedTypeName": "io.realm.mongodb.Credentials.Provider", "simpleTypeName": "Provider", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the current access token for the user.", "name": "getAccessToken", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 172, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the current access token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the current access token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the current access token."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current access token for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current access token for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current access token for the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current access token for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current access token for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current access token for the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getAccessToken", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the current refresh token for the user.", "name": "getRefreshToken", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 181, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the current refresh token.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the current refresh token."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the current refresh token."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current refresh token for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current refresh token for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current refresh token for the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current refresh token for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current refresh token for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current refresh token for the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getRefreshToken", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a unique identifier for the device the user logged in to.", "name": "getDeviceId", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 190, "column": 19, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a unique device identifier for the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a unique device identifier for the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a unique device identifier for the user."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a unique identifier for the device the user logged in to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a unique identifier for the device the user logged in to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a unique identifier for the device the user logged in to."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a unique identifier for the device the user logged in to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a unique identifier for the device the user logged in to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a unique identifier for the device the user logged in to."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getDeviceId", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link App} this user is associated with.", "name": "getApp", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 199, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link App} this user is associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " this user is associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " this user is associated with."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " this user is associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " this user is associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this user is associated with."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " this user is associated with.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " this user is associated with."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "this user is associated with."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getApp", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link State} the user is in.", "name": "getState", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 208, "column": 18, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link State} of the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State", "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " of the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State", "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " of the user."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " the user is in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " the user is in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the user is in."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "State", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "State"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " the user is in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " the user is in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the user is in."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getState", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Return the custom user data associated with the user in the Realm App.\n <p>\n The data is only refreshed when the user's access token is refreshed or when explicitly\n calling {@link #refreshCustomData()}.", "name": "getCustomData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 226, "column": 21, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The custom user data associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The custom user data associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The custom user data associated with the user."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Return the custom user data associated with the user in the Realm App.\n <p>\n The data is only refreshed when the user's access token is refreshed or when explicitly\n calling ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Return the custom user data associated with the user in the Realm App.\n <p>\n The data is only refreshed when the user's access token is refreshed or when explicitly\n calling "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Return the custom user data associated with the user in the Realm App."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#refreshCustomData()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refreshCustomData()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refreshCustomData()"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "refreshCustomData()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Return the custom user data associated with the user in the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Return the custom user data associated with the user in the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Return the custom user data associated with the user in the Realm App."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getCustomData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "Document", "typeName": "Document", "qualifiedTypeName": "Document", "simpleTypeName": "Document", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Re-fetch custom user data from the Realm App.", "name": "refreshCustomData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 236, "column": 21, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "The updated custom user data associated with the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The updated custom user data associated with the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The updated custom user data associated with the user."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.refreshCustomData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the request failed in some way.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the request failed in some way."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the request failed in some way."}], "exceptionName": "AppException", "exceptionComment": "if the request failed in some way.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "Document", "typeName": "Document", "qualifiedTypeName": "Document", "simpleTypeName": "Document", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Re-fetch custom user data from the Realm App asynchronously.\n <p>\n This is the asynchronous variant of {@link #refreshCustomData()}.", "name": "refreshCustomData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 250, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "The task representing the ongoing operation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The task representing the ongoing operation."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App asynchronously.\n <p>\n This is the asynchronous variant of ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App asynchronously.\n <p>\n This is the asynchronous variant of "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App asynchronously."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#refreshCustomData()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refreshCustomData()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#refreshCustomData()"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "refreshCustomData()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Re-fetch custom user data from the Realm App asynchronously."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.refreshCustomData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<Document>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "Document", "typeName": "Document", "qualifiedTypeName": "Document", "simpleTypeName": "Document", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<Document>", "asString": "io.realm.mongodb.App.Callback<Document> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback The callback that will receive the result or any errors from the request.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The callback that will receive the result or any errors from the request."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback The callback that will receive the result or any errors from the request."}], "parameterName": "callback", "parameterComment": "The callback that will receive the result or any errors from the request.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.App.Callback<Document>)", "flatSignature": "(App.Callback<Document>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns true if the user is currently logged in.\n Returns whether or not this user is still logged into the MongoDB Realm App.", "name": "isLoggedIn", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 267, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "{@code true} if still logged in, {@code false} if not.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if still logged in, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if not."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ""}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "true"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if still logged in, "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "false"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if not."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns true if the user is currently logged in.\n Returns whether or not this user is still logged into the MongoDB Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns true if the user is currently logged in.\n Returns whether or not this user is still logged into the MongoDB Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns true if the user is currently logged in."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns true if the user is currently logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns true if the user is currently logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns true if the user is currently logged in."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.isLoggedIn", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Links the current user with a new user identity represented by the given credentials.\n <p>\n Linking a user with more credentials, mean the user can login either of these credentials.\n It also makes it possible to \"upgrade\" an anonymous user by linking it with e.g.\n Email/Password credentials.\n <pre>\n {@code\n // Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));\n }\n </pre>\n <p>\n Note: It is not possible to link two existing users of MongoDB Realm. The provided credentials\n must not have been used by another user.", "name": "linkCredentials", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 294, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials to link with the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials to link with the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials to link with the current user."}], "parameterName": "credentials", "parameterComment": "the credentials to link with the current user.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "the {@link User} the credentials were linked to.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " the credentials were linked to."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " the credentials were linked to."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if no user is currently logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no user is currently logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if no user is currently logged in."}], "exceptionName": "IllegalStateException", "exceptionComment": "if no user is currently logged in.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials.\n <p>\n Linking a user with more credentials, mean the user can login either of these credentials.\n It also makes it possible to \"upgrade\" an anonymous user by linking it with e.g.\n Email/Password credentials.\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials.\n <p>\n Linking a user with more credentials, mean the user can login either of these credentials.\n It also makes it possible to \"upgrade\" an anonymous user by linking it with e.g.\n Email/Password credentials.\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n // Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n // Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "// Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Note: It is not possible to link two existing users of MongoDB Realm. The provided credentials\n must not have been used by another user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Note: It is not possible to link two existing users of MongoDB Realm. The provided credentials\n must not have been used by another user."}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.linkCredentials", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials", "typeName": "Credentials", "qualifiedTypeName": "io.realm.mongodb.Credentials", "simpleTypeName": "Credentials", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "credentials", "typeName": "Credentials", "asString": "Credentials credentials", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if no user is currently logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no user is currently logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if no user is currently logged in."}], "exceptionName": "IllegalStateException", "exceptionComment": "if no user is currently logged in.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials to link with the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials to link with the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials to link with the current user."}], "parameterName": "credentials", "parameterComment": "the credentials to link with the current user.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.Credentials)", "flatSignature": "(Credentials)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Links the current user with a new user identity represented by the given credentials.\n <p>\n Linking a user with more credentials, mean the user can login either of these credentials.\n It also makes it possible to \"upgrade\" an anonymous user by linking it with e.g.\n Email/Password credentials.\n <pre>\n {@code\n // Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));\n }\n </pre>\n <p>\n Note: It is not possible to link two existing users of MongoDB Realm. The provided credentials\n must not have been used by another user.", "name": "linkCredentialsAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 333, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials to link with the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials to link with the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials to link with the current user."}], "parameterName": "credentials", "parameterComment": "the credentials to link with the current user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback    callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback    callback when user identities has been linked or it failed."}], "parameterName": "callback", "parameterComment": "callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials to link with the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials to link with the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials to link with the current user."}], "parameterName": "credentials", "parameterComment": "the credentials to link with the current user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback    callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback    callback when user identities has been linked or it failed."}], "parameterName": "callback", "parameterComment": "callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials.\n <p>\n Linking a user with more credentials, mean the user can login either of these credentials.\n It also makes it possible to \"upgrade\" an anonymous user by linking it with e.g.\n Email/Password credentials.\n <pre>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials.\n <p>\n Linking a user with more credentials, mean the user can login either of these credentials.\n It also makes it possible to \"upgrade\" an anonymous user by linking it with e.g.\n Email/Password credentials.\n <pre>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "\n // Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n // Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "// Example\n App app = new App(\"app-id\")\n User user = app.login(Credentials.anonymous());\n user.linkCredentials(Credentials.emailPassword(\"email\", \"password\"));"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Note: It is not possible to link two existing users of MongoDB Realm. The provided credentials\n must not have been used by another user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n </pre>\n <p>\n Note: It is not possible to link two existing users of MongoDB Realm. The provided credentials\n must not have been used by another user."}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Links the current user with a new user identity represented by the given credentials."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.linkCredentialsAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials", "typeName": "Credentials", "qualifiedTypeName": "io.realm.mongodb.Credentials", "simpleTypeName": "Credentials", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "credentials", "typeName": "Credentials", "asString": "Credentials credentials", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.User>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<io.realm.mongodb.User>", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.User> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials to link with the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials to link with the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials to link with the current user."}], "parameterName": "credentials", "parameterComment": "the credentials to link with the current user.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback    callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback    callback when user identities has been linked or it failed."}], "parameterName": "callback", "parameterComment": "callback when user identities has been linked or it failed. The callback will\n                    always happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.Credentials, io.realm.mongodb.App.Callback<io.realm.mongodb.User>)", "flatSignature": "(Credentials, App.Callback<User>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Log the user out of the Realm App. This will unregister them on the device, stop any\n synchronization to and from the users' Realms, and those Realms will be deleted next time\n the app restarts. Therefor logging out should not be done until all changes to Realms have\n been uploaded to the server.\n <p>\n Once the Realm App has confirmed the logout any registered {@link AuthenticationListener}\n will be notified and user credentials will be deleted from this device.\n <p>\n Logging out anonymous users will remove them immediately instead of marking them as\n {@link User.State#LOGGED_OUT}. All other users will be marked as {@link User.State#LOGGED_OUT}\n and will still be returned by {@link App#allUsers()}. They can be removed completely by calling\n {@link App#removeUser(User} ()}.", "name": "logOut", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 387, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if an error occurred while trying to log the user out of the Realm\n                      App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error occurred while trying to log the user out of the Realm\n                      App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if an error occurred while trying to log the user out of the Realm\n                      App."}], "exceptionName": "AppException", "exceptionComment": "if an error occurred while trying to log the user out of the Realm\n                      App.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App. This will unregister them on the device, stop any\n synchronization to and from the users' Realms, and those Realms will be deleted next time\n the app restarts. Therefor logging out should not be done until all changes to Realms have\n been uploaded to the server.\n <p>\n Once the Realm App has confirmed the logout any registered ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App. This will unregister them on the device, stop any\n synchronization to and from the users' Realms, and those Realms will be deleted next time\n the app restarts. Therefor logging out should not be done until all changes to Realms have\n been uploaded to the server.\n <p>\n Once the Realm App has confirmed the logout any registered "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AuthenticationListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AuthenticationListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AuthenticationListener"}], "label": "", "referencedClassName": "io.realm.mongodb.AuthenticationListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AuthenticationListener", "typeName": "AuthenticationListener", "qualifiedTypeName": "io.realm.mongodb.AuthenticationListener", "simpleTypeName": "AuthenticationListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be notified and user credentials will be deleted from this device.\n <p>\n Logging out anonymous users will remove them immediately instead of marking them as\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be notified and user credentials will be deleted from this device.\n <p>\n Logging out anonymous users will remove them immediately instead of marking them as\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be notified and user credentials will be deleted from this device."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_OUT", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_OUT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". All other users will be marked as ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". All other users will be marked as "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_OUT", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_OUT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n and will still be returned by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n and will still be returned by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and will still be returned by"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App#allUsers()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#allUsers()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#allUsers()"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "allUsers()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". They can be removed completely by calling\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". They can be removed completely by calling\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App#removeUser(User", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#removeUser(User"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#removeUser(User"}], "label": ""}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " ()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " ()}."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "()}."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.logOut", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if an error occurred while trying to log the user out of the Realm\n                      App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if an error occurred while trying to log the user out of the Realm\n                      App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if an error occurred while trying to log the user out of the Realm\n                      App."}], "exceptionName": "AppException", "exceptionComment": "if an error occurred while trying to log the user out of the Realm\n                      App.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Log the user out of the Realm App asynchronously. This will unregister them on the device, stop any\n synchronization to and from the users' Realms, and those Realms will be deleted next time\n the app restarts. Therefor logging out should not be done until all changes to Realms have\n been uploaded to the server.\n <p>\n Once the Realm App has confirmed the logout any registered {@link AuthenticationListener}\n will be notified and user credentials will be deleted from this device.\n <p>\n Logging out anonymous users will remove them immediately instead of marking them as\n {@link User.State#LOGGED_OUT}. All other users will be marked as {@link User.State#LOGGED_OUT}\n and will still be returned by {@link App#allUsers()}. They can be removed completely by calling\n {@link App#removeUser(User)} ()}.", "name": "logOutAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 415, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when logging out has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when logging out has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App asynchronously. This will unregister them on the device, stop any\n synchronization to and from the users' Realms, and those Realms will be deleted next time\n the app restarts. Therefor logging out should not be done until all changes to Realms have\n been uploaded to the server.\n <p>\n Once the Realm App has confirmed the logout any registered ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App asynchronously. This will unregister them on the device, stop any\n synchronization to and from the users' Realms, and those Realms will be deleted next time\n the app restarts. Therefor logging out should not be done until all changes to Realms have\n been uploaded to the server.\n <p>\n Once the Realm App has confirmed the logout any registered "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App asynchronously."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AuthenticationListener", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AuthenticationListener"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AuthenticationListener"}], "label": "", "referencedClassName": "io.realm.mongodb.AuthenticationListener", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AuthenticationListener", "typeName": "AuthenticationListener", "qualifiedTypeName": "io.realm.mongodb.AuthenticationListener", "simpleTypeName": "AuthenticationListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be notified and user credentials will be deleted from this device.\n <p>\n Logging out anonymous users will remove them immediately instead of marking them as\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be notified and user credentials will be deleted from this device.\n <p>\n Logging out anonymous users will remove them immediately instead of marking them as\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be notified and user credentials will be deleted from this device."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_OUT", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_OUT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". All other users will be marked as ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". All other users will be marked as "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_OUT", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_OUT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n and will still be returned by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n and will still be returned by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "and will still be returned by"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App#allUsers()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#allUsers()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#allUsers()"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "allUsers()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". They can be removed completely by calling\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". They can be removed completely by calling\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "App#removeUser(User)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#removeUser(User)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "App#removeUser(User)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "removeUser(User)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " ()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " ()}."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "()}."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App asynchronously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App asynchronously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Log the user out of the Realm App asynchronously."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.logOutAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.User>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<io.realm.mongodb.User>", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.User> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if called from a non-looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from a non-looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if called from a non-looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if called from a non-looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback callback when logging out has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when logging out has completed or failed. The callback will always\n                 happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.App.Callback<io.realm.mongodb.User>)", "flatSignature": "(App.Callback<User>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a wrapper for managing API keys controlled by the current user.", "name": "getApiKeys", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 432, "column": 36, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "wrapper for managing API keys controlled by the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "wrapper for managing API keys controlled by the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "wrapper for managing API keys controlled by the current user."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if no user is currently logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no user is currently logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if no user is currently logged in."}], "exceptionName": "IllegalStateException", "exceptionComment": "if no user is currently logged in.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for managing API keys controlled by the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for managing API keys controlled by the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for managing API keys controlled by the current user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for managing API keys controlled by the current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for managing API keys controlled by the current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for managing API keys controlled by the current user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getApiKeys", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if no user is currently logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if no user is currently logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if no user is currently logged in."}], "exceptionName": "IllegalStateException", "exceptionComment": "if no user is currently logged in.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions.\n <p>\n This will use the associated app's default codec registry to encode and decode arguments and\n results.", "name": "getFunctions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 448, "column": 35, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions.\n <p>\n This will use the associated app's default codec registry to encode and decode arguments and\n results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions.\n <p>\n This will use the associated app's default codec registry to encode and decode arguments and\n results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking MongoDB Realm Functions."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getFunctions", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results.", "name": "getFunctions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 464, "column": 22, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App."}], "parameterName": "codecRegistry", "parameterComment": "The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App.", "isTypeParameter": false}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App."}], "parameterName": "codecRegistry", "parameterComment": "The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>functions</i> manager for invoking Realm Functions with custom\n codec registry for encoding and decoding arguments and results."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getFunctions", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "codecRegistry The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "codecRegistry The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App."}], "parameterName": "codecRegistry", "parameterComment": "The codec registry to use for encoding and decoding arguments and results\n                      towards the remote Realm App.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(CodecRegistry)", "flatSignature": "(CodecRegistry)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the {@link Push} instance for managing push notification registrations.", "name": "getPush", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 473, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "serviceName the service name used to connect to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the service name used to connect to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "serviceName the service name used to connect to the server."}], "parameterName": "serviceName", "parameterComment": "the service name used to connect to the server.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "serviceName the service name used to connect to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the service name used to connect to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "serviceName the service name used to connect to the server."}], "parameterName": "serviceName", "parameterComment": "the service name used to connect to the server.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Push", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Push"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Push"}], "label": "", "referencedClassName": "io.realm.mongodb.push.Push", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.push.Push", "typeName": "Push", "qualifiedTypeName": "io.realm.mongodb.push.Push", "simpleTypeName": "Push", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for managing push notification registrations.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for managing push notification registrations."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance for managing push notification registrations."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Push", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Push"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Push"}], "label": "", "referencedClassName": "io.realm.mongodb.push.Push", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.push.Push", "typeName": "Push", "qualifiedTypeName": "io.realm.mongodb.push.Push", "simpleTypeName": "Push", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for managing push notification registrations.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for managing push notification registrations."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance for managing push notification registrations."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getPush", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "serviceName", "typeName": "String", "asString": "String serviceName", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "serviceName the service name used to connect to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the service name used to connect to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "serviceName the service name used to connect to the server."}], "parameterName": "serviceName", "parameterComment": "the service name used to connect to the server.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.push.Push", "typeName": "Push", "qualifiedTypeName": "io.realm.mongodb.push.Push", "simpleTypeName": "Push", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a {@link MongoClient} instance for accessing documents in the database.", "name": "getMongoClient", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 486, "column": 37, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "serviceName the service name used to connect to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the service name used to connect to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "serviceName the service name used to connect to the server."}], "parameterName": "serviceName", "parameterComment": "the service name used to connect to the server.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "serviceName the service name used to connect to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the service name used to connect to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "serviceName the service name used to connect to the server."}], "parameterName": "serviceName", "parameterComment": "the service name used to connect to the server.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "MongoClient", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoClient"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoClient"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoClient", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoClient", "typeName": "MongoClient", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoClient", "simpleTypeName": "MongoClient", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for accessing documents in the database.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for accessing documents in the database."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance for accessing documents in the database."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "MongoClient", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoClient"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "MongoClient"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoClient", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoClient", "typeName": "MongoClient", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoClient", "simpleTypeName": "MongoClient", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for accessing documents in the database.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " instance for accessing documents in the database."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "instance for accessing documents in the database."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.getMongoClient", "modifierSpecifier": 33, "modifiers": "public synchronized", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": true, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "serviceName", "typeName": "String", "asString": "String serviceName", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "serviceName the service name used to connect to the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the service name used to connect to the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "serviceName the service name used to connect to the server."}], "parameterName": "serviceName", "parameterComment": "the service name used to connect to the server.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoClient", "typeName": "MongoClient", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoClient", "simpleTypeName": "MongoClient", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Two Users are considered equal if they have the same user identity and are associated\n with the same app.", "name": "equals", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 502, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Users are considered equal if they have the same user identity and are associated\n with the same app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Users are considered equal if they have the same user identity and are associated\n with the same app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Users are considered equal if they have the same user identity and are associated\n with the same app."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Users are considered equal if they have the same user identity and are associated\n with the same app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Users are considered equal if they have the same user identity and are associated\n with the same app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Users are considered equal if they have the same user identity and are associated\n with the same app."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.equals", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "SuppressFBWarnings", "typeName": "SuppressFBWarnings", "qualifiedTypeName": "SuppressFBWarnings", "simpleTypeName": "SuppressFBWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}, {"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "o", "typeName": "Object", "asString": "Object o", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "hashCode", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 513, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/User.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.User.hashCode", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "constructors": [], "innerClasses": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}]}