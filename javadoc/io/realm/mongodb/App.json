{"commentText": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>.\n <p>\n The <i>App</i> can be used to:\n <ul>\n   <li>Register uses and perform various user-related operations through authentication providers\n   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n   <li>Invoke Realm App functions with {@link Functions}</li>\n   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n </ul>\n <p>\n To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n <i>App</i> as shown below:\n <p>\n <pre>\n    class MyApplication extends Application {\n\n         App APP; // The App instance should be a global singleton\n\n         \\@Override\n         public void onCreate() {\n             super.onCreate();\n\n             Realm.init(this);\n\n             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n                     .appName(BuildConfig.VERSION_NAME)\n                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n                     .build();\n\n             APP = new App(appConfiguration);\n         }\n\n     }\n </pre>\n <p>\n After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n call remote Realm Functions and access remote data through Mongo Collections. The examples below\n show the synchronized APIs which cannot be used from the main thread. For the equivalent\n asynchronous counterparts. The example project in please see\n https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n <p>\n To register a new user and/or login with an existing user do as shown below:\n <pre>\n     // Register new user\n     APP.getEmailPassword().registerUser(username, password);\n\n     // Login with existing user\n     User user = APP.login(Credentials.emailPassword(username, password))\n </pre>\n <p>\n With an authorized user you can synchronize data between the local device and the remote Realm\n App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as indicated below:\n <pre>\n     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"&lt;partition value&gt;\")\n              .build();\n\n     Realm instance = Realm.getInstance(syncConfiguration);\n     SyncSession session = APP.getSync().getSession(syncConfiguration);\n\n     instance.executeTransaction(realm -&gt; {\n         realm.insert(...);\n     });\n     session.uploadAllLocalChanges();\n     instance.close();\n </pre>\n <p>\n You can call remote Realm functions as shown below:\n <pre>\n     Functions functions = user.getFunctions();\n     Integer sum = functions.callFunction(\"sum\", Arrays.asList(1, 2, 3, 4), Integer.class);\n </pre>\n <p>\n And access collections from the remote Realm App as shown here:\n <pre>\n     MongoClient client = user.getMongoClient(SERVICE_NAME)\n     MongoDatabase database = client.getDatabase(DATABASE_NAME)\n     MongoCollection&lt;DocumentT&gt; collection = database.getCollection(COLLECTION_NAME);\n     Long count = collection.count().get()\n </pre>\n <p>", "name": "App", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 142, "column": 8, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration.Builder", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration.Builder", "typeName": "AppConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "EmailPasswordAuth", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "EmailPasswordAuth"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "EmailPasswordAuth"}], "label": "", "referencedClassName": "io.realm.mongodb.auth.EmailPasswordAuth", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.mongodb.sync.SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getFunctions()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getMongoClient(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getMongoClient(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getMongoClient(String)"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getMongoClient(String)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration.Builder", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration.Builder", "typeName": "AppConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "EmailPasswordAuth", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "EmailPasswordAuth"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "EmailPasswordAuth"}], "label": "", "referencedClassName": "io.realm.mongodb.auth.EmailPasswordAuth", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "io.realm.mongodb.sync.SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getFunctions()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getFunctions()"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getFunctions()"}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "User#getMongoClient(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getMongoClient(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User#getMongoClient(String)"}], "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getMongoClient(String)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>.\n <p>\n The <i>App</i> can be used to:\n <ul>\n   <li>Register uses and perform various user-related operations through authentication providers\n   (", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>.\n <p>\n The <i>App</i> can be used to:\n <ul>\n   <li>Register uses and perform various user-related operations through authentication providers\n   ("}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.mongodb.auth.ApiKeyAuth", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.auth.ApiKeyAuth"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.auth.ApiKeyAuth"}], "label": "", "referencedClassName": "io.realm.mongodb.auth.ApiKeyAuth", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.ApiKeyAuth", "typeName": "ApiKeyAuth", "qualifiedTypeName": "io.realm.mongodb.auth.ApiKeyAuth", "simpleTypeName": "ApiKeyAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ","}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "EmailPasswordAuthImpl", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "EmailPasswordAuthImpl"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "EmailPasswordAuthImpl"}], "label": "", "referencedClassName": "io.realm.mongodb.EmailPasswordAuthImpl", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.EmailPasswordAuthImpl", "typeName": "EmailPasswordAuthImpl", "qualifiedTypeName": "io.realm.mongodb.EmailPasswordAuthImpl", "simpleTypeName": "EmailPasswordAuthImpl", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": ""}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ")</li>\n   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n   <li>Invoke Realm App functions with ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ")</li>\n   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n   <li>Invoke Realm App functions with "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ")</li>\n   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n   <li>Invoke Realm App functions with"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "</li>\n   <li>Access remote data from MongoDB databases with a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "</li>\n   <li>Access remote data from MongoDB databases with a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "</li>\n   <li>Access remote data from MongoDB databases with a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.mongodb.mongo.MongoClient", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.mongo.MongoClient"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.mongo.MongoClient"}], "label": "", "referencedClassName": "io.realm.mongodb.mongo.MongoClient", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.mongo.MongoClient", "typeName": "MongoClient", "qualifiedTypeName": "io.realm.mongodb.mongo.MongoClient", "simpleTypeName": "MongoClient", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "</li>\n </ul>\n <p>\n To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n <i>App</i> as shown below:\n <p>\n <pre>\n    class MyApplication extends Application {\n\n         App APP; // The App instance should be a global singleton\n\n         \\@Override\n         public void onCreate() {\n             super.onCreate();\n\n             Realm.init(this);\n\n             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n                     .appName(BuildConfig.VERSION_NAME)\n                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n                     .build();\n\n             APP = new App(appConfiguration);\n         }\n\n     }\n </pre>\n <p>\n After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n call remote Realm Functions and access remote data through Mongo Collections. The examples below\n show the synchronized APIs which cannot be used from the main thread. For the equivalent\n asynchronous counterparts. The example project in please see\n https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n <p>\n To register a new user and/or login with an existing user do as shown below:\n <pre>\n     // Register new user\n     APP.getEmailPassword().registerUser(username, password);\n\n     // Login with existing user\n     User user = APP.login(Credentials.emailPassword(username, password))\n </pre>\n <p>\n With an authorized user you can synchronize data between the local device and the remote Realm\n App by opening a Realm with a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "</li>\n </ul>\n <p>\n To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n <i>App</i> as shown below:\n <p>\n <pre>\n    class MyApplication extends Application {\n\n         App APP; // The App instance should be a global singleton\n\n         \\@Override\n         public void onCreate() {\n             super.onCreate();\n\n             Realm.init(this);\n\n             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n                     .appName(BuildConfig.VERSION_NAME)\n                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n                     .build();\n\n             APP = new App(appConfiguration);\n         }\n\n     }\n </pre>\n <p>\n After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n call remote Realm Functions and access remote data through Mongo Collections. The examples below\n show the synchronized APIs which cannot be used from the main thread. For the equivalent\n asynchronous counterparts. The example project in please see\n https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n <p>\n To register a new user and/or login with an existing user do as shown below:\n <pre>\n     // Register new user\n     APP.getEmailPassword().registerUser(username, password);\n\n     // Login with existing user\n     User user = APP.login(Credentials.emailPassword(username, password))\n </pre>\n <p>\n With an authorized user you can synchronize data between the local device and the remote Realm\n App by opening a Realm with a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "</li>\n </ul>"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.mongodb.sync.SyncConfiguration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.mongodb.sync.SyncConfiguration"}], "label": "", "referencedClassName": "io.realm.mongodb.sync.SyncConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.SyncConfiguration", "typeName": "SyncConfiguration", "qualifiedTypeName": "io.realm.mongodb.sync.SyncConfiguration", "simpleTypeName": "SyncConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as indicated below:\n <pre>\n     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"&lt;partition value&gt;\")\n              .build();\n\n     Realm instance = Realm.getInstance(syncConfiguration);\n     SyncSession session = APP.getSync().getSession(syncConfiguration);\n\n     instance.executeTransaction(realm -&gt; {\n         realm.insert(...);\n     });\n     session.uploadAllLocalChanges();\n     instance.close();\n </pre>\n <p>\n You can call remote Realm functions as shown below:\n <pre>\n     Functions functions = user.getFunctions();\n     Integer sum = functions.callFunction(\"sum\", Arrays.asList(1, 2, 3, 4), Integer.class);\n </pre>\n <p>\n And access collections from the remote Realm App as shown here:\n <pre>\n     MongoClient client = user.getMongoClient(SERVICE_NAME)\n     MongoDatabase database = client.getDatabase(DATABASE_NAME)\n     MongoCollection&lt;DocumentT&gt; collection = database.getCollection(COLLECTION_NAME);\n     Long count = collection.count().get()\n </pre>\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " as indicated below:\n <pre>\n     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"&lt;partition value&gt;\")\n              .build();\n\n     Realm instance = Realm.getInstance(syncConfiguration);\n     SyncSession session = APP.getSync().getSession(syncConfiguration);\n\n     instance.executeTransaction(realm -&gt; {\n         realm.insert(...);\n     });\n     session.uploadAllLocalChanges();\n     instance.close();\n </pre>\n <p>\n You can call remote Realm functions as shown below:\n <pre>\n     Functions functions = user.getFunctions();\n     Integer sum = functions.callFunction(\"sum\", Arrays.asList(1, 2, 3, 4), Integer.class);\n </pre>\n <p>\n And access collections from the remote Realm App as shown here:\n <pre>\n     MongoClient client = user.getMongoClient(SERVICE_NAME)\n     MongoDatabase database = client.getDatabase(DATABASE_NAME)\n     MongoCollection&lt;DocumentT&gt; collection = database.getCollection(COLLECTION_NAME);\n     Long count = collection.count().get()\n </pre>\n <p>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "as indicated below:"}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.annotations.Beta", "typeName": "Beta", "qualifiedTypeName": "io.realm.annotations.Beta", "simpleTypeName": "Beta", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [{"commentText": "Thread pool used when doing network requests against MongoDB Realm.\n <p>\n This pool is only exposed for testing purposes and replacing it while the queue is not\n empty will result in undefined behaviour.", "name": "NETWORK_POOL_EXECUTOR", "isField": true, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 160, "column": 38, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Thread pool used when doing network requests against MongoDB Realm.\n <p>\n This pool is only exposed for testing purposes and replacing it while the queue is not\n empty will result in undefined behaviour.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Thread pool used when doing network requests against MongoDB Realm.\n <p>\n This pool is only exposed for testing purposes and replacing it while the queue is not\n empty will result in undefined behaviour."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Thread pool used when doing network requests against MongoDB Realm."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Thread pool used when doing network requests against MongoDB Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Thread pool used when doing network requests against MongoDB Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Thread pool used when doing network requests against MongoDB Realm."}]}], "_class": "FieldDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.NETWORK_POOL_EXECUTOR", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "SuppressFBWarnings", "typeName": "SuppressFBWarnings", "qualifiedTypeName": "SuppressFBWarnings", "simpleTypeName": "SuppressFBWarnings", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "isSynthetic": false, "type": {"_class": "ClassDoc", "asString": "java.util.concurrent.ThreadPoolExecutor", "typeName": "ThreadPoolExecutor", "qualifiedTypeName": "java.util.concurrent.ThreadPoolExecutor", "simpleTypeName": "ThreadPoolExecutor", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isTransient": false, "isVolatile": false, "serialFieldTags": []}], "enumConstants": [], "methods": [{"commentText": "Returns the current user that is logged in and still valid.\n <p>\n A user is invalidated when he/she logs out or the user's refresh token expires or is revoked.\n <p>\n If two or more users are logged in, it is the last valid user that is returned by this method.", "name": "currentUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 274, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "current {@link User} that has logged in and is still valid. {@code null} if no\n user is logged in or the user has expired.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "current "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that has logged in and is still valid. "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " if no\n user is logged in or the user has expired."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "current "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " that has logged in and is still valid."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current user that is logged in and still valid.\n <p>\n A user is invalidated when he/she logs out or the user's refresh token expires or is revoked.\n <p>\n If two or more users are logged in, it is the last valid user that is returned by this method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current user that is logged in and still valid.\n <p>\n A user is invalidated when he/she logs out or the user's refresh token expires or is revoked.\n <p>\n If two or more users are logged in, it is the last valid user that is returned by this method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current user that is logged in and still valid."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current user that is logged in and still valid.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current user that is logged in and still valid."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the current user that is logged in and still valid."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.currentUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nullable", "typeName": "Nullable", "qualifiedTypeName": "Nullable", "simpleTypeName": "Nullable", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns all known users that are either {@link User.State#LOGGED_IN} or\n {@link User.State#LOGGED_OUT}.\n <p>\n Only users that at some point logged into this device will be returned.", "name": "allUsers", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 287, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "a map of user identifiers and users known locally.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a map of user identifiers and users known locally."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a map of user identifiers and users known locally."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all known users that are either ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all known users that are either "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all known users that are either"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_IN", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_IN"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_IN"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_IN"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_OUT", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_OUT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Only users that at some point logged into this device will be returned.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n Only users that at some point logged into this device will be returned."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all known users that are either ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all known users that are either "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns all known users that are either"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_IN", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_IN"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_IN"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_IN"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_OUT", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "User.State#LOGGED_OUT"}], "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_OUT"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.allUsers", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ParameterizedType", "asString": "java.util.Map<java.lang.String, io.realm.mongodb.User>", "typeName": "Map", "qualifiedTypeName": "java.util.Map", "simpleTypeName": "Map", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": []}}, {"commentText": "Switch current user.\n <p>\n The current user is the user returned by {@link #currentUser()}.", "name": "switchUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 306, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user the new current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user the new current user."}], "parameterName": "user", "parameterComment": "the new current user.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the user is is not {@link User.State#LOGGED_IN}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the user is is not "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_IN", "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_IN"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the user is is not "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_IN", "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_IN"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the user is is not {@link User.State#LOGGED_IN}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user the new current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user the new current user."}], "parameterName": "user", "parameterComment": "the new current user.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Switch current user.\n <p>\n The current user is the user returned by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Switch current user.\n <p>\n The current user is the user returned by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Switch current user."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#currentUser()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#currentUser()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#currentUser()"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "currentUser()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Switch current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Switch current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Switch current user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.switchUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if the user is is not {@link User.State#LOGGED_IN}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the user is is not "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_IN", "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_IN"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if the user is is not "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User.State#LOGGED_IN", "label": "", "referencedClassName": "io.realm.mongodb.User.State", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User.State", "typeName": "User.State", "qualifiedTypeName": "io.realm.mongodb.User.State", "simpleTypeName": "State", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "LOGGED_IN"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if the user is is not {@link User.State#LOGGED_IN}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user the new current user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the new current user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user the new current user."}], "parameterName": "user", "parameterComment": "the new current user.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.User)", "flatSignature": "(User)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Removes a users credentials from this device. If the user was currently logged in, they\n will be logged out as part of the process. This is only a local change and does not\n affect the user state on the server.", "name": "removeUser", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 323, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user to remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user to remove"}], "parameterName": "user", "parameterComment": "to remove", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "user that was removed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user that was removed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user that was removed."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if called from the UI thread or if the user was logged in, but\n                      could not be logged out.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from the UI thread or if the user was logged in, but\n                      could not be logged out."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if called from the UI thread or if the user was logged in, but\n                      could not be logged out."}], "exceptionName": "AppException", "exceptionComment": "if called from the UI thread or if the user was logged in, but\n                      could not be logged out.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a users credentials from this device. If the user was currently logged in, they\n will be logged out as part of the process. This is only a local change and does not\n affect the user state on the server.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a users credentials from this device. If the user was currently logged in, they\n will be logged out as part of the process. This is only a local change and does not\n affect the user state on the server."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a users credentials from this device."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a users credentials from this device.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a users credentials from this device."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes a users credentials from this device."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.removeUser", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if called from the UI thread or if the user was logged in, but\n                      could not be logged out.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if called from the UI thread or if the user was logged in, but\n                      could not be logged out."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if called from the UI thread or if the user was logged in, but\n                      could not be logged out."}], "exceptionName": "AppException", "exceptionComment": "if called from the UI thread or if the user was logged in, but\n                      could not be logged out.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "user to remove", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to remove"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "user to remove"}], "parameterName": "user", "parameterComment": "to remove", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.User)", "flatSignature": "(User)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Logs in as a user with the given credentials associated with an authentication provider.\n <p>\n The user who logs in becomes the current user. Other App functionality acts on behalf of\n the current user.\n <p>\n If there was already a current user, that user is still logged in and can be found in the\n list returned by {@link #allUsers()}.\n <p>\n It is also possible to switch between which user is considered the current user by using\n {@link #switchUser(User)}.", "name": "login", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 357, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials representing the type of login.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials representing the type of login."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials representing the type of login."}], "parameterName": "credentials", "parameterComment": "the credentials representing the type of login.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "a {@link User} representing the logged in user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing the logged in user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "User", "label": "", "referencedClassName": "io.realm.mongodb.User", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " representing the logged in user."}]}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the user could not be logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the user could not be logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the user could not be logged in."}], "exceptionName": "AppException", "exceptionComment": "if the user could not be logged in.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider.\n <p>\n The user who logs in becomes the current user. Other App functionality acts on behalf of\n the current user.\n <p>\n If there was already a current user, that user is still logged in and can be found in the\n list returned by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider.\n <p>\n The user who logs in becomes the current user. Other App functionality acts on behalf of\n the current user.\n <p>\n If there was already a current user, that user is still logged in and can be found in the\n list returned by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#allUsers()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#allUsers()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#allUsers()"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "allUsers()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is also possible to switch between which user is considered the current user by using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is also possible to switch between which user is considered the current user by using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#switchUser(User)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#switchUser(User)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#switchUser(User)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "switchUser(User)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.login", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials", "typeName": "Credentials", "qualifiedTypeName": "io.realm.mongodb.Credentials", "simpleTypeName": "Credentials", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "credentials", "typeName": "Credentials", "asString": "Credentials credentials", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "AppException if the user could not be logged in.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if the user could not be logged in."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppException if the user could not be logged in."}], "exceptionName": "AppException", "exceptionComment": "if the user could not be logged in.", "exceptionType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppException", "typeName": "AppException", "qualifiedTypeName": "io.realm.mongodb.AppException", "simpleTypeName": "AppException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials representing the type of login.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials representing the type of login."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials representing the type of login."}], "parameterName": "credentials", "parameterComment": "the credentials representing the type of login.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.Credentials)", "flatSignature": "(Credentials)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Logs in as a user with the given credentials associated with an authentication provider.\n <p>\n The user who logs in becomes the current user. Other App functionality acts on behalf of\n the current user.\n <p>\n If there was already a current user, that user is still logged in and can be found in the\n list returned by {@link #allUsers()}.\n <p>\n It is also possible to switch between which user is considered the current user by using\n {@link #switchUser(User)}.", "name": "loginAsync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 406, "column": 27, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials representing the type of login.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials representing the type of login."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials representing the type of login."}], "parameterName": "credentials", "parameterComment": "the credentials representing the type of login.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback    callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback    callback when logging in has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials representing the type of login.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials representing the type of login."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials representing the type of login."}], "parameterName": "credentials", "parameterComment": "the credentials representing the type of login.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback    callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback    callback when logging in has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider.\n <p>\n The user who logs in becomes the current user. Other App functionality acts on behalf of\n the current user.\n <p>\n If there was already a current user, that user is still logged in and can be found in the\n list returned by ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider.\n <p>\n The user who logs in becomes the current user. Other App functionality acts on behalf of\n the current user.\n <p>\n If there was already a current user, that user is still logged in and can be found in the\n list returned by "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#allUsers()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#allUsers()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#allUsers()"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "allUsers()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is also possible to switch between which user is considered the current user by using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n It is also possible to switch between which user is considered the current user by using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#switchUser(User)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#switchUser(User)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#switchUser(User)"}], "label": "", "referencedClassName": "io.realm.mongodb.App", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "switchUser(User)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Logs in as a user with the given credentials associated with an authentication provider."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.loginAsync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials", "typeName": "Credentials", "qualifiedTypeName": "io.realm.mongodb.Credentials", "simpleTypeName": "Credentials", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "credentials", "typeName": "Credentials", "asString": "Credentials credentials", "annotations": []}, {"type": {"_class": "ParameterizedType", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.User>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": false, "isAnnotationType": false, "typeArguments": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "interfaceTypes": [], "containingType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, "name": "callback", "typeName": "io.realm.mongodb.App.Callback<io.realm.mongodb.User>", "asString": "io.realm.mongodb.App.Callback<io.realm.mongodb.User> callback", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if not called on a looper thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if not called on a looper thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if not called on a looper thread."}], "exceptionName": "IllegalStateException", "exceptionComment": "if not called on a looper thread.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "credentials the credentials representing the type of login.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the credentials representing the type of login."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "credentials the credentials representing the type of login."}], "parameterName": "credentials", "parameterComment": "the credentials representing the type of login.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "callback    callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "callback    callback when logging in has completed or failed."}], "parameterName": "callback", "parameterComment": "callback when logging in has completed or failed. The callback will always\n                    happen on the same thread as this method is called on.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.Credentials, io.realm.mongodb.App.Callback<io.realm.mongodb.User>)", "flatSignature": "(Credentials, App.Callback<User>)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmAsyncTask", "typeName": "RealmAsyncTask", "qualifiedTypeName": "io.realm.RealmAsyncTask", "simpleTypeName": "RealmAsyncTask", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the {@link Credentials.Provider#EMAIL_PASSWORD} identity provider.", "name": "getEmailPassword", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 422, "column": 30, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "wrapper for interacting with the {@link Credentials.Provider#EMAIL_PASSWORD} identity provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "wrapper for interacting with the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "label": "", "referencedClassName": "io.realm.mongodb.Credentials.Provider", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials.Provider", "typeName": "Credentials.Provider", "qualifiedTypeName": "io.realm.mongodb.Credentials.Provider", "simpleTypeName": "Provider", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " identity provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "wrapper for interacting with the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "label": "", "referencedClassName": "io.realm.mongodb.Credentials.Provider", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials.Provider", "typeName": "Credentials.Provider", "qualifiedTypeName": "io.realm.mongodb.Credentials.Provider", "simpleTypeName": "Provider", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " identity provider."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "io.realm.mongodb.Credentials.Provider", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials.Provider", "typeName": "Credentials.Provider", "qualifiedTypeName": "io.realm.mongodb.Credentials.Provider", "simpleTypeName": "Provider", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " identity provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " identity provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "identity provider."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a wrapper for interacting with functionality related to users either being created or\n logged in using the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Credentials.Provider#EMAIL_PASSWORD", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Credentials.Provider#EMAIL_PASSWORD"}], "label": "", "referencedClassName": "io.realm.mongodb.Credentials.Provider", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.Credentials.Provider", "typeName": "Credentials.Provider", "qualifiedTypeName": "io.realm.mongodb.Credentials.Provider", "simpleTypeName": "Provider", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static final"}, "referencedMemberName": "EMAIL_PASSWORD"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " identity provider.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " identity provider."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "identity provider."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.getEmailPassword", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.auth.EmailPasswordAuth", "typeName": "EmailPasswordAuth", "qualifiedTypeName": "io.realm.mongodb.auth.EmailPasswordAuth", "simpleTypeName": "EmailPasswordAuth", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets a global authentication listener that will be notified about User events like\n login and logout.\n <p>\n Callbacks to authentication listeners will happen on the UI thread.", "name": "addAuthenticationListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 435, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to register."}], "parameterName": "listener", "parameterComment": "listener to register.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code listener} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "listener"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "listener"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code listener} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to register."}], "parameterName": "listener", "parameterComment": "listener to register.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a global authentication listener that will be notified about User events like\n login and logout.\n <p>\n Callbacks to authentication listeners will happen on the UI thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a global authentication listener that will be notified about User events like\n login and logout.\n <p>\n Callbacks to authentication listeners will happen on the UI thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a global authentication listener that will be notified about User events like\n login and logout."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a global authentication listener that will be notified about User events like\n login and logout.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a global authentication listener that will be notified about User events like\n login and logout."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets a global authentication listener that will be notified about User events like\n login and logout."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.addAuthenticationListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AuthenticationListener", "typeName": "AuthenticationListener", "qualifiedTypeName": "io.realm.mongodb.AuthenticationListener", "simpleTypeName": "AuthenticationListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "AuthenticationListener", "asString": "AuthenticationListener listener", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code listener} is {@code null}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "listener"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "listener"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "null"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code listener} is {@code null}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to register.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to register."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to register."}], "parameterName": "listener", "parameterComment": "listener to register.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.AuthenticationListener)", "flatSignature": "(AuthenticationListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Removes the provided global authentication listener.", "name": "removeAuthenticationListener", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 448, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove."}], "parameterName": "listener", "parameterComment": "listener to remove.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove."}], "parameterName": "listener", "parameterComment": "listener to remove.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the provided global authentication listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the provided global authentication listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the provided global authentication listener."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the provided global authentication listener.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the provided global authentication listener."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Removes the provided global authentication listener."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.removeAuthenticationListener", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AuthenticationListener", "typeName": "AuthenticationListener", "qualifiedTypeName": "io.realm.mongodb.AuthenticationListener", "simpleTypeName": "AuthenticationListener", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "listener", "typeName": "AuthenticationListener", "asString": "AuthenticationListener listener", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "listener listener to remove.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener to remove."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "listener listener to remove."}], "parameterName": "listener", "parameterComment": "listener to remove.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.AuthenticationListener)", "flatSignature": "(AuthenticationListener)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app.", "name": "getSync", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 462, "column": 17, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the <i>Sync</i> instance associated with this <i>App</i>.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the <i>Sync</i> instance associated with this <i>App</i>."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the <i>Sync</i> instance associated with this <i>App</i>."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the <i>Sync</i> instance managing the ongoing <i>Realm Sync</i> sessions\n synchronizing data between the local and the remote <i>Realm App</i> associated with this app."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.getSync", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.sync.Sync", "typeName": "Sync", "qualifiedTypeName": "io.realm.mongodb.sync.Sync", "simpleTypeName": "Sync", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions.\n <p>\n This will use the app's default codec registry to encode and decode arguments and results.", "name": "getFunctions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 474, "column": 22, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration#getDefaultCodecRegistry()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getDefaultCodecRegistry()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultCodecRegistry()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions.\n <p>\n This will use the app's default codec registry to encode and decode arguments and results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions.\n <p>\n This will use the app's default codec registry to encode and decode arguments and results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.getFunctions", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.mongodb.User)", "flatSignature": "(User)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results.", "name": "getFunctions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 484, "column": 22, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Functions", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Functions"}], "label": "", "referencedClassName": "io.realm.mongodb.functions.Functions", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public abstract"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns a <i>Functions</i> manager for invoking the Realm App's Realm Functions with a custom\n codec registry for encoding and decoding arguments and results."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.getFunctions", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.User", "typeName": "User", "qualifiedTypeName": "io.realm.mongodb.User", "simpleTypeName": "User", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "user", "typeName": "User", "asString": "User user", "annotations": []}, {"type": {"_class": "Type", "asString": "CodecRegistry", "typeName": "CodecRegistry", "qualifiedTypeName": "CodecRegistry", "simpleTypeName": "CodecRegistry", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "codecRegistry", "typeName": "CodecRegistry", "asString": "CodecRegistry codecRegistry", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.mongodb.User, CodecRegistry)", "flatSignature": "(User, CodecRegistry)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.functions.Functions", "typeName": "Functions", "qualifiedTypeName": "io.realm.mongodb.functions.Functions", "simpleTypeName": "Functions", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Returns the configuration object for this app.", "name": "getConfiguration", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 493, "column": 29, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the configuration for this app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the configuration for this app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the configuration for this app."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the configuration object for this app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the configuration object for this app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the configuration object for this app."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the configuration object for this app.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the configuration object for this app."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Returns the configuration object for this app."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.getConfiguration", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Exposed for testing.\n <p>\n Swap the currently configured network transport with the provided one.\n This should only be done if no network requests are currently running.", "name": "setNetworkTransport", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 503, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Exposed for testing.\n <p>\n Swap the currently configured network transport with the provided one.\n This should only be done if no network requests are currently running.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Exposed for testing.\n <p>\n Swap the currently configured network transport with the provided one.\n This should only be done if no network requests are currently running."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Exposed for testing."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Exposed for testing.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Exposed for testing."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Exposed for testing."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.setNetworkTransport", "modifierSpecifier": 4, "modifiers": "protected", "annotations": [], "isPublic": false, "isProtected": true, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.internal.objectstore.OsJavaNetworkTransport", "typeName": "OsJavaNetworkTransport", "qualifiedTypeName": "io.realm.internal.objectstore.OsJavaNetworkTransport", "simpleTypeName": "OsJavaNetworkTransport", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transport", "typeName": "OsJavaNetworkTransport", "asString": "OsJavaNetworkTransport transport", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.internal.objectstore.OsJavaNetworkTransport)", "flatSignature": "(OsJavaNetworkTransport)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "void", "typeName": "void", "qualifiedTypeName": "void", "simpleTypeName": "void", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}, {"commentText": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same {@link AppConfiguration#getAppId()}.", "name": "equals", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 512, "column": 20, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AppConfiguration#getAppId()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getAppId()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getAppId()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getAppId()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Two Apps are considered equal and will share their underlying state if they both refer\n to the same"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "AppConfiguration#getAppId()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getAppId()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration#getAppId()"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getAppId()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.equals", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "o", "typeName": "Object", "asString": "Object o", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"commentText": "", "name": "hashCode", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 523, "column": 16, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App.hashCode", "modifierSpecifier": 1, "modifiers": "public", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "java.lang.Override", "typeName": "Override", "qualifiedTypeName": "java.lang.Override", "simpleTypeName": "Override", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "Type", "asString": "int", "typeName": "int", "qualifiedTypeName": "int", "simpleTypeName": "int", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "overriddenType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "overriddenMethodContainingClass": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}], "constructors": [{"commentText": "", "name": "App", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 168, "column": 12, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [], "seeTags": [], "inlineTags": [], "firstSentenceTags": [], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "appId", "typeName": "String", "asString": "String appId", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": []}, {"commentText": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>.", "name": "App", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 178, "column": 12, "file": "./realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "config The configuration to use for this <i>App</i> instance.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The configuration to use for this <i>App</i> instance."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "config The configuration to use for this <i>App</i> instance."}], "parameterName": "config", "parameterComment": "The configuration to use for this <i>App</i> instance.", "isTypeParameter": false}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration.Builder", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration.Builder", "typeName": "AppConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "AppConfiguration.Builder", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "AppConfiguration.Builder"}], "label": "", "referencedClassName": "io.realm.mongodb.AppConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration.Builder", "typeName": "AppConfiguration.Builder", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Constructor for creating an <i>App</i> according to the given <i>AppConfiguration</i>."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.mongodb.App", "typeName": "App", "qualifiedTypeName": "io.realm.mongodb.App", "simpleTypeName": "App", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm.mongodb"}, "qualifiedName": "io.realm.mongodb.App", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.mongodb.AppConfiguration", "typeName": "AppConfiguration", "qualifiedTypeName": "io.realm.mongodb.AppConfiguration", "simpleTypeName": "AppConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "config", "typeName": "AppConfiguration", "asString": "AppConfiguration config", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "config The configuration to use for this <i>App</i> instance.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "The configuration to use for this <i>App</i> instance."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "config The configuration to use for this <i>App</i> instance."}], "parameterName": "config", "parameterComment": "The configuration to use for this <i>App</i> instance.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.mongodb.AppConfiguration)", "flatSignature": "(AppConfiguration)", "typeParameters": []}], "innerClasses": [{"_class": "ClassDoc", "asString": "io.realm.mongodb.App.Result<T>", "typeName": "App.Result", "qualifiedTypeName": "io.realm.mongodb.App.Result", "simpleTypeName": "Result", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, {"_class": "ClassDoc", "asString": "io.realm.mongodb.App.Callback<T>", "typeName": "App.Callback", "qualifiedTypeName": "io.realm.mongodb.App.Callback", "simpleTypeName": "Callback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static interface"}]}