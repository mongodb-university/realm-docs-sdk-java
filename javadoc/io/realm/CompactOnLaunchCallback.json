{"commentText": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned.\n <p>\n Note that compacting a file can take a while, so compacting should generally only be done on a background thread or\n when used in combination with {@link Realm#getInstanceAsync(RealmConfiguration, io.realm.Realm.Callback)}.", "name": "CompactOnLaunchCallback", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": true, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": true, "isIncluded": true, "position": {"line": 29, "column": 8, "file": "./realm/realm-library/src/main/java/io/realm/CompactOnLaunchCallback.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned.\n <p>\n Note that compacting a file can take a while, so compacting should generally only be done on a background thread or\n when used in combination with ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned.\n <p>\n Note that compacting a file can take a while, so compacting should generally only be done on a background thread or\n when used in combination with "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getInstanceAsync(RealmConfiguration, io.realm.Realm.Callback)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getInstanceAsync(RealmConfiguration, io.realm.Realm.Callback)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getInstanceAsync(RealmConfiguration, io.realm.Realm.Callback)"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getInstanceAsync(RealmConfiguration, io.realm.Realm.Callback)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This interface is used to determine if a Realm file should be compacted the first time the file is opened and before\n the instance is returned."}]}], "_class": "ParsedClassDoc", "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.CompactOnLaunchCallback", "modifierSpecifier": 513, "modifiers": "public interface", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "io.realm.internal.Keep", "typeName": "Keep", "qualifiedTypeName": "io.realm.internal.Keep", "simpleTypeName": "Keep", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}, "elementValues": [], "isSynthesized": false}], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "asString": "io.realm.CompactOnLaunchCallback", "typeName": "CompactOnLaunchCallback", "qualifiedTypeName": "io.realm.CompactOnLaunchCallback", "simpleTypeName": "CompactOnLaunchCallback", "dimension": "", "isPrimitive": false, "isAbstract": true, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [], "inheritedMethods": {}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "This method determines if the Realm file should be compacted before opened and returned to the user. It is passed\n the total file size (data + free space) and the bytes used by data in the file.", "name": "shouldCompact", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 40, "column": 13, "file": "./realm/realm-library/src/main/java/io/realm/CompactOnLaunchCallback.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "totalBytes the total file size (data + free space).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the total file size (data + free space)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "totalBytes the total file size (data + free space)."}], "parameterName": "totalBytes", "parameterComment": "the total file size (data + free space).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "usedBytes the total bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the total bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "usedBytes the total bytes used by data in the file."}], "parameterName": "usedBytes", "parameterComment": "the total bytes used by data in the file.", "isTypeParameter": false}, {"_class": "Tag", "name": "@return", "kind": "@return", "text": "{code true} to indicate an attempt to compact the file should be made. Otherwise, the compaction will be\n skipped.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "{code true} to indicate an attempt to compact the file should be made. Otherwise, the compaction will be\n skipped."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "{code true} to indicate an attempt to compact the file should be made."}]}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "totalBytes the total file size (data + free space).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the total file size (data + free space)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "totalBytes the total file size (data + free space)."}], "parameterName": "totalBytes", "parameterComment": "the total file size (data + free space).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "usedBytes the total bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the total bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "usedBytes the total bytes used by data in the file."}], "parameterName": "usedBytes", "parameterComment": "the total bytes used by data in the file.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This method determines if the Realm file should be compacted before opened and returned to the user. It is passed\n the total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This method determines if the Realm file should be compacted before opened and returned to the user. It is passed\n the total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This method determines if the Realm file should be compacted before opened and returned to the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This method determines if the Realm file should be compacted before opened and returned to the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This method determines if the Realm file should be compacted before opened and returned to the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "This method determines if the Realm file should be compacted before opened and returned to the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.CompactOnLaunchCallback", "typeName": "CompactOnLaunchCallback", "qualifiedTypeName": "io.realm.CompactOnLaunchCallback", "simpleTypeName": "CompactOnLaunchCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.CompactOnLaunchCallback.shouldCompact", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "totalBytes", "typeName": "long", "asString": "long totalBytes", "annotations": []}, {"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "usedBytes", "typeName": "long", "asString": "long usedBytes", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "totalBytes the total file size (data + free space).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the total file size (data + free space)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "totalBytes the total file size (data + free space)."}], "parameterName": "totalBytes", "parameterComment": "the total file size (data + free space).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "usedBytes the total bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the total bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "usedBytes the total bytes used by data in the file."}], "parameterName": "usedBytes", "parameterComment": "the total bytes used by data in the file.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(long, long)", "flatSignature": "(long, long)", "typeParameters": [], "isAbstract": true, "isDefault": false, "returnType": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}}], "constructors": [], "innerClasses": []}