{"commentText": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner.", "name": "RealmConfiguration.Builder", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": true, "isClass": true, "isIncluded": true, "position": {"line": 490, "column": 19, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmConfiguration.Builder used to construct instances of a RealmConfiguration in a fluent manner."}]}], "_class": "ParsedClassDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder", "modifierSpecifier": 9, "modifiers": "public static", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": true, "isFinal": false, "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isAbstract": false, "isSerializable": false, "isExternalizable": false, "serializationMethods": [], "serializableFields": [], "definesSerializableFields": false, "superclasses": [{"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}], "inheritedMethods": {"java.lang.Object": ["getClass", "hashCode", "equals", "clone", "toString", "notify", "notifyAll", "wait", "wait", "wait", "finalize"]}, "interfaceTypes": [], "typeParameters": [], "typeParamTags": [], "fields": [], "enumConstants": [], "methods": [{"commentText": "Sets the filename for the Realm file.", "name": "name", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 554, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the filename for the Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the filename for the Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the filename for the Realm file."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the filename for the Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the filename for the Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the filename for the Realm file."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.name", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "filename", "typeName": "String", "asString": "String filename", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Specifies the directory where the Realm file will be saved. The default value is {@code context.getFilesDir()}.\n If the directory does not exist, it will be created.", "name": "directory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 571, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "directory the directory to save the Realm file in. Directory must be writable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the directory to save the Realm file in. Directory must be writable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "directory the directory to save the Realm file in."}], "parameterName": "directory", "parameterComment": "the directory to save the Realm file in. Directory must be writable.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code directory} is null, not writable or a file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "directory"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is null, not writable or a file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "directory"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is null, not writable or a file."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code directory} is null, not writable or a file.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "directory the directory to save the Realm file in. Directory must be writable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the directory to save the Realm file in. Directory must be writable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "directory the directory to save the Realm file in."}], "parameterName": "directory", "parameterComment": "the directory to save the Realm file in. Directory must be writable.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the directory where the Realm file will be saved. The default value is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the directory where the Realm file will be saved. The default value is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the directory where the Realm file will be saved."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "context.getFilesDir()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context.getFilesDir()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "context.getFilesDir()"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n If the directory does not exist, it will be created.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n If the directory does not exist, it will be created."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the directory where the Realm file will be saved.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the directory where the Realm file will be saved."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Specifies the directory where the Realm file will be saved."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.directory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.io.File", "typeName": "File", "qualifiedTypeName": "java.io.File", "simpleTypeName": "File", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "directory", "typeName": "File", "asString": "File directory", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if {@code directory} is null, not writable or a file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "directory"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is null, not writable or a file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if "}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "directory"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is null, not writable or a file."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if {@code directory} is null, not writable or a file.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "directory the directory to save the Realm file in. Directory must be writable.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the directory to save the Realm file in. Directory must be writable."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "directory the directory to save the Realm file in."}], "parameterName": "directory", "parameterComment": "the directory to save the Realm file in. Directory must be writable.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.io.File)", "flatSignature": "(File)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the 64 byte key used to encrypt and decrypt the Realm file.\n Sets the {@value io.realm.Realm#ENCRYPTION_KEY_LENGTH} bytes key used to encrypt and decrypt the Realm file.", "name": "encryptionKey", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 593, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the 64 byte key used to encrypt and decrypt the Realm file.\n Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the 64 byte key used to encrypt and decrypt the Realm file.\n Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the 64 byte key used to encrypt and decrypt the Realm file."}]}, {"_class": "Tag", "name": "@value", "kind": "@value", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm#ENCRYPTION_KEY_LENGTH"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " bytes key used to encrypt and decrypt the Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " bytes key used to encrypt and decrypt the Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "bytes key used to encrypt and decrypt the Realm file."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the 64 byte key used to encrypt and decrypt the Realm file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the 64 byte key used to encrypt and decrypt the Realm file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the 64 byte key used to encrypt and decrypt the Realm file."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.encryptionKey", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "byte[]", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "[]", "isPrimitive": true, "elementType": {"_class": "Type", "asString": "byte", "typeName": "byte", "qualifiedTypeName": "byte", "simpleTypeName": "byte", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "key", "typeName": "byte[]", "asString": "byte[] key", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(byte[])", "flatSignature": "(byte[])", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the schema version of the Realm. This must be equal to or higher than the schema version of the existing\n Realm file, if any. If the schema version is higher than the already existing Realm, a migration is needed.\n <p>\n If no migration code is provided, Realm will throw a\n {@link io.realm.exceptions.RealmMigrationNeededException}.", "name": "schemaVersion", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 616, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#migration(RealmMigration)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#migration(RealmMigration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#migration(RealmMigration)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "migration(RealmMigration)"}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "#migration(RealmMigration)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#migration(RealmMigration)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#migration(RealmMigration)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "migration(RealmMigration)"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm. This must be equal to or higher than the schema version of the existing\n Realm file, if any. If the schema version is higher than the already existing Realm, a migration is needed.\n <p>\n If no migration code is provided, Realm will throw a\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm. This must be equal to or higher than the schema version of the existing\n Realm file, if any. If the schema version is higher than the already existing Realm, a migration is needed.\n <p>\n If no migration code is provided, Realm will throw a\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.RealmMigrationNeededException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmMigrationNeededException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmMigrationNeededException"}], "label": "", "referencedClassName": "io.realm.exceptions.RealmMigrationNeededException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the schema version of the Realm."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.schemaVersion", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "schemaVersion", "typeName": "long", "asString": "long schemaVersion", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(long)", "flatSignature": "(long)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the {@link io.realm.RealmMigration} to be run if a migration is needed. If this migration fails to\n upgrade the on-disc schema to the runtime schema, a {@link io.realm.exceptions.RealmMigrationNeededException}\n will be thrown.", "name": "migration", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 629, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmMigration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to be run if a migration is needed. If this migration fails to\n upgrade the on-disc schema to the runtime schema, a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to be run if a migration is needed. If this migration fails to\n upgrade the on-disc schema to the runtime schema, a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to be run if a migration is needed."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.RealmMigrationNeededException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmMigrationNeededException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmMigrationNeededException"}], "label": "", "referencedClassName": "io.realm.exceptions.RealmMigrationNeededException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n will be thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will be thrown."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.RealmMigration", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.RealmMigration"}], "label": "", "referencedClassName": "io.realm.RealmMigration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to be run if a migration is needed.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to be run if a migration is needed."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to be run if a migration is needed."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.migration", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.RealmMigration", "typeName": "RealmMigration", "qualifiedTypeName": "io.realm.RealmMigration", "simpleTypeName": "RealmMigration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "migration", "typeName": "RealmMigration", "asString": "RealmMigration migration", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(io.realm.RealmMigration)", "flatSignature": "(RealmMigration)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will change the behavior of how migration exceptions are handled. Instead of throwing a\n {@link io.realm.exceptions.RealmMigrationNeededException} the on-disc Realm will be cleared and recreated\n with the new Realm schema.\n <p>\n <p>This cannot be configured to have an asset file at the same time by calling\n {@link #assetFile(String)} as the provided asset file will be deleted in migrations.\n <p>\n <p><b>WARNING!</b> This will result in loss of data.", "name": "deleteRealmIfMigrationNeeded", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 650, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if configured to use an asset file by calling {@link #assetFile(String)} previously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if configured to use an asset file by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#assetFile(String)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "assetFile(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " previously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if configured to use an asset file by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#assetFile(String)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "assetFile(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " previously."}], "exceptionName": "IllegalStateException", "exceptionComment": "if configured to use an asset file by calling {@link #assetFile(String)} previously.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will change the behavior of how migration exceptions are handled. Instead of throwing a\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will change the behavior of how migration exceptions are handled. Instead of throwing a\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will change the behavior of how migration exceptions are handled."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.exceptions.RealmMigrationNeededException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmMigrationNeededException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.exceptions.RealmMigrationNeededException"}], "label": "", "referencedClassName": "io.realm.exceptions.RealmMigrationNeededException", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.exceptions.RealmMigrationNeededException", "typeName": "RealmMigrationNeededException", "qualifiedTypeName": "io.realm.exceptions.RealmMigrationNeededException", "simpleTypeName": "RealmMigrationNeededException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public final"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " the on-disc Realm will be cleared and recreated\n with the new Realm schema.\n <p>\n <p>This cannot be configured to have an asset file at the same time by calling\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " the on-disc Realm will be cleared and recreated\n with the new Realm schema.\n <p>\n <p>This cannot be configured to have an asset file at the same time by calling\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the on-disc Realm will be cleared and recreated\n with the new Realm schema."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#assetFile(String)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#assetFile(String)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#assetFile(String)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "assetFile(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the provided asset file will be deleted in migrations.\n <p>\n <p><b>WARNING!</b> This will result in loss of data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " as the provided asset file will be deleted in migrations.\n <p>\n <p><b>WARNING!</b> This will result in loss of data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "as the provided asset file will be deleted in migrations."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will change the behavior of how migration exceptions are handled.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will change the behavior of how migration exceptions are handled."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will change the behavior of how migration exceptions are handled."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.deleteRealmIfMigrationNeeded", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if configured to use an asset file by calling {@link #assetFile(String)} previously.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if configured to use an asset file by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#assetFile(String)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "assetFile(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " previously."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if configured to use an asset file by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#assetFile(String)", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "assetFile(String)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " previously."}], "exceptionName": "IllegalStateException", "exceptionComment": "if configured to use an asset file by calling {@link #assetFile(String)} previously.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will create an in-memory Realm instead of saving it to disk. In-memory Realms might still use\n disk space if memory is running low, but all files created by an in-memory Realm will be deleted when the\n Realm is closed.\n <p>\n Note that because in-memory Realms are not persisted, you must be sure to hold on to at least one non-closed\n reference to the in-memory Realm object with the specific name as long as you want the data to last.", "name": "inMemory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 667, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk. In-memory Realms might still use\n disk space if memory is running low, but all files created by an in-memory Realm will be deleted when the\n Realm is closed.\n <p>\n Note that because in-memory Realms are not persisted, you must be sure to hold on to at least one non-closed\n reference to the in-memory Realm object with the specific name as long as you want the data to last.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk. In-memory Realms might still use\n disk space if memory is running low, but all files created by an in-memory Realm will be deleted when the\n Realm is closed.\n <p>\n Note that because in-memory Realms are not persisted, you must be sure to hold on to at least one non-closed\n reference to the in-memory Realm object with the specific name as long as you want the data to last."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will create an in-memory Realm instead of saving it to disk."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.inMemory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Replaces the existing module(s) with one or more {@link RealmModule}s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using {@link Realm#getDefaultModule()}. Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n {@code builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); }\n <p>", "name": "modules", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 693, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "baseModule the first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "baseModule the first Realm module (required)."}], "parameterName": "baseModule", "parameterComment": "the first Realm module (required).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "additionalModules the additional Realm modules", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the additional Realm modules"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "additionalModules the additional Realm modules"}], "parameterName": "additionalModules", "parameterComment": "the additional Realm modules", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if any of the modules doesn't have the {@link RealmModule} annotation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the modules doesn't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if any of the modules doesn't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if any of the modules doesn't have the {@link RealmModule} annotation.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "baseModule the first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "baseModule the first Realm module (required)."}], "parameterName": "baseModule", "parameterComment": "the first Realm module (required).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "additionalModules the additional Realm modules", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the additional Realm modules"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "additionalModules the additional Realm modules"}], "parameterName": "additionalModules", "parameterComment": "the additional Realm modules", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s. Using this method will replace the\n current schema for this Realm with the schema defined by the provided modules.\n <p>\n A reference to the default Realm module containing all Realm classes in the project (but not dependencies),\n can be found using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#getDefaultModule()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#getDefaultModule()"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "getDefaultModule()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". Combining the schema from the app project and a library\n dependency is thus done using the following code:\n <p>\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule()); "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "builder.modules(Realm.getDefaultMode(), new MyLibraryModule());"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "\n <p>"}], "firstSentenceTags": []}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Replaces the existing module(s) with one or more"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmModule"}], "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "s.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "s."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.modules", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": true, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "baseModule", "typeName": "Object", "asString": "Object baseModule", "annotations": []}, {"type": {"_class": "Type", "asString": "java.lang.Object[]", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "[]", "isPrimitive": false, "elementType": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "isClass": false, "isAnnotationType": false}, "name": "additionalModules", "typeName": "java.lang.Object[]", "asString": "java.lang.Object[] additionalModules", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalArgumentException if any of the modules doesn't have the {@link RealmModule} annotation.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if any of the modules doesn't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalArgumentException if any of the modules doesn't have the "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmModule", "label": "", "referencedClassName": "io.realm.annotations.RealmModule", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.annotations.RealmModule", "typeName": "RealmModule", "qualifiedTypeName": "io.realm.annotations.RealmModule", "simpleTypeName": "RealmModule", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " annotation."}], "exceptionName": "IllegalArgumentException", "exceptionComment": "if any of the modules doesn't have the {@link RealmModule} annotation.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalArgumentException", "typeName": "IllegalArgumentException", "qualifiedTypeName": "java.lang.IllegalArgumentException", "simpleTypeName": "IllegalArgumentException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "baseModule the first Realm module (required).", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the first Realm module (required)."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "baseModule the first Realm module (required)."}], "parameterName": "baseModule", "parameterComment": "the first Realm module (required).", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "additionalModules the additional Realm modules", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the additional Realm modules"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "additionalModules the additional Realm modules"}], "parameterName": "additionalModules", "parameterComment": "the additional Realm modules", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.Object, java.lang.Object...)", "flatSignature": "(Object, Object...)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "FIXME: Temporary visible\n DEBUG method. Will add a module unconditionally.\n\n Adds a module to already defined modules.", "name": "addModule", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 712, "column": 30, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FIXME: Temporary visible\n DEBUG method. Will add a module unconditionally.\n\n Adds a module to already defined modules.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FIXME: Temporary visible\n DEBUG method. Will add a module unconditionally.\n\n Adds a module to already defined modules."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FIXME: Temporary visible\n DEBUG method."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FIXME: Temporary visible\n DEBUG method.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FIXME: Temporary visible\n DEBUG method."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FIXME: Temporary visible\n DEBUG method."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.addModule", "modifierSpecifier": 17, "modifiers": "public final", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": true, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.Object", "typeName": "Object", "qualifiedTypeName": "java.lang.Object", "simpleTypeName": "Object", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "module", "typeName": "Object", "asString": "Object module", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(java.lang.Object)", "flatSignature": "(Object)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the {@link RxObservableFactory} used to create Rx Observables from Realm objects.\n The default factory is {@link RealmObservableFactory}.", "name": "rxFactory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 728, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RxObservableFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "label": "", "referencedClassName": "io.realm.rx.RxObservableFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.rx.RxObservableFactory", "typeName": "RxObservableFactory", "qualifiedTypeName": "io.realm.rx.RxObservableFactory", "simpleTypeName": "RxObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects.\n The default factory is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects.\n The default factory is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create Rx Observables from Realm objects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmObservableFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObservableFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmObservableFactory"}], "label": "", "referencedClassName": "io.realm.rx.RealmObservableFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.rx.RealmObservableFactory", "typeName": "RealmObservableFactory", "qualifiedTypeName": "io.realm.rx.RealmObservableFactory", "simpleTypeName": "RealmObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RxObservableFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RxObservableFactory"}], "label": "", "referencedClassName": "io.realm.rx.RxObservableFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.rx.RxObservableFactory", "typeName": "RxObservableFactory", "qualifiedTypeName": "io.realm.rx.RxObservableFactory", "simpleTypeName": "RxObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create Rx Observables from Realm objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create Rx Observables from Realm objects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.rxFactory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.rx.RxObservableFactory", "typeName": "RxObservableFactory", "qualifiedTypeName": "io.realm.rx.RxObservableFactory", "simpleTypeName": "RxObservableFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "factory", "typeName": "RxObservableFactory", "asString": "RxObservableFactory factory", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.rx.RxObservableFactory)", "flatSignature": "(RxObservableFactory)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the {@link FlowFactory} used to create coroutines Flows from Realm objects.\n The default factory is {@link RealmFlowFactory}.", "name": "flowFactory", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 742, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FlowFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "label": "", "referencedClassName": "io.realm.coroutines.FlowFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.coroutines.FlowFactory", "typeName": "FlowFactory", "qualifiedTypeName": "io.realm.coroutines.FlowFactory", "simpleTypeName": "FlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects.\n The default factory is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects.\n The default factory is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create coroutines Flows from Realm objects."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmFlowFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFlowFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmFlowFactory"}], "label": "", "referencedClassName": "io.realm.coroutines.RealmFlowFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.coroutines.RealmFlowFactory", "typeName": "RealmFlowFactory", "qualifiedTypeName": "io.realm.coroutines.RealmFlowFactory", "simpleTypeName": "RealmFlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "FlowFactory", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "FlowFactory"}], "label": "", "referencedClassName": "io.realm.coroutines.FlowFactory", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.coroutines.FlowFactory", "typeName": "FlowFactory", "qualifiedTypeName": "io.realm.coroutines.FlowFactory", "simpleTypeName": "FlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public interface"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " used to create coroutines Flows from Realm objects."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "used to create coroutines Flows from Realm objects."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.flowFactory", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.coroutines.FlowFactory", "typeName": "FlowFactory", "qualifiedTypeName": "io.realm.coroutines.FlowFactory", "simpleTypeName": "FlowFactory", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "factory", "typeName": "FlowFactory", "asString": "FlowFactory factory", "annotations": [{"annotationType": {"_class": "ClassDoc", "asString": "Nonnull", "typeName": "Nonnull", "qualifiedTypeName": "Nonnull", "simpleTypeName": "Nonnull", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": true, "modifiers": "public static"}, "elementValues": [], "isSynthesized": false}]}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "factory factory to use.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory to use."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "factory factory to use."}], "parameterName": "factory", "parameterComment": "factory to use.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.coroutines.FlowFactory)", "flatSignature": "(FlowFactory)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the initial data in {@link io.realm.Realm}. This transaction will be executed only for the first time\n when database file is created or while migrating the data when {@link Builder#deleteRealmIfMigrationNeeded()} is set.", "name": "initialData", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 756, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction transaction to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction transaction to execute."}], "parameterName": "transaction", "parameterComment": "transaction to execute.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction transaction to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction transaction to execute."}], "parameterName": "transaction", "parameterComment": "transaction to execute.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This transaction will be executed only for the first time\n when database file is created or while migrating the data when ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ". This transaction will be executed only for the first time\n when database file is created or while migrating the data when "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Builder#deleteRealmIfMigrationNeeded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder#deleteRealmIfMigrationNeeded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Builder#deleteRealmIfMigrationNeeded()"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is set.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is set."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is set."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the initial data in"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "io.realm.Realm", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "io.realm.Realm"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.initialData", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.Realm.Transaction", "typeName": "Realm.Transaction", "qualifiedTypeName": "io.realm.Realm.Transaction", "simpleTypeName": "Transaction", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "transaction", "typeName": "Realm.Transaction", "asString": "Realm.Transaction transaction", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "transaction transaction to execute.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction to execute."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "transaction transaction to execute."}], "parameterName": "transaction", "parameterComment": "transaction to execute.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.Realm.Transaction)", "flatSignature": "(Realm.Transaction)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Copies the Realm file from the given asset file path.\n <p>\n When opening the Realm for the first time, instead of creating an empty file,\n the Realm file will be copied from the provided asset file and used instead.\n <p>\n This cannot be combined with {@link #deleteRealmIfMigrationNeeded()} as doing so would just result in the\n copied file being deleted.\n <p>\n WARNING: This could potentially be a lengthy operation and should ideally be done on a background thread.", "name": "assetFile", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 775, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "assetFile path to the asset database file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "path to the asset database file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "assetFile path to the asset database file."}], "parameterName": "assetFile", "parameterComment": "path to the asset database file.", "isTypeParameter": false}, {"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this is configured to clear its schema by calling {@link #deleteRealmIfMigrationNeeded()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this is configured to clear its schema by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#deleteRealmIfMigrationNeeded()", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this is configured to clear its schema by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#deleteRealmIfMigrationNeeded()", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this is configured to clear its schema by calling {@link #deleteRealmIfMigrationNeeded()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "assetFile path to the asset database file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "path to the asset database file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "assetFile path to the asset database file."}], "parameterName": "assetFile", "parameterComment": "path to the asset database file.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies the Realm file from the given asset file path.\n <p>\n When opening the Realm for the first time, instead of creating an empty file,\n the Realm file will be copied from the provided asset file and used instead.\n <p>\n This cannot be combined with ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies the Realm file from the given asset file path.\n <p>\n When opening the Realm for the first time, instead of creating an empty file,\n the Realm file will be copied from the provided asset file and used instead.\n <p>\n This cannot be combined with "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies the Realm file from the given asset file path."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#deleteRealmIfMigrationNeeded()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#deleteRealmIfMigrationNeeded()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#deleteRealmIfMigrationNeeded()"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " as doing so would just result in the\n copied file being deleted.\n <p>\n WARNING: This could potentially be a lengthy operation and should ideally be done on a background thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " as doing so would just result in the\n copied file being deleted.\n <p>\n WARNING: This could potentially be a lengthy operation and should ideally be done on a background thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "as doing so would just result in the\n copied file being deleted."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies the Realm file from the given asset file path.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies the Realm file from the given asset file path."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Copies the Realm file from the given asset file path."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.assetFile", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "java.lang.String", "typeName": "String", "qualifiedTypeName": "java.lang.String", "simpleTypeName": "String", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "assetFile", "typeName": "String", "asString": "String assetFile", "annotations": []}], "throwsTags": [{"_class": "ThrowsTag", "name": "@throws", "kind": "@throws", "text": "IllegalStateException if this is configured to clear its schema by calling {@link #deleteRealmIfMigrationNeeded()}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "if this is configured to clear its schema by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#deleteRealmIfMigrationNeeded()", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException if this is configured to clear its schema by calling "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#deleteRealmIfMigrationNeeded()", "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "deleteRealmIfMigrationNeeded()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "exceptionName": "IllegalStateException", "exceptionComment": "if this is configured to clear its schema by calling {@link #deleteRealmIfMigrationNeeded()}.", "exceptionType": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "assetFile path to the asset database file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "path to the asset database file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "assetFile path to the asset database file."}], "parameterName": "assetFile", "parameterComment": "path to the asset database file.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(java.lang.String)", "flatSignature": "(String)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an {@link IllegalStateException}.\n <p>\n This in particular mean that {@link #initialData(Realm.Transaction)} will not work in combination with a\n read only Realm and setting this will result in a {@link IllegalStateException} being thrown.\n </p>\n Marking a Realm as read only only applies to the Realm in this process. Other processes can still\n write to the Realm.", "name": "readOnly", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 800, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n This in particular mean that ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ".\n <p>\n This in particular mean that "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "#initialData(Realm.Transaction)", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#initialData(Realm.Transaction)"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "#initialData(Realm.Transaction)"}], "label": "", "referencedClassName": "io.realm.RealmConfiguration.Builder", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "referencedMemberName": "initialData(Realm.Transaction)"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " will not work in combination with a\n read only Realm and setting this will result in a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " will not work in combination with a\n read only Realm and setting this will result in a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "will not work in combination with a\n read only Realm and setting this will result in a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " being thrown.\n </p>\n Marking a Realm as read only only applies to the Realm in this process. Other processes can still\n write to the Realm.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " being thrown.\n </p>\n Marking a Realm as read only only applies to the Realm in this process. Other processes can still\n write to the Realm."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "being thrown."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause the Realm to become read only and all write transactions made against this Realm will\n fail with an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.readOnly", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered. See {@link DefaultCompactOnLaunchCallback} for details.", "name": "compactOnLaunch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 809, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered. See ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered. See "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "DefaultCompactOnLaunchCallback", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultCompactOnLaunchCallback"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "DefaultCompactOnLaunchCallback"}], "label": "", "referencedClassName": "io.realm.DefaultCompactOnLaunchCallback", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.DefaultCompactOnLaunchCallback", "typeName": "DefaultCompactOnLaunchCallback", "qualifiedTypeName": "io.realm.DefaultCompactOnLaunchCallback", "simpleTypeName": "DefaultCompactOnLaunchCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " for details.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " for details."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "for details."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Setting this will cause Realm to compact the Realm file if the Realm file has grown too large and a\n significant amount of space can be recovered."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.compactOnLaunch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets this to determine if the Realm file should be compacted before returned to the user. It is passed the\n total file size (data + free space) and the bytes used by data in the file.", "name": "compactOnLaunch", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 821, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user."}], "parameterName": "compactOnLaunch", "parameterComment": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "isTypeParameter": false}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user."}], "parameterName": "compactOnLaunch", "parameterComment": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "isTypeParameter": false}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user. It is passed the\n total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user. It is passed the\n total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets this to determine if the Realm file should be compacted before returned to the user."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.compactOnLaunch", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "ClassDoc", "asString": "io.realm.CompactOnLaunchCallback", "typeName": "CompactOnLaunchCallback", "qualifiedTypeName": "io.realm.CompactOnLaunchCallback", "simpleTypeName": "CompactOnLaunchCallback", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}, "name": "compactOnLaunch", "typeName": "CompactOnLaunchCallback", "asString": "CompactOnLaunchCallback compactOnLaunch", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "compactOnLaunch a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user."}], "parameterName": "compactOnLaunch", "parameterComment": "a callback called when opening a Realm for the first time during the life of a process\n                        to determine if it should be compacted before being returned to the user. It is passed\n                        the total file size (data + free space) and the bytes used by data in the file.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(io.realm.CompactOnLaunchCallback)", "flatSignature": "(CompactOnLaunchCallback)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets the maximum number of live versions in the Realm file before an {@link IllegalStateException} is thrown when\n attempting to write more data.\n <p>\n Realm is capable of concurrently handling many different versions of Realm objects. This can e.g. happen if you\n have a Realm open on many different threads or are freezing objects while data is being written to the file.\n <p>\n Under normal circumstances this is not a problem, but if the number of active versions grow too large, it will\n have a negative effect on the filesize on disk. Setting this parameters can therefore be used to prevent uses of\n Realm that can result in very large Realms.", "name": "maxNumberOfActiveVersions", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 844, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "number the maximum number of active versions before an exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the maximum number of active versions before an exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number the maximum number of active versions before an exception is thrown."}], "parameterName": "number", "parameterComment": "the maximum number of active versions before an exception is thrown.", "isTypeParameter": false}, {"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "label": ""}, {"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "number the maximum number of active versions before an exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the maximum number of active versions before an exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number the maximum number of active versions before an exception is thrown."}], "parameterName": "number", "parameterComment": "the maximum number of active versions before an exception is thrown.", "isTypeParameter": false}], "seeTags": [{"_class": "SeeTag", "name": "@see", "kind": "@see", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "<a href=\"https://realm.io/docs/java/latest/#faq-large-realm-file-size\">FAQ</a>"}], "label": ""}], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data.\n <p>\n Realm is capable of concurrently handling many different versions of Realm objects. This can e.g. happen if you\n have a Realm open on many different threads or are freezing objects while data is being written to the file.\n <p>\n Under normal circumstances this is not a problem, but if the number of active versions grow too large, it will\n have a negative effect on the filesize on disk. Setting this parameters can therefore be used to prevent uses of\n Realm that can result in very large Realms.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data.\n <p>\n Realm is capable of concurrently handling many different versions of Realm objects. This can e.g. happen if you\n have a Realm open on many different threads or are freezing objects while data is being written to the file.\n <p>\n Under normal circumstances this is not a problem, but if the number of active versions grow too large, it will\n have a negative effect on the filesize on disk. Setting this parameters can therefore be used to prevent uses of\n Realm that can result in very large Realms."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is thrown when\n attempting to write more data."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets the maximum number of live versions in the Realm file before an"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "IllegalStateException", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "IllegalStateException"}], "label": "", "referencedClassName": "java.lang.IllegalStateException", "referencedClass": {"_class": "ClassDoc", "asString": "java.lang.IllegalStateException", "typeName": "IllegalStateException", "qualifiedTypeName": "java.lang.IllegalStateException", "simpleTypeName": "IllegalStateException", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " is thrown when\n attempting to write more data."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "is thrown when\n attempting to write more data."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.maxNumberOfActiveVersions", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "long", "typeName": "long", "qualifiedTypeName": "long", "simpleTypeName": "long", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "number", "typeName": "long", "asString": "long number", "annotations": []}], "throwsTags": [], "paramTags": [{"_class": "ParamTag", "name": "@param", "kind": "@param", "text": "number the maximum number of active versions before an exception is thrown.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the maximum number of active versions before an exception is thrown."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "number the maximum number of active versions before an exception is thrown."}], "parameterName": "number", "parameterComment": "the maximum number of active versions before an exception is thrown.", "isTypeParameter": false}], "typeParamTags": [], "signature": "(long)", "flatSignature": "(long)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets whether or not calls to {@link Realm#executeTransaction} are allowed from the UI thread.\n <p>\n <b>WARNING: Realm does not allow synchronous transactions to be run on the main thread unless users explicitly opt in\n with this method.</b> We recommend diverting calls to {@code executeTransaction} to non-UI threads or, alternatively,\n using {@link Realm#executeTransactionAsync}.", "name": "allowWritesOnUiThread", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 880, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#executeTransaction", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.\n <p>\n <b>WARNING: Realm does not allow synchronous transactions to be run on the main thread unless users explicitly opt in\n with this method.</b> We recommend diverting calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.\n <p>\n <b>WARNING: Realm does not allow synchronous transactions to be run on the main thread unless users explicitly opt in\n with this method.</b> We recommend diverting calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are allowed from the UI thread."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "executeTransaction", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "executeTransaction"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "executeTransaction"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " to non-UI threads or, alternatively,\n using ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " to non-UI threads or, alternatively,\n using "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "to non-UI threads or, alternatively,\n using"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#executeTransactionAsync", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransactionAsync"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransactionAsync"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransactionAsync"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not calls to"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "Realm#executeTransaction", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Realm#executeTransaction"}], "label": "", "referencedClassName": "io.realm.Realm", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.Realm", "typeName": "Realm", "qualifiedTypeName": "io.realm.Realm", "simpleTypeName": "Realm", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "executeTransaction"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " are allowed from the UI thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "are allowed from the UI thread."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.allowWritesOnUiThread", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "allowWritesOnUiThread", "typeName": "boolean", "asString": "boolean allowWritesOnUiThread", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(boolean)", "flatSignature": "(boolean)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Sets whether or not a {@link RealmQuery} can be launched from the UI thread.\n <p>\n By default Realm allows queries on the main thread. However, by doing so your application may experience a drop of\n frames or even ANRs. We recommend diverting queries to non-UI threads or, alternatively, using\n {@link RealmQuery#findAllAsync()} or {@link RealmQuery#findFirstAsync()}.", "name": "allowQueriesOnUiThread", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 892, "column": 24, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be launched from the UI thread.\n <p>\n By default Realm allows queries on the main thread. However, by doing so your application may experience a drop of\n frames or even ANRs. We recommend diverting queries to non-UI threads or, alternatively, using\n ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be launched from the UI thread.\n <p>\n By default Realm allows queries on the main thread. However, by doing so your application may experience a drop of\n frames or even ANRs. We recommend diverting queries to non-UI threads or, alternatively, using\n "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can be launched from the UI thread."}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmQuery#findAllAsync()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findAllAsync()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findAllAsync()"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "findAllAsync()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " or ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " or "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "or"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmQuery#findFirstAsync()", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findFirstAsync()"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery#findFirstAsync()"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}, "referencedMemberName": "findFirstAsync()"}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ".", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not a ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not a "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Sets whether or not a"}]}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmQuery", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "RealmQuery"}], "label": "", "referencedClassName": "io.realm.RealmQuery", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmQuery<E>", "typeName": "RealmQuery", "qualifiedTypeName": "io.realm.RealmQuery", "simpleTypeName": "RealmQuery", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be launched from the UI thread.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": " can be launched from the UI thread."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "can be launched from the UI thread."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.allowQueriesOnUiThread", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [{"type": {"_class": "Type", "asString": "boolean", "typeName": "boolean", "qualifiedTypeName": "boolean", "simpleTypeName": "boolean", "dimension": "", "isPrimitive": true, "isClass": false, "isAnnotationType": false}, "name": "allowQueriesOnUiThread", "typeName": "boolean", "asString": "boolean allowQueriesOnUiThread", "annotations": []}], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "(boolean)", "flatSignature": "(boolean)", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}, {"commentText": "Creates the RealmConfiguration based on the builder parameters.", "name": "build", "isField": false, "isEnumConstant": false, "isConstructor": false, "isMethod": true, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 902, "column": 35, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [{"_class": "Tag", "name": "@return", "kind": "@return", "text": "the created {@link RealmConfiguration}.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the created "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "the created "}, {"_class": "SeeTag", "name": "@link", "kind": "@see", "text": "RealmConfiguration", "label": "", "referencedClassName": "io.realm.RealmConfiguration", "referencedClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public"}}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": "."}]}], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates the RealmConfiguration based on the builder parameters."}]}], "_class": "MethodDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder.build", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": [], "isAbstract": false, "isDefault": false, "returnType": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration", "typeName": "RealmConfiguration", "qualifiedTypeName": "io.realm.RealmConfiguration", "simpleTypeName": "RealmConfiguration", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false}}], "constructors": [{"commentText": "Creates an instance of the Builder for the RealmConfiguration.\n <p>\n This will use the app's own internal directory for storing the Realm file. This does not require any\n additional permissions. The default location is {@code /data/data/<packagename>/files}, but can\n change depending on vendor implementations of Android.", "name": "Builder", "isField": false, "isEnumConstant": false, "isConstructor": true, "isMethod": false, "isAnnotationTypeElement": false, "isInterface": false, "isException": false, "isError": false, "isEnum": false, "isAnnotationType": false, "isOrdinaryClass": false, "isClass": false, "isIncluded": true, "position": {"line": 520, "column": 16, "file": "./realm/realm-library/src/main/java/io/realm/RealmConfiguration.java"}, "tags": [], "seeTags": [], "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the Builder for the RealmConfiguration.\n <p>\n This will use the app's own internal directory for storing the Realm file. This does not require any\n additional permissions. The default location is ", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the Builder for the RealmConfiguration.\n <p>\n This will use the app's own internal directory for storing the Realm file. This does not require any\n additional permissions. The default location is "}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the Builder for the RealmConfiguration."}]}, {"_class": "Tag", "name": "@code", "kind": "@code", "text": "/data/data/<packagename>/files", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "/data/data/<packagename>/files"}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "/data/data/<packagename>/files"}]}, {"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but can\n change depending on vendor implementations of Android.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but can\n change depending on vendor implementations of Android."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": ", but can\n change depending on vendor implementations of Android."}]}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the Builder for the RealmConfiguration.", "inlineTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the Builder for the RealmConfiguration."}], "firstSentenceTags": [{"_class": "Tag", "name": "Text", "kind": "Text", "text": "Creates an instance of the Builder for the RealmConfiguration."}]}], "_class": "ExecutableMemberDoc", "containingClass": {"_class": "ClassDoc", "asString": "io.realm.RealmConfiguration.Builder", "typeName": "RealmConfiguration.Builder", "qualifiedTypeName": "io.realm.RealmConfiguration.Builder", "simpleTypeName": "Builder", "dimension": "", "isPrimitive": false, "isClass": true, "isAnnotationType": false, "modifiers": "public static"}, "containingPackage": {"_class": "PackageDoc", "name": "io.realm"}, "qualifiedName": "io.realm.RealmConfiguration.Builder", "modifierSpecifier": 1, "modifiers": "public", "annotations": [], "isPublic": true, "isProtected": false, "isPrivate": false, "isPackagePrivate": false, "isStatic": false, "isFinal": false, "isSynthetic": false, "thrownExceptionTypes": [], "isNative": false, "isSynchronized": false, "isVarArgs": false, "parameters": [], "throwsTags": [], "paramTags": [], "typeParamTags": [], "signature": "()", "flatSignature": "()", "typeParameters": []}], "innerClasses": []}