
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmResultTaskImpl.Executor
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_internal_async_RealmResultTaskImpl_Executor:



io.realm.internal.async
=======================

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

The Executor class represent the portion of code the RealmResultTaskImpl will execute.


Constructors
============

.. list-table::
   :header-rows: 1
   
   * - Constructor and Description
   
   * -  |   :ref:`Executor <io_realm_internal_async_RealmResultTaskImpl_Executor>`  ()
       
       
       
       
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public abstract **T (?)**
     -  |   :ref:`run <io_realm_internal_async_RealmResultTaskImpl_Executor_run__>`  ()
       
       Executes the code block.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Constructor Detail
==================

.. _Executor:

.. _Executor__:

.. _io_realm_internal_async_RealmResultTaskImpl_Executor:

.. _io_realm_internal_async_RealmResultTaskImpl_Executor__:

.. list-table::
   :header-rows: 1
   
   * -  |   public  Executor ()
   
   * - 
       
       
       
       
       
       
       
   
   


Method Detail
=============

.. _run:

.. _run__:

.. _Executor_run:

.. _Executor_run__:

.. _io_realm_internal_async_RealmResultTaskImpl_Executor_run:

.. _io_realm_internal_async_RealmResultTaskImpl_Executor_run__:



run
----

.. list-table::
   :header-rows: 1
   
   * -  |   public abstract **T (?)** run ()
   
   * - Executes the code block.
       
       
       
       
       
       
       
       
       
       
       
   
   

