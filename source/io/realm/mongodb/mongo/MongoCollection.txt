
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class MongoCollection
^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_mongo_MongoCollection:



io.realm.mongodb.mongo
======================



- `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 




The MongoCollection interface provides read and write access to documents.Use **MongoDatabase#getCollection (?)** to get a collection instance.



Before any access is possible, there must be an active, logged-in user.


.. seealso::


   
   - :ref:`MongoDatabase <io_realm_mongodb_mongo_MongoDatabase>`
      
      
      
   
   
   



Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public :ref:`MongoNamespace <io_realm_mongodb_mongo_MongoNamespace>`
     - :ref:`getNamespace <io_realm_mongodb_mongo_MongoCollection_getNamespace__>` ()
       
       Gets the namespace of this collection, i.e.
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - :ref:`getName <io_realm_mongodb_mongo_MongoCollection_getName__>` ()
       
       Gets the name of this collection
       
       
       
   
   * - public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ 
     - :ref:`getDocumentClass <io_realm_mongodb_mongo_MongoCollection_getDocumentClass__>` ()
       
       Gets the class of documents stored in this collection.
       
       
       
   
   * - public **CodecRegistry (?)**
     - :ref:`getCodecRegistry <io_realm_mongodb_mongo_MongoCollection_getCodecRegistry__>` ()
       
       Gets the codec registry for the MongoCollection.
       
       
       
   
   * - public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>`
     - :ref:`withDocumentClass <io_realm_mongodb_mongo_MongoCollection_withDocumentClass_Class_NewDocumentT__>` <**NewDocumentT (?)** >(`java.lang.Class\<NewDocumentT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Creates a new MongoCollection instance with a different default class to cast any documents returned from the database into.
       
       
       
   
   * - public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>`
     - :ref:`withCodecRegistry <io_realm_mongodb_mongo_MongoCollection_withCodecRegistry_CodecRegistry_>` (**CodecRegistry (?)** codecRegistry)
       
       Creates a new MongoCollection instance with a different codec registry.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`count <io_realm_mongodb_mongo_MongoCollection_count__>` ()
       
       Counts the number of documents in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`count <io_realm_mongodb_mongo_MongoCollection_count_Bson_>` (**Bson (?)** filter)
       
       Counts the number of documents in the collection according to the given options.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`count <io_realm_mongodb_mongo_MongoCollection_count_Bson__CountOptions_>` (**Bson (?)** filter, :ref:`CountOptions <io_realm_mongodb_mongo_options_CountOptions>` options)
       
       Counts the number of documents in the collection according to the given options.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__>` ()
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Class_ResultT__>` <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson_>` (**Bson (?)** filter)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions_>` (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__>` ()
       
       Finds all documents in the collection.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_FindOptions_>` (:ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.
       
       
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT__>` <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds all documents in the collection specifying an output class.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT___FindOptions_>` <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.
       
       
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson_>` (**Bson (?)** filter)
       
       Finds all documents in the collection that match the given filter.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson__FindOptions_>` (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection that match the given filter using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.
       
       
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds all documents in the collection that match the given filter specifying an output class.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT___FindOptions_>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection that match the given filter specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.
       
       
       
       
       
   
   * - public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`
     - :ref:`aggregate <io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson__>` (`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline)
       
       Aggregates documents according to the specified aggregation pipeline.
       
       
       
   
   * - public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`
     - :ref:`aggregate <io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson___Class_ResultT__>` <**ResultT (?)** >(`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Aggregates documents according to the specified aggregation pipeline specifying an output class.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`insertOne <io_realm_mongodb_mongo_MongoCollection_insertOne_DocumentT_>` (**DocumentT (?)** document)
       
       Inserts the provided document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`insertMany <io_realm_mongodb_mongo_MongoCollection_insertMany_List___extends_DocumentT__>` (`java.util.List\<? extends DocumentT> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  documents)
       
       Inserts one or more documents.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`deleteOne <io_realm_mongodb_mongo_MongoCollection_deleteOne_Bson_>` (**Bson (?)** filter)
       
       Removes at most one document from the collection that matches the given filter.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`deleteMany <io_realm_mongodb_mongo_MongoCollection_deleteMany_Bson_>` (**Bson (?)** filter)
       
       Removes all documents from the collection that match the given query filter.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateOne <io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson_>` (**Bson (?)** filter, **Bson (?)** update)
       
       Update a single document in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateOne <io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson__UpdateOptions_>` (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)
       
       Update a single document in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateMany <io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson_>` (**Bson (?)** filter, **Bson (?)** update)
       
       Update all documents in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateMany <io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson__UpdateOptions_>` (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)
       
       Update all documents in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson_>` (**Bson (?)** filter, **Bson (?)** update)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions_>` (**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson_>` (**Bson (?)** filter, **Bson (?)** replacement)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions_>` (**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_>` (**Bson (?)** filter)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions_>` (**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions__Class_ResultT__>` <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch__>` ()
       
       Watches a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch_BsonValue____>` (**BsonValue[] (?)** ids)
       
       Watches specified IDs in a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch_ObjectId____>` (**ObjectId[] (?)** ids)
       
       Watches specified IDs in a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watchWithFilter <io_realm_mongodb_mongo_MongoCollection_watchWithFilter_Document_>` (**Document (?)** matchFilter)
       
       Watches a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watchWithFilter <io_realm_mongodb_mongo_MongoCollection_watchWithFilter_BsonDocument_>` (**BsonDocument (?)** matchFilter)
       
       Watches a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync__>` ()
       
       Watches a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync_BsonValue____>` (**BsonValue[] (?)** ids)
       
       Watches specified IDs in a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync_ObjectId____>` (**ObjectId[] (?)** ids)
       
       Watches specified IDs in a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchWithFilterAsync <io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_Document_>` (**Document (?)** matchFilter)
       
       Watches a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchWithFilterAsync <io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_BsonDocument_>` (**BsonDocument (?)** matchFilter)
       
       Watches a collection asynchronously.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : 
   
   ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
   
   




Method Detail
=============



getNamespace
------------

.. _io_realm_mongodb_mongo_MongoCollection_getNamespace__:



public :ref:`MongoNamespace <io_realm_mongodb_mongo_MongoNamespace>` getNamespace ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the namespace of this collection, i.e. the database and collection names together.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**



getName
-------

.. _io_realm_mongodb_mongo_MongoCollection_getName__:



public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  getName ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the name of this collection
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**



getDocumentClass
----------------

.. _io_realm_mongodb_mongo_MongoCollection_getDocumentClass__:



public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  getDocumentClass ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the class of documents stored in this collection.If you used the simple :ref:`MongoDatabase.getCollection(String) <io_realm_mongodb_mongo_MongoDatabase_getCollection_String_>` to get this collection, this is **org.bson.Document (?)**.




.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**



getCodecRegistry
----------------

.. _io_realm_mongodb_mongo_MongoCollection_getCodecRegistry__:



public **CodecRegistry (?)** getCodecRegistry ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the codec registry for the MongoCollection.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**



withDocumentClass
-----------------

.. _io_realm_mongodb_mongo_MongoCollection_withDocumentClass_Class_NewDocumentT__:



public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>` withDocumentClass <**NewDocumentT (?)** >(`java.lang.Class\<NewDocumentT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Creates a new MongoCollection instance with a different default class to cast any documents returned from the database into.
.. example::


   
   **Type Parameters**
   
   - ``NewDocumentT`` - The type that the new collection will encode documents from and decode documents to.
      
      
      
   
   
   **Parameters**
   
   - ``clazz`` - the default class to which any documents returned from the database will be cast.
      
      
      
   
   
   **Returns**
   
   **Throws**



withCodecRegistry
-----------------

.. _io_realm_mongodb_mongo_MongoCollection_withCodecRegistry_CodecRegistry_:



public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>` withCodecRegistry (**CodecRegistry (?)** codecRegistry)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Creates a new MongoCollection instance with a different codec registry.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``codecRegistry`` - the new **CodecRegistry (?)** for the collection.
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**



count
-----

.. _io_realm_mongodb_mongo_MongoCollection_count__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` count ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Counts the number of documents in the collection.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_count_Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` count (**Bson (?)** filter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Counts the number of documents in the collection according to the given options.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_count_Bson__CountOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` count (**Bson (?)** filter, :ref:`CountOptions <io_realm_mongodb_mongo_options_CountOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Counts the number of documents in the collection according to the given options.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``options`` - the options describing the count
      
      
      
   
   
   **Returns**
   
   **Throws**



findOne
-------

.. _io_realm_mongodb_mongo_MongoCollection_findOne__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type
      
      
      
   
   
   **Parameters**
   
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne (**Bson (?)** filter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` struct
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` struct
      
      
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**



find
----

.. _io_realm_mongodb_mongo_MongoCollection_find__:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_FindOptions_:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find (:ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.

All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` struct for building the query
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT__:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection specifying an output class.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT___FindOptions_:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.

All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``resultClass`` - the class to decode each document into
      
      
      
   - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` struct for building the query
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson_:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find (**Bson (?)** filter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection that match the given filter.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__FindOptions_:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection that match the given filter using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.

All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` struct
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT__:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection that match the given filter specifying an output class.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT___FindOptions_:



public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds all documents in the collection that match the given filter specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` to build the query.

All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` struct
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**



aggregate
---------

.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson__:



public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` aggregate (`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Aggregates documents according to the specified aggregation pipeline.All documents will be delivered in the form of an :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``pipeline`` - the aggregation pipeline
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson___Class_ResultT__:



public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` aggregate <**ResultT (?)** >(`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Aggregates documents according to the specified aggregation pipeline specifying an output class.All documents will be delivered in the form of an :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` from which individual elements can be extracted.




.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``pipeline`` - the aggregation pipeline
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**



insertOne
---------

.. _io_realm_mongodb_mongo_MongoCollection_insertOne_DocumentT_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` insertOne (**DocumentT (?)** document)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Inserts the provided document. If the document is missing an identifier, the client should generate one.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``document`` - the document to insert
      
      
      
   
   
   **Returns**
   
   **Throws**



insertMany
----------

.. _io_realm_mongodb_mongo_MongoCollection_insertMany_List___extends_DocumentT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` insertMany (`java.util.List\<? extends DocumentT> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  documents)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Inserts one or more documents.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``documents`` - the documents to insert
      
      
      
   
   
   **Returns**
   
   **Throws**



deleteOne
---------

.. _io_realm_mongodb_mongo_MongoCollection_deleteOne_Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` deleteOne (**Bson (?)** filter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes at most one document from the collection that matches the given filter. If no documents match, the collection is not modified.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter to apply the the delete operation
      
      
      
   
   
   **Returns**
   
   **Throws**



deleteMany
----------

.. _io_realm_mongodb_mongo_MongoCollection_deleteMany_Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` deleteMany (**Bson (?)** filter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes all documents from the collection that match the given query filter. If no documents match, the collection is not modified.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter to apply the the delete operation
      
      
      
   
   
   **Returns**
   
   **Throws**



updateOne
---------

.. _io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateOne (**Bson (?)** filter, **Bson (?)** update)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update a single document in the collection according to the specified arguments.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - a document describing the query filter, which may not be null.
      
      
      
   - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson__UpdateOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateOne (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update a single document in the collection according to the specified arguments.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - a document describing the query filter, which may not be null.
      
      
      
   - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
      
      
      
   - ``updateOptions`` - the options to apply to the update operation
      
      
      
   
   
   **Returns**
   
   **Throws**



updateMany
----------

.. _io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateMany (**Bson (?)** filter, **Bson (?)** update)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update all documents in the collection according to the specified arguments.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - a document describing the query filter, which may not be null.
      
      
      
   - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson__UpdateOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateMany (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update all documents in the collection according to the specified arguments.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - a document describing the query filter, which may not be null.
      
      
      
   - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
      
      
      
   - ``updateOptions`` - the options to apply to the update operation
      
      
      
   
   
   **Returns**
   
   **Throws**



findOneAndUpdate
----------------

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate (**Bson (?)** filter, **Bson (?)** update)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and performs the given update.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``update`` - the update document
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and performs the given update.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``update`` - the update document
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate (**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and performs the given update.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``update`` - the update document
      
      
      
   - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` struct
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and performs the given update.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``update`` - the update document
      
      
      
   - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` struct
      
      
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**



findOneAndReplace
-----------------

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace (**Bson (?)** filter, **Bson (?)** replacement)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and replaces it with the given document.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``replacement`` - the document to replace the matched document with
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and replaces it with the given document.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``replacement`` - the document to replace the matched document with
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace (**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and replaces it with the given document.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``replacement`` - the document to replace the matched document with
      
      
      
   - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` struct
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and replaces it with the given document.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``replacement`` - the document to replace the matched document with
      
      
      
   - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` struct
      
      
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**



findOneAndDelete
----------------

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete (**Bson (?)** filter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and delete it.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and delete it.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions_:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete (**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and delete it.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` struct
      
      
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions__Class_ResultT__:



public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Finds a document in the collection and delete it.
.. example::


   
   **Type Parameters**
   
   - ``ResultT`` - the target document type of the iterable.
      
      
      
   
   
   **Parameters**
   
   - ``filter`` - the query filter
      
      
      
   - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` struct
      
      
      
      
      
   - ``resultClass`` - the class to decode each document into
      
      
      
   
   
   **Returns**
   
   **Throws**



watch
-----

.. _io_realm_mongodb_mongo_MongoCollection_watch__:



public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watch ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches a collection. The resulting stream will be notified of all events on this collection that the active user is authorized to see based on the configured MongoDB Realm rules.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_watch_BsonValue____:



public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watch (**BsonValue[] (?)** ids)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches specified IDs in a collection.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``ids`` - the ids to watch.
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_watch_ObjectId____:



public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watch (**ObjectId[] (?)** ids)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches specified IDs in a collection. This convenience overload supports the use case of non-**BsonValue (?)** instances of **ObjectId (?)** by wrapping them in **BsonObjectId (?)** instances for the user.


.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``ids`` - unique object identifiers of the IDs to watch.
      
      
      
   
   
   **Returns**
   
   **Throws**



watchWithFilter
---------------

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilter_Document_:



public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watchWithFilter (**Document (?)** matchFilter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches a collection. The provided document will be used as a match expression filter on the change events coming from the stream. This convenience overload supports the use of non-**BsonDocument (?)** instances for the user.

See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 


.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``matchFilter`` - the $match filter to apply to incoming change events
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilter_BsonDocument_:



public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watchWithFilter (**BsonDocument (?)** matchFilter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches a collection. The provided BSON document will be used as a match expression filter on the change events coming from the stream.See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 


.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``matchFilter`` - the $match filter to apply to incoming change events
      
      
      
   
   
   **Returns**
   
   **Throws**



watchAsync
----------

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync__:



public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchAsync ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches a collection asynchronously. The resulting stream will be notified of all events on this collection that the active user is authorized to see based on the configured MongoDB Realm rules.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync_BsonValue____:



public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchAsync (**BsonValue[] (?)** ids)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches specified IDs in a collection asynchronously.
.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``ids`` - the ids to watch.
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync_ObjectId____:



public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchAsync (**ObjectId[] (?)** ids)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches specified IDs in a collection asynchronously. This convenience overload supports the use case of non-**BsonValue (?)** instances of **ObjectId (?)** by wrapping them in **BsonObjectId (?)** instances for the user.


.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``ids`` - unique object identifiers of the IDs to watch.
      
      
      
   
   
   **Returns**
   
   **Throws**



watchWithFilterAsync
--------------------

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_Document_:



public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchWithFilterAsync (**Document (?)** matchFilter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches a collection asynchronously. The provided document will be used as a match expression filter on the change events coming from the stream. This convenience overload supports the use of non-**BsonDocument (?)** instances for the user.

See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 


.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``matchFilter`` - the $match filter to apply to incoming change events
      
      
      
   
   
   **Returns**
   
   **Throws**

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_BsonDocument_:



public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchWithFilterAsync (**BsonDocument (?)** matchFilter)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Watches a collection asynchronously. The provided BSON document will be used as a match expression filter on the change events coming from the stream.See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 


.. example::


   
   **Type Parameters**
   
   
   
   **Parameters**
   
   - ``matchFilter`` - the $match filter to apply to incoming change events
      
      
      
   
   
   **Returns**
   
   **Throws**


